{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/diaspora/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/diaspora/source/css/diaspora.css","path":"css/diaspora.css","modified":0,"renderable":1},{"_id":"themes/diaspora/source/js/diaspora.js","path":"js/diaspora.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/js/plugin.js","path":"js/plugin.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe.css","path":"photoswipe/photoswipe.css","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.js","path":"photoswipe/photoswipe-ui-default.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.min.js","path":"photoswipe/photoswipe-ui-default.min.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe.min.js","path":"photoswipe/photoswipe.min.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe.js","path":"photoswipe/photoswipe.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover.jpg","path":"img/cover.jpg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/welcome-cover.jpg","path":"img/welcome-cover.jpg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.css","path":"photoswipe/default-skin/default-skin.css","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.png","path":"photoswipe/default-skin/default-skin.png","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.svg","path":"photoswipe/default-skin/default-skin.svg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/preloader.gif","path":"photoswipe/default-skin/preloader.gif","modified":0,"renderable":1}],"Cache":[{"_id":"themes/diaspora/.gitignore","hash":"711861c1bdc49a4d5c6704a22546dcafc31d4730","modified":1558691980356},{"_id":"themes/diaspora/LICENSE","hash":"63175a16773044bed84e1778009a54ad03dd5520","modified":1558691980357},{"_id":"themes/diaspora/README.md","hash":"c2118504a024e7eade2ad2a0cc293db8d3eb63fa","modified":1558691980357},{"_id":"themes/diaspora/_config.yml","hash":"a13a8c1ebcac0944c55478eff43312b1b41e20c8","modified":1558946919736},{"_id":"source/_data/links.yml","hash":"807458155691c8954ef25ed62e68a728869c0862","modified":1558316169598},{"_id":"source/_posts/Android-iOS-App代理包一键生成.md","hash":"2f7986c51db51012cf015e72e42713b7d2cdda6a","modified":1558317741737},{"_id":"source/_posts/Flutter笔记之MaterialApp.md","hash":"fdb7d8d26d029b1e6ac46334c2cd1ca15ec58fd0","modified":1558943997366},{"_id":"source/_posts/BeautifulSoup-requests-爬虫初体验.md","hash":"2c37db21924adb7ff710738c58e9dffcea83aba9","modified":1558600807727},{"_id":"source/_posts/Flutter-笔记之-Container.md","hash":"86bdb82d77ba99fb9768ffba5288128d301b74d1","modified":1558943720809},{"_id":"source/_posts/Flutter-之Row-Column.md","hash":"fb2f486ae5c76211fe55816120d63d78c7f6ee27","modified":1558943705070},{"_id":"source/_posts/Node-js安装.md","hash":"1e1aa339b60c4c4e7d4deef2698b5df3206a1796","modified":1558316169598},{"_id":"source/_posts/mac电脑开启文件共享服务.md","hash":"a41631849307348c64ea1d42c9398e65a49e35aa","modified":1558316169599},{"_id":"source/about/index.md","hash":"9030e8caca7bb162380903ccf65226fc6ec5ec50","modified":1558316169599},{"_id":"source/_posts/缓存腾讯视频文件.md","hash":"3292ef2eb9cdb998acdfe40582b6936c5a82f62f","modified":1558316169599},{"_id":"source/categories/index.md","hash":"c3eea83bae6e252a8ec5fad0be98945d05fb2d8a","modified":1558316169599},{"_id":"source/links/index.md","hash":"e1d0c2c3fec67b73da8fe3b8e178ac0d45c3f80a","modified":1558316169600},{"_id":"source/_posts/iOS自动布局管理UIScrollview-并自适应软键盘弹出.md","hash":"366729a9266125c616afae1666afdd8d4cdb3410","modified":1558317761400},{"_id":"source/tags/index.md","hash":"0b47b90c67912d53fe427216fcc5a4903a974ab4","modified":1558316169600},{"_id":"source/messages/index.md","hash":"f07361c97cac65678175c655ffb769286f895461","modified":1558316169600},{"_id":"themes/diaspora/languages/default.yml","hash":"1b2b75ca9ff3bfeddb596239889b584cdfcecc32","modified":1558691980357},{"_id":"themes/diaspora/languages/it.yml","hash":"6ae71000ed039f56572143ffe90da17b95d1a66f","modified":1558691980358},{"_id":"themes/diaspora/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1558691980358},{"_id":"themes/diaspora/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1558691980358},{"_id":"themes/diaspora/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1558691980358},{"_id":"themes/diaspora/languages/zh-CN.yml","hash":"ccbba6315760755926f5abfe1b98c225a6650581","modified":1558691980359},{"_id":"themes/diaspora/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1558691980358},{"_id":"themes/diaspora/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1558691980359},{"_id":"themes/diaspora/scripts/page_title.js","hash":"35dbc39e4edd53b20f5433dc0d1708024049186d","modified":1558691980364},{"_id":"themes/diaspora/source/.DS_Store","hash":"2d4820e20e4690efd4222dbf9fa2858a2b6c8a5e","modified":1558947804671},{"_id":"themes/diaspora/layout/archive.ejs","hash":"e50d2e66e8a66789d6a8ef456979aa05143224ce","modified":1558691980363},{"_id":"themes/diaspora/layout/category.ejs","hash":"920114db892fe39fab097c4f65d8ffc9b2a76b69","modified":1558691980363},{"_id":"themes/diaspora/layout/index.ejs","hash":"7ccb03f40fada2cd74c00554e5b6718508545d71","modified":1558691980363},{"_id":"themes/diaspora/layout/layout.ejs","hash":"bbead31ed8f81cb75b22d6c220793c9ed4ff3e66","modified":1558691980364},{"_id":"themes/diaspora/layout/post.ejs","hash":"e585d8b4680c52dccfc40ffa6b2c5df515bf20d2","modified":1558691980364},{"_id":"themes/diaspora/layout/page.ejs","hash":"c311e177fc5eea6954e313374e73bd690814c91a","modified":1558691980364},{"_id":"themes/diaspora/layout/tag.ejs","hash":"920114db892fe39fab097c4f65d8ffc9b2a76b69","modified":1558691980364},{"_id":"themes/diaspora/.github/ISSUE_TEMPLATE/issues-template.md","hash":"34869fddae53c69c2648712d2f82fe9cb6e9cb0d","modified":1558691980356},{"_id":"themes/diaspora/source/img/logo.png","hash":"855b5e73d2c90a65c8d67815f5d4d0f414cb8b08","modified":1558948299000},{"_id":"themes/diaspora/source/img/favicon.ico","hash":"38cd870509b72c00c0ddd99180a3b2c86df53623","modified":1558691980366},{"_id":"themes/diaspora/source/css/diaspora.css","hash":"7de3f43e4084e4594cdefb3ac36b0e628987c25b","modified":1558691980364},{"_id":"themes/diaspora/source/js/diaspora.js","hash":"559740e9f119855dcd4b94435c8bc532ba7caeb3","modified":1558945728117},{"_id":"themes/diaspora/source/js/plugin.js","hash":"0ac6bf36a9a11ca6fad0af1f20e5705bc326abf4","modified":1558691980368},{"_id":"themes/diaspora/source/photoswipe/photoswipe.css","hash":"a31fa495095783ef5a84ba4dba0bd6f7de3b07ea","modified":1558691980369},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.js","hash":"c844cca2f9a9969a810a0fb534063e008424c936","modified":1558691980369},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.min.js","hash":"d80b713ca1bab90f27a8af7d8e43563f0fe81860","modified":1558691980369},{"_id":"themes/diaspora/source/photoswipe/photoswipe.min.js","hash":"791703278e7c576b08b67f18404bae9eb8cebfaf","modified":1558691980370},{"_id":"themes/diaspora/layout/_partial/list.ejs","hash":"8e03499580aa81ec0b4c8316347b4e3839849007","modified":1558691980361},{"_id":"themes/diaspora/layout/_partial/categories.ejs","hash":"02cf5a962644da311e52fa441d2b300b0c9286a5","modified":1558691980359},{"_id":"themes/diaspora/layout/_partial/google-analytics.ejs","hash":"4806289a1c3de19a1cc4e6242c82cdd429c3bfe8","modified":1558691980360},{"_id":"themes/diaspora/layout/_partial/head.ejs","hash":"af13f26ebecc228ff8893cf458959aec9ba328d0","modified":1558691980361},{"_id":"themes/diaspora/layout/_partial/pagination.ejs","hash":"23bf862b3b8a3cd831850504d9b5a24d21b005e7","modified":1558691980361},{"_id":"themes/diaspora/layout/_partial/photoswipe.ejs","hash":"d1d36cf0a2c03ff3c2acbc208fe11cd0afd8b7bd","modified":1558691980362},{"_id":"themes/diaspora/layout/_partial/menu.ejs","hash":"e2f1c6944b269760456575fb7fed713fa04a1761","modified":1558691980361},{"_id":"themes/diaspora/layout/_partial/tags.ejs","hash":"16cfcf585417ec279c12d8cfbcf6383bf7f2a8c6","modified":1558691980363},{"_id":"themes/diaspora/layout/_partial/scripts.ejs","hash":"041a2e405157447b20b5d339596f35a2ec89808c","modified":1558691980363},{"_id":"themes/diaspora/layout/_partial/screen.ejs","hash":"dd52f41ad214020646674df3db50ae87e6e4542b","modified":1558691980363},{"_id":"themes/diaspora/source/js/jquery.min.js","hash":"3f1b0e9e54af1af2db2c8a639530448723462151","modified":1558691980368},{"_id":"themes/diaspora/source/photoswipe/photoswipe.js","hash":"30967789eb2a3e1da9927e71f4f3c5339ebed39a","modified":1558691980370},{"_id":"themes/diaspora/source/img/cover.jpg","hash":"dc7103d4c4e05650595712b3fa395b89726df32b","modified":1558691980365},{"_id":"themes/diaspora/source/img/welcome-cover.jpg","hash":"c393dfeb52aff20a9921c1f56e2ce127683ab35a","modified":1558691980367},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.css","hash":"5763bd1a8015774f37215359bfcb5edd65d198a6","modified":1558691980369},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1558691980369},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1558691980369},{"_id":"themes/diaspora/source/photoswipe/default-skin/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1558691980369},{"_id":"themes/diaspora/layout/_partial/post/gitalk.ejs","hash":"7b684b561eca872b8e18e270c07f459ea3634676","modified":1558691980362},{"_id":"themes/diaspora/layout/_partial/post/date.ejs","hash":"6f2d1aa9562df343b797d25705f1945323c465fb","modified":1558691980362},{"_id":"themes/diaspora/layout/_partial/post/article.ejs","hash":"b2dbaf24cc2fa05be414b97ec5f0315328a8d84c","modified":1558691980362},{"_id":"themes/diaspora/layout/_partial/post/header.ejs","hash":"36f40f61e49c9ba1a2d1d9cb33ad8d797bd92efe","modified":1558691980362},{"_id":"themes/diaspora/layout/_partial/post/item.ejs","hash":"b7a75aa667765b5c3a16b3b9a71ed38ea0a128a4","modified":1558691980362},{"_id":"themes/diaspora/layout/_partial/post/tag.ejs","hash":"c2b4ce7e1d7eed59f4c333915cd431f008f898e3","modified":1558691980362},{"_id":"themes/diaspora/layout/_partial/post/title.ejs","hash":"33f2a96f17fb1efa354c92aef906d96984abd9ab","modified":1558691980363},{"_id":"public/about/index.html","hash":"76dd97626893a91d616d814eeb8018740bc9c1b3","modified":1558948402609},{"_id":"public/categories/index.html","hash":"5e4988e454caa342a570d3bf96f47f35651b1421","modified":1558948402609},{"_id":"public/links/index.html","hash":"b464d03090e7150fd9ebf9248b835c0645d55281","modified":1558948402610},{"_id":"public/tags/index.html","hash":"d2b245bab479ef9887c38199f6e569b76bc0a53c","modified":1558948402610},{"_id":"public/messages/index.html","hash":"b464d03090e7150fd9ebf9248b835c0645d55281","modified":1558948402610},{"_id":"public/2019/05/19/mac电脑开启文件共享服务/index.html","hash":"f9b271012139f139dd60611544d79cb720749b6d","modified":1558948402610},{"_id":"public/archives/index.html","hash":"5c45070ec0179bb64ce9a01b06c9b4fff07045bf","modified":1558948402610},{"_id":"public/archives/2019/index.html","hash":"126381151b74a5b896312a76c9f72963ef94e285","modified":1558948402610},{"_id":"public/archives/2019/05/index.html","hash":"b267ac02708568a3242578fe73339c4ece0eace2","modified":1558948402611},{"_id":"public/categories/Android/index.html","hash":"0918f09f0ec6619c7eb9f78b371c6c407bd1759c","modified":1558948402611},{"_id":"public/categories/Flutter/index.html","hash":"2ec4b314ba2bcaea074320ada6048e61bd2044ac","modified":1558948402611},{"_id":"public/categories/爬虫/index.html","hash":"0e0d9f0b0b48204960d7d96bd64255b5879fc496","modified":1558948402611},{"_id":"public/categories/Android/iOS/index.html","hash":"68c6fbd12f0e8fd56d7ad92c03d2651131a1bb56","modified":1558948402611},{"_id":"public/categories/js/index.html","hash":"0c6f5d4bcc17f9905ae6424f43fc4ac88ddf59b0","modified":1558948402611},{"_id":"public/categories/劈柴/index.html","hash":"ab4db05f1f4d3c9b637983cf6b9bbee16c00dd93","modified":1558948402611},{"_id":"public/categories/iOS/index.html","hash":"05e60a136fbdec47047e830b50d575eabb14ce75","modified":1558948402611},{"_id":"public/index.html","hash":"13fbab0bc2f6b8ae9b407849d51f0859680e8fd9","modified":1558948402611},{"_id":"public/tags/Python/index.html","hash":"7b10bc96e5383b408d27b5a6a99f54632f72306c","modified":1558948402611},{"_id":"public/tags/Android/index.html","hash":"be40cc43027c2850e139adb01c80752e689cbcd9","modified":1558948402611},{"_id":"public/tags/iOS/index.html","hash":"4243c2247e5a07ab02346c66902139fdde3c3ae3","modified":1558948402611},{"_id":"public/tags/BeautifulSoup/index.html","hash":"356a972a53e7342e25f91fd346f0a41be16566d9","modified":1558948402612},{"_id":"public/tags/js/index.html","hash":"efc950db358dc19f998bd87c9a30f5ecd0d53400","modified":1558948402612},{"_id":"public/tags/Python2-7/index.html","hash":"8a406d1afc894e40f28ccad1bd6998e3089210ff","modified":1558948402612},{"_id":"public/tags/macOS/index.html","hash":"9d65b0dc5eeaab477e21ec3e66fce2e60fa45249","modified":1558948402612},{"_id":"public/tags/ffmpeg/index.html","hash":"3ccd0543341ba4b9c0f2cf477ca20a4bb467fb00","modified":1558948402612},{"_id":"public/tags/自动布局/index.html","hash":"fe46b379d11701d5b0d3f78d5d3d1465fddc6510","modified":1558948402612},{"_id":"public/2019/05/27/Flutter-之Row-Column/index.html","hash":"7b0801f7155ea16181b71629fc16b174813fb40c","modified":1558948402612},{"_id":"public/2019/05/25/Flutter-笔记之-Container/index.html","hash":"f034682b4c984bdc715c4b1766689e0a8fd3814a","modified":1558948402612},{"_id":"public/2019/05/24/Flutter笔记之MaterialApp/index.html","hash":"737ca080938f8f45884efd5bc9f30e08f62c4c87","modified":1558948402612},{"_id":"public/2019/05/22/BeautifulSoup-requests-爬虫初体验/index.html","hash":"64ebfad15185505e3c48699e8af071f56d73e185","modified":1558948402612},{"_id":"public/2019/05/19/Node-js安装/index.html","hash":"0ac9df6c3c48b66be5e16bde9b0564e0d430e89e","modified":1558948402612},{"_id":"public/2019/05/19/iOS自动布局管理UIScrollview-并自适应软键盘弹出/index.html","hash":"5b121fe0d11cdc4bd5f2fccc533ac503a76b4ac0","modified":1558948402612},{"_id":"public/2019/05/19/Android-iOS-App代理包一键生成/index.html","hash":"b104f8e2e724feac474fcc267a23e9d09543829d","modified":1558948402613},{"_id":"public/2019/05/19/缓存腾讯视频文件/index.html","hash":"130a0b85b83d2f697c1b40eab8ad72456d861801","modified":1558948402613},{"_id":"public/img/logo.png","hash":"855b5e73d2c90a65c8d67815f5d4d0f414cb8b08","modified":1558948402615},{"_id":"public/img/favicon.ico","hash":"38cd870509b72c00c0ddd99180a3b2c86df53623","modified":1558948402615},{"_id":"public/photoswipe/default-skin/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1558948402615},{"_id":"public/photoswipe/default-skin/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1558948402616},{"_id":"public/photoswipe/default-skin/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1558948402616},{"_id":"public/photoswipe/photoswipe.css","hash":"a31fa495095783ef5a84ba4dba0bd6f7de3b07ea","modified":1558948402623},{"_id":"public/photoswipe/photoswipe-ui-default.min.js","hash":"d80b713ca1bab90f27a8af7d8e43563f0fe81860","modified":1558948402623},{"_id":"public/photoswipe/default-skin/default-skin.css","hash":"5763bd1a8015774f37215359bfcb5edd65d198a6","modified":1558948402623},{"_id":"public/css/diaspora.css","hash":"7de3f43e4084e4594cdefb3ac36b0e628987c25b","modified":1558948402623},{"_id":"public/js/diaspora.js","hash":"559740e9f119855dcd4b94435c8bc532ba7caeb3","modified":1558948402623},{"_id":"public/photoswipe/photoswipe-ui-default.js","hash":"c844cca2f9a9969a810a0fb534063e008424c936","modified":1558948402623},{"_id":"public/js/plugin.js","hash":"0ac6bf36a9a11ca6fad0af1f20e5705bc326abf4","modified":1558948402623},{"_id":"public/photoswipe/photoswipe.min.js","hash":"791703278e7c576b08b67f18404bae9eb8cebfaf","modified":1558948402623},{"_id":"public/photoswipe/photoswipe.js","hash":"30967789eb2a3e1da9927e71f4f3c5339ebed39a","modified":1558948402623},{"_id":"public/js/jquery.min.js","hash":"3f1b0e9e54af1af2db2c8a639530448723462151","modified":1558948402624},{"_id":"public/img/cover.jpg","hash":"dc7103d4c4e05650595712b3fa395b89726df32b","modified":1558948402624},{"_id":"public/img/welcome-cover.jpg","hash":"c393dfeb52aff20a9921c1f56e2ce127683ab35a","modified":1558948402624}],"Category":[{"name":"Android","_id":"cjw65m7fw00023ivokiadjwxi"},{"name":"Flutter","_id":"cjw65m7g100073ivo9lmwam9z"},{"name":"爬虫","_id":"cjw65m7g4000b3ivoqx1ypihk"},{"name":"iOS","parent":"cjw65m7fw00023ivokiadjwxi","_id":"cjw65m7g7000i3ivowkl71vpj"},{"name":"js","_id":"cjw65m7ga000s3ivolat5kpkj"},{"name":"劈柴","_id":"cjw65m7ga000x3ivoiuhsc8yt"},{"name":"iOS","_id":"cjw65m7gq001l3ivo32ldhaa9"}],"Data":[{"_id":"links","data":[{"name":"Yaooort","describe":"大傻子","link":"http://www.yaooort.com","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4172.jpg"},{"name":"GitHub","describe":"直男网","link":"https://github.com/yaooort","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3829.jpg"}]}],"Page":[{"title":"关于","date":"2019-05-19T12:31:40.000Z","subtitle":null,"cover":null,"type":"about","_content":"### Oort\n\n**「90后中年油腻男」** **「男」** **「西安」**\n\n### 熟悉技能\n\n    - Android\n\n    - iOS\n\n    - vue\n\n    - python\n\n    - flask\n\n    - flutter\n\n### 个人爱好\n    - 台球\n    \n    - 旅游\n    \n    - 摄影\n    \n    - 电竞\n\n\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2019-05-19 20:31:40\nsubtitle:\ncover:\ntype: about\n---\n### Oort\n\n**「90后中年油腻男」** **「男」** **「西安」**\n\n### 熟悉技能\n\n    - Android\n\n    - iOS\n\n    - vue\n\n    - python\n\n    - flask\n\n    - flutter\n\n### 个人爱好\n    - 台球\n    \n    - 旅游\n    \n    - 摄影\n    \n    - 电竞\n\n\n","updated":"2019-05-20T01:36:09.599Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjw65m7gk001f3ivo354jbmq4","content":"<h3 id=\"oort\"><a class=\"markdownIt-Anchor\" href=\"#oort\"></a> Oort</h3>\n<p><strong>「90后中年油腻男」</strong> <strong>「男」</strong> <strong>「西安」</strong></p>\n<h3 id=\"熟悉技能\"><a class=\"markdownIt-Anchor\" href=\"#熟悉技能\"></a> 熟悉技能</h3>\n<pre><code>- Android\n\n- iOS\n\n- vue\n\n- python\n\n- flask\n\n- flutter\n</code></pre>\n<h3 id=\"个人爱好\"><a class=\"markdownIt-Anchor\" href=\"#个人爱好\"></a> 个人爱好</h3>\n<pre><code>- 台球\n\n- 旅游\n\n- 摄影\n\n- 电竞\n</code></pre>\n","site":{"data":{"links":[{"name":"Yaooort","describe":"大傻子","link":"http://www.yaooort.com","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4172.jpg"},{"name":"GitHub","describe":"直男网","link":"https://github.com/yaooort","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3829.jpg"}]}},"excerpt":"","more":"<h3 id=\"oort\"><a class=\"markdownIt-Anchor\" href=\"#oort\"></a> Oort</h3>\n<p><strong>「90后中年油腻男」</strong> <strong>「男」</strong> <strong>「西安」</strong></p>\n<h3 id=\"熟悉技能\"><a class=\"markdownIt-Anchor\" href=\"#熟悉技能\"></a> 熟悉技能</h3>\n<pre><code>- Android\n\n- iOS\n\n- vue\n\n- python\n\n- flask\n\n- flutter\n</code></pre>\n<h3 id=\"个人爱好\"><a class=\"markdownIt-Anchor\" href=\"#个人爱好\"></a> 个人爱好</h3>\n<pre><code>- 台球\n\n- 旅游\n\n- 摄影\n\n- 电竞\n</code></pre>\n"},{"title":"文章分类","date":"2019-05-19T12:29:49.000Z","subtitle":null,"cover":null,"type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 文章分类\ndate: 2019-05-19 20:29:49\nsubtitle:\ncover:\ntype: categories\n---\n","updated":"2019-05-20T01:36:09.599Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjw65m7gm001h3ivo3ee3zdsl","content":"","site":{"data":{"links":[{"name":"Yaooort","describe":"大傻子","link":"http://www.yaooort.com","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4172.jpg"},{"name":"GitHub","describe":"直男网","link":"https://github.com/yaooort","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3829.jpg"}]}},"excerpt":"","more":""},{"title":"个人其他站点","date":"2019-05-19T12:18:37.000Z","subtitle":null,"cover":null,"type":"links","_content":"","source":"links/index.md","raw":"---\ntitle: 个人其他站点\ndate: 2019-05-19 20:18:37\nsubtitle: \ncover:\ntype: links\n---\n","updated":"2019-05-20T01:36:09.600Z","path":"links/index.html","comments":1,"layout":"page","_id":"cjw65m7gp001k3ivoywqyapkg","content":"","site":{"data":{"links":[{"name":"Yaooort","describe":"大傻子","link":"http://www.yaooort.com","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4172.jpg"},{"name":"GitHub","describe":"直男网","link":"https://github.com/yaooort","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3829.jpg"}]}},"excerpt":"","more":""},{"title":"标签","date":"2019-05-19T12:30:25.000Z","subtitle":null,"cover":null,"type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-05-19 20:30:25\nsubtitle:\ncover:\ntype: tags\n---\n","updated":"2019-05-20T01:36:09.600Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjw65m7gq001m3ivoj6353jzi","content":"","site":{"data":{"links":[{"name":"Yaooort","describe":"大傻子","link":"http://www.yaooort.com","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4172.jpg"},{"name":"GitHub","describe":"直男网","link":"https://github.com/yaooort","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3829.jpg"}]}},"excerpt":"","more":""},{"title":"留言板","date":"2019-05-19T12:31:02.000Z","subtitle":"留吧反正我也不会看😆","cover":null,"type":"messages","_content":"","source":"messages/index.md","raw":"---\ntitle: 留言板\ndate: 2019-05-19 20:31:02\nsubtitle: 留吧反正我也不会看😆\ncover:\ntype: messages\n---\n","updated":"2019-05-20T01:36:09.600Z","path":"messages/index.html","comments":1,"layout":"page","_id":"cjw65m7gr001o3ivoc61d4ojr","content":"","site":{"data":{"links":[{"name":"Yaooort","describe":"大傻子","link":"http://www.yaooort.com","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4172.jpg"},{"name":"GitHub","describe":"直男网","link":"https://github.com/yaooort","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3829.jpg"}]}},"excerpt":"","more":""}],"Post":[{"title":"Android/iOS-App代理包一键生成","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3279.jpg","date":"2019-05-19T14:50:39.000Z","subtitle":"快速生成代理包","_content":"\n\n# APP快速打代理包工具\n\n\n*前言：*\n代理包可以快速帮助推广运营进行多渠道分发：  \n\n - 实现多渠道打包及iOS企业级分发包的快速生成渠道包\n - 只需要一个Android iOS原始包即可快速生成N个渠道商代理包\n - 支持生成之后快速扫二维码下载该渠道包测试\n - python单文件GUI开发。方便拆解及替换app内文件，及功能模块单独使用\n - 可编译为windows桌面程序和mac桌面程序\n\n-------------------\n\n## 上效果图 \n![Jietu20180727-103944.jpg](http://prr6elh1d.sabkt.gdipper.com/static/images/2975942-78ee969e74ad85b6.jpg)\n\n## 注意事项\n\n1. Android 签名打包时Signature Versions不要勾选V2(Full APK Signature)(注意)\n   不然会导致签名出的包进行全包校验时安装失败。（由于打包时会将文件写入Apk中，Apk文件sha256变化之后 签名文件认证不过通）\n2. ios 可以使用企业签名包签出原始包进行打包\n3. Android签过之后的包不能再签，需要改Python代码\n\n-------------------\n## 使用方式\n\n### Android代码\n```java\n   /**\n     * 从apk中获取版本信息\n     *\n     * @param context\n     * @param channelPrefix 渠道前缀\n     * @return\n     */\n    public static String getChannelFromApk(Context context, String channelPrefix) {\n        //从apk包中获取\n        ApplicationInfo appinfo = context.getApplicationInfo();\n        String sourceDir = appinfo.sourceDir;\n        //默认放在meta-inf/里， 所以需要再拼接一下\n        String key = \"META-INF/\" + channelPrefix;\n        String ret = \"\";\n        ZipFile zipfile = null;\n        try {\n            zipfile = new ZipFile(sourceDir);\n            Enumeration<?> entries = zipfile.entries();\n            while (entries.hasMoreElements()) {\n                ZipEntry entry = ((ZipEntry) entries.nextElement());\n                String entryName = entry.getName();\n                if (entryName.startsWith(key)) {\n                    ret = entryName;\n                    break;\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            if (zipfile != null) {\n                try {\n                    zipfile.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        String[] split = ret.split(channelPrefix);\n        String channel = \"\";\n        if (split != null && split.length >= 2) {\n            channel = ret.substring(key.length());\n        }\n        StorageLW.getSingleton().put(StorageKEY.APP_CHANNEL, channel);\n        return channel;\n    }\n```\n\n### iOS使用方式\n```objective-c\n    /*! 读取渠道ID */\n    + (NSString *)channel{\n       NSString *resourceDirectory = [[NSBundle mainBundle] resourcePath];\n       NSString *CodeSignaturePath = [resourceDirectory stringByAppendingPathComponent:@\"/_CodeSignature/AppInfo.plist\"];\n       NSMutableDictionary *data = [[NSMutableDictionary alloc]initWithContentsOfFile:CodeSignaturePath];\n       NSString *cid = [data objectForKey:@\"channel\"];\n       if(!cid){\n           cid = @\"\";\n       }\n       return cid;\n    }\n```\n\n## 实现原理\n\n\n\n\n- *Android apk的zip包内META-INF描述文件夹内写入空文件。文件名就是我们要打的渠道包ID\n\n\n- *iOS 在ipa内选择Payload/{$APP_NAME}/_CodeSignaturre/ 下写入AppInfo.plist文件 然后读取该文件内的channel key\n\n\n## 使用区域网服务器作为下载服务器，如果要使用iOS扫描下载安装。则需要修改本地python代码 搭建本地https环境 创建CA证书安装到iPhone上\n\n## 使用Python 源码 需要安装依赖库\n\n\n\n\n\n# [源码](https://github.com/yaooort/Apputils)\n\n","source":"_posts/Android-iOS-App代理包一键生成.md","raw":"---\ntitle: Android/iOS-App代理包一键生成\ncover: http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3279.jpg\ndate: 2019-05-19 22:50:39\nsubtitle: 快速生成代理包\ncategories:\n- Android\n- iOS\ntags:\n- Python\n- Android\n- iOS\n---\n\n\n# APP快速打代理包工具\n\n\n*前言：*\n代理包可以快速帮助推广运营进行多渠道分发：  \n\n - 实现多渠道打包及iOS企业级分发包的快速生成渠道包\n - 只需要一个Android iOS原始包即可快速生成N个渠道商代理包\n - 支持生成之后快速扫二维码下载该渠道包测试\n - python单文件GUI开发。方便拆解及替换app内文件，及功能模块单独使用\n - 可编译为windows桌面程序和mac桌面程序\n\n-------------------\n\n## 上效果图 \n![Jietu20180727-103944.jpg](http://prr6elh1d.sabkt.gdipper.com/static/images/2975942-78ee969e74ad85b6.jpg)\n\n## 注意事项\n\n1. Android 签名打包时Signature Versions不要勾选V2(Full APK Signature)(注意)\n   不然会导致签名出的包进行全包校验时安装失败。（由于打包时会将文件写入Apk中，Apk文件sha256变化之后 签名文件认证不过通）\n2. ios 可以使用企业签名包签出原始包进行打包\n3. Android签过之后的包不能再签，需要改Python代码\n\n-------------------\n## 使用方式\n\n### Android代码\n```java\n   /**\n     * 从apk中获取版本信息\n     *\n     * @param context\n     * @param channelPrefix 渠道前缀\n     * @return\n     */\n    public static String getChannelFromApk(Context context, String channelPrefix) {\n        //从apk包中获取\n        ApplicationInfo appinfo = context.getApplicationInfo();\n        String sourceDir = appinfo.sourceDir;\n        //默认放在meta-inf/里， 所以需要再拼接一下\n        String key = \"META-INF/\" + channelPrefix;\n        String ret = \"\";\n        ZipFile zipfile = null;\n        try {\n            zipfile = new ZipFile(sourceDir);\n            Enumeration<?> entries = zipfile.entries();\n            while (entries.hasMoreElements()) {\n                ZipEntry entry = ((ZipEntry) entries.nextElement());\n                String entryName = entry.getName();\n                if (entryName.startsWith(key)) {\n                    ret = entryName;\n                    break;\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            if (zipfile != null) {\n                try {\n                    zipfile.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        String[] split = ret.split(channelPrefix);\n        String channel = \"\";\n        if (split != null && split.length >= 2) {\n            channel = ret.substring(key.length());\n        }\n        StorageLW.getSingleton().put(StorageKEY.APP_CHANNEL, channel);\n        return channel;\n    }\n```\n\n### iOS使用方式\n```objective-c\n    /*! 读取渠道ID */\n    + (NSString *)channel{\n       NSString *resourceDirectory = [[NSBundle mainBundle] resourcePath];\n       NSString *CodeSignaturePath = [resourceDirectory stringByAppendingPathComponent:@\"/_CodeSignature/AppInfo.plist\"];\n       NSMutableDictionary *data = [[NSMutableDictionary alloc]initWithContentsOfFile:CodeSignaturePath];\n       NSString *cid = [data objectForKey:@\"channel\"];\n       if(!cid){\n           cid = @\"\";\n       }\n       return cid;\n    }\n```\n\n## 实现原理\n\n\n\n\n- *Android apk的zip包内META-INF描述文件夹内写入空文件。文件名就是我们要打的渠道包ID\n\n\n- *iOS 在ipa内选择Payload/{$APP_NAME}/_CodeSignaturre/ 下写入AppInfo.plist文件 然后读取该文件内的channel key\n\n\n## 使用区域网服务器作为下载服务器，如果要使用iOS扫描下载安装。则需要修改本地python代码 搭建本地https环境 创建CA证书安装到iPhone上\n\n## 使用Python 源码 需要安装依赖库\n\n\n\n\n\n# [源码](https://github.com/yaooort/Apputils)\n\n","slug":"Android-iOS-App代理包一键生成","published":1,"updated":"2019-05-20T02:02:21.737Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjw65m7fr00003ivo1uffkwug","content":"<h1 id=\"app快速打代理包工具\"><a class=\"markdownIt-Anchor\" href=\"#app快速打代理包工具\"></a> APP快速打代理包工具</h1>\n<p><em>前言：</em><br>\n代理包可以快速帮助推广运营进行多渠道分发：</p>\n<ul>\n<li>实现多渠道打包及iOS企业级分发包的快速生成渠道包</li>\n<li>只需要一个Android iOS原始包即可快速生成N个渠道商代理包</li>\n<li>支持生成之后快速扫二维码下载该渠道包测试</li>\n<li>python单文件GUI开发。方便拆解及替换app内文件，及功能模块单独使用</li>\n<li>可编译为windows桌面程序和mac桌面程序</li>\n</ul>\n<hr>\n<h2 id=\"上效果图\"><a class=\"markdownIt-Anchor\" href=\"#上效果图\"></a> 上效果图</h2>\n<p><img src=\"http://prr6elh1d.sabkt.gdipper.com/static/images/2975942-78ee969e74ad85b6.jpg\" alt=\"Jietu20180727-103944.jpg\"></p>\n<h2 id=\"注意事项\"><a class=\"markdownIt-Anchor\" href=\"#注意事项\"></a> 注意事项</h2>\n<ol>\n<li>Android 签名打包时Signature Versions不要勾选V2(Full APK Signature)(注意)<br>\n不然会导致签名出的包进行全包校验时安装失败。（由于打包时会将文件写入Apk中，Apk文件sha256变化之后 签名文件认证不过通）</li>\n<li>ios 可以使用企业签名包签出原始包进行打包</li>\n<li>Android签过之后的包不能再签，需要改Python代码</li>\n</ol>\n<hr>\n<h2 id=\"使用方式\"><a class=\"markdownIt-Anchor\" href=\"#使用方式\"></a> 使用方式</h2>\n<h3 id=\"android代码\"><a class=\"markdownIt-Anchor\" href=\"#android代码\"></a> Android代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 从apk中获取版本信息</span></span><br><span class=\"line\"><span class=\"comment\">  *</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param</span> context</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param</span> channelPrefix 渠道前缀</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">getChannelFromApk</span><span class=\"params\">(Context context, String channelPrefix)</span> </span>&#123;</span><br><span class=\"line\">     <span class=\"comment\">//从apk包中获取</span></span><br><span class=\"line\">     ApplicationInfo appinfo = context.getApplicationInfo();</span><br><span class=\"line\">     String sourceDir = appinfo.sourceDir;</span><br><span class=\"line\">     <span class=\"comment\">//默认放在meta-inf/里， 所以需要再拼接一下</span></span><br><span class=\"line\">     String key = <span class=\"string\">\"META-INF/\"</span> + channelPrefix;</span><br><span class=\"line\">     String ret = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">     ZipFile zipfile = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">     <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">         zipfile = <span class=\"keyword\">new</span> ZipFile(sourceDir);</span><br><span class=\"line\">         Enumeration&lt;?&gt; entries = zipfile.entries();</span><br><span class=\"line\">         <span class=\"keyword\">while</span> (entries.hasMoreElements()) &#123;</span><br><span class=\"line\">             ZipEntry entry = ((ZipEntry) entries.nextElement());</span><br><span class=\"line\">             String entryName = entry.getName();</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (entryName.startsWith(key)) &#123;</span><br><span class=\"line\">                 ret = entryName;</span><br><span class=\"line\">                 <span class=\"keyword\">break</span>;</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">         e.printStackTrace();</span><br><span class=\"line\">     &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">         <span class=\"keyword\">if</span> (zipfile != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">             <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                 zipfile.close();</span><br><span class=\"line\">             &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                 e.printStackTrace();</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     String[] split = ret.split(channelPrefix);</span><br><span class=\"line\">     String channel = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (split != <span class=\"keyword\">null</span> &amp;&amp; split.length &gt;= <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">         channel = ret.substring(key.length());</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     StorageLW.getSingleton().put(StorageKEY.APP_CHANNEL, channel);</span><br><span class=\"line\">     <span class=\"keyword\">return</span> channel;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"ios使用方式\"><a class=\"markdownIt-Anchor\" href=\"#ios使用方式\"></a> iOS使用方式</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*! 读取渠道ID */</span><br><span class=\"line\">+ (NSString *)channel&#123;</span><br><span class=\"line\">   NSString *resourceDirectory = [[NSBundle mainBundle] resourcePath];</span><br><span class=\"line\">   NSString *CodeSignaturePath = [resourceDirectory stringByAppendingPathComponent:@&quot;/_CodeSignature/AppInfo.plist&quot;];</span><br><span class=\"line\">   NSMutableDictionary *data = [[NSMutableDictionary alloc]initWithContentsOfFile:CodeSignaturePath];</span><br><span class=\"line\">   NSString *cid = [data objectForKey:@&quot;channel&quot;];</span><br><span class=\"line\">   if(!cid)&#123;</span><br><span class=\"line\">       cid = @&quot;&quot;;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   return cid;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"实现原理\"><a class=\"markdownIt-Anchor\" href=\"#实现原理\"></a> 实现原理</h2>\n<ul>\n<li>\n<p>*Android apk的zip包内META-INF描述文件夹内写入空文件。文件名就是我们要打的渠道包ID</p>\n</li>\n<li>\n<p>*iOS 在ipa内选择Payload/{$APP_NAME}/_CodeSignaturre/ 下写入AppInfo.plist文件 然后读取该文件内的channel key</p>\n</li>\n</ul>\n<h2 id=\"使用区域网服务器作为下载服务器如果要使用ios扫描下载安装-则需要修改本地python代码-搭建本地https环境-创建ca证书安装到iphone上\"><a class=\"markdownIt-Anchor\" href=\"#使用区域网服务器作为下载服务器如果要使用ios扫描下载安装-则需要修改本地python代码-搭建本地https环境-创建ca证书安装到iphone上\"></a> 使用区域网服务器作为下载服务器，如果要使用iOS扫描下载安装。则需要修改本地python代码 搭建本地https环境 创建CA证书安装到iPhone上</h2>\n<h2 id=\"使用python-源码-需要安装依赖库\"><a class=\"markdownIt-Anchor\" href=\"#使用python-源码-需要安装依赖库\"></a> 使用Python 源码 需要安装依赖库</h2>\n<h1 id=\"源码\"><a class=\"markdownIt-Anchor\" href=\"#源码\"></a> <a href=\"https://github.com/yaooort/Apputils\" target=\"_blank\" rel=\"noopener\">源码</a></h1>\n","site":{"data":{"links":[{"name":"Yaooort","describe":"大傻子","link":"http://www.yaooort.com","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4172.jpg"},{"name":"GitHub","describe":"直男网","link":"https://github.com/yaooort","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3829.jpg"}]}},"excerpt":"","more":"<h1 id=\"app快速打代理包工具\"><a class=\"markdownIt-Anchor\" href=\"#app快速打代理包工具\"></a> APP快速打代理包工具</h1>\n<p><em>前言：</em><br>\n代理包可以快速帮助推广运营进行多渠道分发：</p>\n<ul>\n<li>实现多渠道打包及iOS企业级分发包的快速生成渠道包</li>\n<li>只需要一个Android iOS原始包即可快速生成N个渠道商代理包</li>\n<li>支持生成之后快速扫二维码下载该渠道包测试</li>\n<li>python单文件GUI开发。方便拆解及替换app内文件，及功能模块单独使用</li>\n<li>可编译为windows桌面程序和mac桌面程序</li>\n</ul>\n<hr>\n<h2 id=\"上效果图\"><a class=\"markdownIt-Anchor\" href=\"#上效果图\"></a> 上效果图</h2>\n<p><img src=\"http://prr6elh1d.sabkt.gdipper.com/static/images/2975942-78ee969e74ad85b6.jpg\" alt=\"Jietu20180727-103944.jpg\"></p>\n<h2 id=\"注意事项\"><a class=\"markdownIt-Anchor\" href=\"#注意事项\"></a> 注意事项</h2>\n<ol>\n<li>Android 签名打包时Signature Versions不要勾选V2(Full APK Signature)(注意)<br>\n不然会导致签名出的包进行全包校验时安装失败。（由于打包时会将文件写入Apk中，Apk文件sha256变化之后 签名文件认证不过通）</li>\n<li>ios 可以使用企业签名包签出原始包进行打包</li>\n<li>Android签过之后的包不能再签，需要改Python代码</li>\n</ol>\n<hr>\n<h2 id=\"使用方式\"><a class=\"markdownIt-Anchor\" href=\"#使用方式\"></a> 使用方式</h2>\n<h3 id=\"android代码\"><a class=\"markdownIt-Anchor\" href=\"#android代码\"></a> Android代码</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 从apk中获取版本信息</span></span><br><span class=\"line\"><span class=\"comment\">  *</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param</span> context</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param</span> channelPrefix 渠道前缀</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">getChannelFromApk</span><span class=\"params\">(Context context, String channelPrefix)</span> </span>&#123;</span><br><span class=\"line\">     <span class=\"comment\">//从apk包中获取</span></span><br><span class=\"line\">     ApplicationInfo appinfo = context.getApplicationInfo();</span><br><span class=\"line\">     String sourceDir = appinfo.sourceDir;</span><br><span class=\"line\">     <span class=\"comment\">//默认放在meta-inf/里， 所以需要再拼接一下</span></span><br><span class=\"line\">     String key = <span class=\"string\">\"META-INF/\"</span> + channelPrefix;</span><br><span class=\"line\">     String ret = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">     ZipFile zipfile = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">     <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">         zipfile = <span class=\"keyword\">new</span> ZipFile(sourceDir);</span><br><span class=\"line\">         Enumeration&lt;?&gt; entries = zipfile.entries();</span><br><span class=\"line\">         <span class=\"keyword\">while</span> (entries.hasMoreElements()) &#123;</span><br><span class=\"line\">             ZipEntry entry = ((ZipEntry) entries.nextElement());</span><br><span class=\"line\">             String entryName = entry.getName();</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (entryName.startsWith(key)) &#123;</span><br><span class=\"line\">                 ret = entryName;</span><br><span class=\"line\">                 <span class=\"keyword\">break</span>;</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">         e.printStackTrace();</span><br><span class=\"line\">     &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">         <span class=\"keyword\">if</span> (zipfile != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">             <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                 zipfile.close();</span><br><span class=\"line\">             &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                 e.printStackTrace();</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     String[] split = ret.split(channelPrefix);</span><br><span class=\"line\">     String channel = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (split != <span class=\"keyword\">null</span> &amp;&amp; split.length &gt;= <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">         channel = ret.substring(key.length());</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     StorageLW.getSingleton().put(StorageKEY.APP_CHANNEL, channel);</span><br><span class=\"line\">     <span class=\"keyword\">return</span> channel;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"ios使用方式\"><a class=\"markdownIt-Anchor\" href=\"#ios使用方式\"></a> iOS使用方式</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*! 读取渠道ID */</span><br><span class=\"line\">+ (NSString *)channel&#123;</span><br><span class=\"line\">   NSString *resourceDirectory = [[NSBundle mainBundle] resourcePath];</span><br><span class=\"line\">   NSString *CodeSignaturePath = [resourceDirectory stringByAppendingPathComponent:@&quot;/_CodeSignature/AppInfo.plist&quot;];</span><br><span class=\"line\">   NSMutableDictionary *data = [[NSMutableDictionary alloc]initWithContentsOfFile:CodeSignaturePath];</span><br><span class=\"line\">   NSString *cid = [data objectForKey:@&quot;channel&quot;];</span><br><span class=\"line\">   if(!cid)&#123;</span><br><span class=\"line\">       cid = @&quot;&quot;;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   return cid;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"实现原理\"><a class=\"markdownIt-Anchor\" href=\"#实现原理\"></a> 实现原理</h2>\n<ul>\n<li>\n<p>*Android apk的zip包内META-INF描述文件夹内写入空文件。文件名就是我们要打的渠道包ID</p>\n</li>\n<li>\n<p>*iOS 在ipa内选择Payload/{$APP_NAME}/_CodeSignaturre/ 下写入AppInfo.plist文件 然后读取该文件内的channel key</p>\n</li>\n</ul>\n<h2 id=\"使用区域网服务器作为下载服务器如果要使用ios扫描下载安装-则需要修改本地python代码-搭建本地https环境-创建ca证书安装到iphone上\"><a class=\"markdownIt-Anchor\" href=\"#使用区域网服务器作为下载服务器如果要使用ios扫描下载安装-则需要修改本地python代码-搭建本地https环境-创建ca证书安装到iphone上\"></a> 使用区域网服务器作为下载服务器，如果要使用iOS扫描下载安装。则需要修改本地python代码 搭建本地https环境 创建CA证书安装到iPhone上</h2>\n<h2 id=\"使用python-源码-需要安装依赖库\"><a class=\"markdownIt-Anchor\" href=\"#使用python-源码-需要安装依赖库\"></a> 使用Python 源码 需要安装依赖库</h2>\n<h1 id=\"源码\"><a class=\"markdownIt-Anchor\" href=\"#源码\"></a> <a href=\"https://github.com/yaooort/Apputils\" target=\"_blank\" rel=\"noopener\">源码</a></h1>\n"},{"title":"Flutter笔记之MaterialApp","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_2354.jpg","date":"2019-05-24T04:50:39.000Z","subtitle":"Flutter笔记之MaterialApp","_content":"\n* #### 个人理解\n\n> 这就是官方给的一个页面规范，开发Android的同学比较了解，google一般给出的这种东西，实际项目(或者说高质量UI应用)是仅供参考的，但是这次貌似不太一样，~~MaterialApp究竟好用不好用现在也没一个说法，估计大家都选择自定义了吧~~\n\n* #### 代码属性注释解读[官方Api地址](https://api.flutter.dev/flutter/material/MaterialApp-class.html)\n\n> ```dart\n> import 'package:flutter/foundation.dart';\n> import 'package:flutter/material.dart';\n> import 'package:flutter_login_page_ui/Pages/HomePage.dart';\n> import 'package:flutter_login_page_ui/Pages/LoginPage.dart';\n> \n> GlobalKey<NavigatorState> _navigatorKey = new GlobalKey();\n> void main() => runApp(MaterialApp(\n>       // 该标题出现在 Android：任务管理器的程序快照之上 IOS: 程序切换管理器中\n>       title: 'Flutter应用',\n>       // 跟上面的tiitle一样，但含有一个context参数 用于做本地化\n>       onGenerateTitle: (context) {\n>         return 'Flutter应用';\n>       },\n>       // 该颜色为Android中程序切换中应用图标背景的颜色，当应用图标背景为透明时\n>       color: Colors.blue,\n>       // 应用程序的主题，各种的定制颜色都可以设置，用于程序主题切换\n>       theme: new ThemeData(\n>         //主题色\n>         primarySwatch: Colors.blue,\n>       ),\n>       // 本地化委托，用于更改Flutter Widget默认的提示语，按钮text等\n>       localizationsDelegates: [\n>         MyLocalizationsDelegates(),\n>       ],\n>       // 当前区域，如果为null则使用系统区域 一般用于语言切换\n>       locale: Locale('zh', 'cn'),\n>       // 当传入的是不支持的语种，可以根据这个回调，返回相近,并且支持的语种\n>       localeResolutionCallback: (local, support) {\n>         if (support.contains(support)) {\n>           print('support');\n>           return local;\n>         }\n>         print('no_support');\n>         return const Locale('zh', 'cn');\n>       },\n>       // supportedLocales 传入支持的语种数组\n>       supportedLocales: [\n>         const Locale('uok'),\n>         const Locale('meg'),\n>       ],\n>       // debug模式下是否显示材质网格，传入bool类型，使用就不写了\n>       debugShowMaterialGrid: false,\n>       // showPerformanceOverlay 当为true时应用程序顶部覆盖一层GPU和UI曲线图，可即时查看当前流畅度情况\n>       showPerformanceOverlay: false,\n>       // 当为true时，打开光栅缓存图像的棋盘格\n>       checkerboardRasterCacheImages: false,\n>       // 当为true时，打开呈现到屏幕位图的层的棋盘格\n>       checkerboardOffscreenLayers: false,\n>       // 当为true时，打开Widget边框，类似Android开发者模式中显示布局边界\n>       showSemanticsDebugger: false,\n>       // 当为true时，在debug模式下显示右上角的debug字样的横幅，false即为不显示\n>       debugShowCheckedModeBanner: false,\n>       // 路由列表\n>       routes: {\n>         'login': (BuildContext context) => LoginPage(),\n>         'welcome': (BuildContext context) => WelcomePage(),\n>         'home': (BuildContext context) => HomePage(),\n>       },\n>       // navigatorKey.currentState 相当于 Navigator.of(context)\n>       navigatorKey: _navigatorKey,\n>       // 默认第一个加载的路由页面\n>       initialRoute: 'welcome',\n>       // 调用顺序为onGenerateRoute ==> onUnknownRoute\n>       onGenerateRoute: (setting) {\n>         return PageRouteBuilder(\n>             pageBuilder: (BuildContext context, _, __) {\n>               return HomePage();\n>             },\n>             opaque: false,\n>             transitionDuration: new Duration(milliseconds: 200),\n>             transitionsBuilder:\n>                 (___, Animation<double> animation, ____, Widget child) {\n>               return FadeTransition(\n>                 opacity: animation,\n>                 child: new ScaleTransition(\n>                   scale: new Tween<double>(begin: 0.5, end: 1.0)\n>                       .animate(animation),\n>                   child: child,\n>                 ),\n>               );\n>             });\n>       },\n>       // 路由观察器，当调用Navigator的相关方法时，会回调相关的操作\n>       navigatorObservers: [MyObserver()],\n>       // 当构建一个Widget前调用 一般做字体大小，方向，主题颜色等配置\n>       builder: (BuildContext context, Widget child) {\n>         return MediaQuery(\n>           data: MediaQuery.of(context).copyWith(\n>             //字体大小\n>             textScaleFactor: 1.4,\n>           ),\n>           child: child,\n>         );\n>       }\n>     ));\n> \n> class MyLocalizationsDelegates\n>     extends LocalizationsDelegate<MaterialLocalizations> {\n>   @override\n>   bool isSupported(Locale locale) {\n> //是否支持该locale，如果不支持会报异常\n>     if (locale == const Locale('zh', 'cn')) {\n>       return true;\n>     }\n>     return false;\n>   }\n> \n>   @override //是否需要重载\n>   bool shouldReload(LocalizationsDelegate old) => false;\n> \n>   @override\n>   Future<MaterialLocalizations> load(Locale locale) {\n> //加载本地化\n>     return new SynchronousFuture(new MyLocalizations(locale));\n>   }\n> }\n> \n> //本地化实现，继承DefaultMaterialLocalizations\n> class MyLocalizations extends DefaultMaterialLocalizations {\n>   final Locale locale;\n>   MyLocalizations(\n>     this.locale,\n>   );\n>   @override\n>   String get okButtonLabel {\n>     if (locale == const Locale('zh', 'cn')) {\n>       return '好的';\n>     } else {\n>       return super.okButtonLabel;\n>     }\n>   }\n> \n>   @override\n>   String get backButtonTooltip {\n>     if (locale == const Locale('zh', 'cn')) {\n>       return '返回';\n>     } else {\n>       return super.okButtonLabel;\n>     }\n>   }\n> }\n> \n> //继承NavigatorObserver\n> class MyObserver extends NavigatorObserver {\n>   @override\n>   void didPush(Route route, Route previousRoute) {\n>     // 当调用Navigator.push时回调\n>     super.didPush(route, previousRoute);\n>     //可通过route.settings获取路由相关内容\n>     //route.currentResult获取返回内容\n>     //....等等\n>     print(route.settings.name);\n>   }\n> }\n> \n> class WelcomePage extends StatefulWidget {\n>   @override\n>   _WelcomePage createState() => _WelcomePage();\n> }\n> \n> class _WelcomePage extends State<WelcomePage> {\n>   @override\n>   Widget build(BuildContext context) => Scaffold(\n>         appBar: AppBar(\n>           title: Text(\"第一个页面\"),\n>         ),\n>         body: Center(\n>           child: Text('Home'),\n>         ),\n>       );\n> }\n> \n> ```\n\n\n\n* #### 源码\n\n```dart\n// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport 'dart:ui' as ui;\n\nimport 'package:flutter/cupertino.dart';\nimport 'package:flutter/rendering.dart';\nimport 'package:flutter/widgets.dart';\n\nimport 'arc.dart';\nimport 'colors.dart';\nimport 'floating_action_button.dart';\nimport 'icons.dart';\nimport 'material_localizations.dart';\nimport 'page.dart';\nimport 'theme.dart';\n\n/// [MaterialApp] uses this [TextStyle] as its [DefaultTextStyle] to encourage\n/// developers to be intentional about their [DefaultTextStyle].\n///\n/// In Material Design, most [Text] widgets are contained in [Material] widgets,\n/// which sets a specific [DefaultTextStyle]. If you're seeing text that uses\n/// this text style, consider putting your text in a [Material] widget (or\n/// another widget that sets a [DefaultTextStyle]).\nconst TextStyle _errorTextStyle = TextStyle(\n  color: Color(0xD0FF0000),\n  fontFamily: 'monospace',\n  fontSize: 48.0,\n  fontWeight: FontWeight.w900,\n  decoration: TextDecoration.underline,\n  decorationColor: Color(0xFFFFFF00),\n  decorationStyle: TextDecorationStyle.double,\n  debugLabel: 'fallback style; consider putting your text in a Material',\n);\n\n/// An application that uses material design.\n///\n/// A convenience widget that wraps a number of widgets that are commonly\n/// required for material design applications. It builds upon a [WidgetsApp] by\n/// adding material-design specific functionality, such as [AnimatedTheme] and\n/// [GridPaper].\n///\n/// The [MaterialApp] configures the top-level [Navigator] to search for routes\n/// in the following order:\n///\n///  1. For the `/` route, the [home] property, if non-null, is used.\n///\n///  2. Otherwise, the [routes] table is used, if it has an entry for the route.\n///\n///  3. Otherwise, [onGenerateRoute] is called, if provided. It should return a\n///     non-null value for any _valid_ route not handled by [home] and [routes].\n///\n///  4. Finally if all else fails [onUnknownRoute] is called.\n///\n/// If a [Navigator] is created, at least one of these options must handle the\n/// `/` route, since it is used when an invalid [initialRoute] is specified on\n/// startup (e.g. by another application launching this one with an intent on\n/// Android; see [Window.defaultRouteName]).\n///\n/// This widget also configures the observer of the top-level [Navigator] (if\n/// any) to perform [Hero] animations.\n///\n/// If [home], [routes], [onGenerateRoute], and [onUnknownRoute] are all null,\n/// and [builder] is not null, then no [Navigator] is created.\n///\n/// See also:\n///\n///  * [Scaffold], which provides standard app elements like an [AppBar] and a [Drawer].\n///  * [Navigator], which is used to manage the app's stack of pages.\n///  * [MaterialPageRoute], which defines an app page that transitions in a material-specific way.\n///  * [WidgetsApp], which defines the basic app elements but does not depend on the material library.\n///  * The Flutter Internationalization Tutorial,\n///    <https://flutter.dev/tutorials/internationalization/>.\nclass MaterialApp extends StatefulWidget {\n  /// Creates a MaterialApp.\n  ///\n  /// At least one of [home], [routes], [onGenerateRoute], or [builder] must be\n  /// non-null. If only [routes] is given, it must include an entry for the\n  /// [Navigator.defaultRouteName] (`/`), since that is the route used when the\n  /// application is launched with an intent that specifies an otherwise\n  /// unsupported route.\n  ///\n  /// This class creates an instance of [WidgetsApp].\n  ///\n  /// The boolean arguments, [routes], and [navigatorObservers], must not be null.\n  const MaterialApp({\n    Key key,\n    this.navigatorKey,\n    this.home,\n    this.routes = const <String, WidgetBuilder>{},\n    this.initialRoute,\n    this.onGenerateRoute,\n    this.onUnknownRoute,\n    this.navigatorObservers = const <NavigatorObserver>[],\n    this.builder,\n    this.title = '',\n    this.onGenerateTitle,\n    this.color,\n    this.theme,\n    this.darkTheme,\n    this.locale,\n    this.localizationsDelegates,\n    this.localeListResolutionCallback,\n    this.localeResolutionCallback,\n    this.supportedLocales = const <Locale>[Locale('en', 'US')],\n    this.debugShowMaterialGrid = false,\n    this.showPerformanceOverlay = false,\n    this.checkerboardRasterCacheImages = false,\n    this.checkerboardOffscreenLayers = false,\n    this.showSemanticsDebugger = false,\n    this.debugShowCheckedModeBanner = true,\n  }) : assert(routes != null),\n       assert(navigatorObservers != null),\n       assert(title != null),\n       assert(debugShowMaterialGrid != null),\n       assert(showPerformanceOverlay != null),\n       assert(checkerboardRasterCacheImages != null),\n       assert(checkerboardOffscreenLayers != null),\n       assert(showSemanticsDebugger != null),\n       assert(debugShowCheckedModeBanner != null),\n       super(key: key);\n\n  /// {@macro flutter.widgets.widgetsApp.navigatorKey}\n  final GlobalKey<NavigatorState> navigatorKey;\n\n  /// {@macro flutter.widgets.widgetsApp.home}\n  final Widget home;\n\n  /// The application's top-level routing table.\n  ///\n  /// When a named route is pushed with [Navigator.pushNamed], the route name is\n  /// looked up in this map. If the name is present, the associated\n  /// [WidgetBuilder] is used to construct a [MaterialPageRoute] that performs\n  /// an appropriate transition, including [Hero] animations, to the new route.\n  ///\n  /// {@macro flutter.widgets.widgetsApp.routes}\n  final Map<String, WidgetBuilder> routes;\n\n  /// {@macro flutter.widgets.widgetsApp.initialRoute}\n  final String initialRoute;\n\n  /// {@macro flutter.widgets.widgetsApp.onGenerateRoute}\n  final RouteFactory onGenerateRoute;\n\n  /// {@macro flutter.widgets.widgetsApp.onUnknownRoute}\n  final RouteFactory onUnknownRoute;\n\n  /// {@macro flutter.widgets.widgetsApp.navigatorObservers}\n  final List<NavigatorObserver> navigatorObservers;\n\n  /// {@macro flutter.widgets.widgetsApp.builder}\n  ///\n  /// Material specific features such as [showDialog] and [showMenu], and widgets\n  /// such as [Tooltip], [PopupMenuButton], also require a [Navigator] to properly\n  /// function.\n  final TransitionBuilder builder;\n\n  /// {@macro flutter.widgets.widgetsApp.title}\n  ///\n  /// This value is passed unmodified to [WidgetsApp.title].\n  final String title;\n\n  /// {@macro flutter.widgets.widgetsApp.onGenerateTitle}\n  ///\n  /// This value is passed unmodified to [WidgetsApp.onGenerateTitle].\n  final GenerateAppTitle onGenerateTitle;\n\n  /// Default visual properties, like colors fonts and shapes, for this app's\n  /// material widgets.\n  ///\n  /// A second [darkTheme] [ThemeData] value, which is used when the underlying\n  /// platform requests a \"dark mode\" UI, can also be specified.\n  ///\n  /// The default value of this property is the value of [ThemeData.light()].\n  ///\n  /// See also:\n  ///\n  ///  * [MediaQueryData.platformBrightness], which indicates the platform's\n  ///    desired brightness and is used to automatically toggle between [theme]\n  ///    and [darkTheme] in [MaterialApp].\n  ///  * [ThemeData.brightness], which indicates the [Brightness] of a theme's\n  ///    colors.\n  final ThemeData theme;\n\n  /// The [ThemeData] to use when the platform specifically requests a dark\n  /// themed UI.\n  ///\n  /// Host platforms such as Android Pie can request a system-wide \"dark mode\"\n  /// when entering battery saver mode.\n  ///\n  /// When the host platform requests a [Brightness.dark] mode, you may want to\n  /// supply a [ThemeData.brightness] that's also [Brightness.dark].\n  ///\n  /// Uses [theme] instead when null. Defaults to the value of\n  /// [ThemeData.light()] when both [darkTheme] and [theme] are null.\n  ///\n  /// See also:\n  ///\n  ///  * [MediaQueryData.platformBrightness], which indicates the platform's\n  ///    desired brightness and is used to automatically toggle between [theme]\n  ///    and [darkTheme] in [MaterialApp].\n  ///  * [ThemeData.brightness], which is typically set to the value of\n  ///    [MediaQueryData.platformBrightness].\n  final ThemeData darkTheme;\n\n  /// {@macro flutter.widgets.widgetsApp.color}\n  final Color color;\n\n  /// {@macro flutter.widgets.widgetsApp.locale}\n  final Locale locale;\n\n  /// {@macro flutter.widgets.widgetsApp.localizationsDelegates}\n  ///\n  /// Internationalized apps that require translations for one of the locales\n  /// listed in [GlobalMaterialLocalizations] should specify this parameter\n  /// and list the [supportedLocales] that the application can handle.\n  ///\n  /// import 'package:flutter_localizations/flutter_localizations.dart';\n  /// MaterialApp(\n  ///   localizationsDelegates: [\n  ///     // ... app-specific localization delegate[s] here\n  ///     GlobalMaterialLocalizations.delegate,\n  ///     GlobalWidgetsLocalizations.delegate,\n  ///   ],\n  ///   supportedLocales: [\n  ///     const Locale('en', 'US'), // English\n  ///     const Locale('he', 'IL'), // Hebrew\n  ///     // ... other locales the app supports\n  ///   ],\n  ///   // ...\n  /// )\n  ///\n  /// ## Adding localizations for a new locale\n  ///\n  /// The information that follows applies to the unusual case of an app\n  /// adding translations for a language not already supported by\n  /// [GlobalMaterialLocalizations].\n  ///\n  /// Delegates that produce [WidgetsLocalizations] and [MaterialLocalizations]\n  /// are included automatically. Apps can provide their own versions of these\n  /// localizations by creating implementations of\n  /// [LocalizationsDelegate<WidgetsLocalizations>] or\n  /// [LocalizationsDelegate<MaterialLocalizations>] whose load methods return\n  /// custom versions of [WidgetsLocalizations] or [MaterialLocalizations].\n  ///\n  /// For example: to add support to [MaterialLocalizations] for a\n  /// locale it doesn't already support, say `const Locale('foo', 'BR')`,\n  /// one could just extend [DefaultMaterialLocalizations]:\n  ///\n  /// class FooLocalizations extends DefaultMaterialLocalizations {\n  ///   FooLocalizations(Locale locale) : super(locale);\n  ///   @override\n  ///   String get okButtonLabel {\n  ///     if (locale == const Locale('foo', 'BR'))\n  ///       return 'foo';\n  ///     return super.okButtonLabel;\n  ///   }\n  /// }\n  ///\n  ///\n  /// A `FooLocalizationsDelegate` is essentially just a method that constructs\n  /// a `FooLocalizations` object. We return a [SynchronousFuture] here because\n  /// no asynchronous work takes place upon \"loading\" the localizations object.\n  ///\n  /// class FooLocalizationsDelegate extends LocalizationsDelegate<MaterialLocalizations> {\n  ///   const FooLocalizationsDelegate();\n  ///   @override\n  ///   Future<FooLocalizations> load(Locale locale) {\n  ///     return SynchronousFuture(FooLocalizations(locale));\n  ///   }\n  ///   @override\n  ///   bool shouldReload(FooLocalizationsDelegate old) => false;\n  /// }\n  ///\n  /// Constructing a [MaterialApp] with a `FooLocalizationsDelegate` overrides\n  /// the automatically included delegate for [MaterialLocalizations] because\n  /// only the first delegate of each [LocalizationsDelegate.type] is used and\n  /// the automatically included delegates are added to the end of the app's\n  /// [localizationsDelegates] list.\n  ///\n  /// MaterialApp(\n  ///   localizationsDelegates: [\n  ///     const FooLocalizationsDelegate(),\n  ///   ],\n  ///   // ...\n  /// )\n  /// See also:\n  ///\n  ///  * [supportedLocales], which must be specified along with\n  ///    [localizationsDelegates].\n  ///  * [GlobalMaterialLocalizations], a [localizationsDelegates] value\n  ///    which provides material localizations for many languages.\n  ///  * The Flutter Internationalization Tutorial,\n  ///    <https://flutter.dev/tutorials/internationalization/>.\n  final Iterable<LocalizationsDelegate<dynamic>> localizationsDelegates;\n\n  /// {@macro flutter.widgets.widgetsApp.localeListResolutionCallback}\n  ///\n  /// This callback is passed along to the [WidgetsApp] built by this widget.\n  final LocaleListResolutionCallback localeListResolutionCallback;\n\n  /// {@macro flutter.widgets.widgetsApp.localeResolutionCallback}\n  ///\n  /// This callback is passed along to the [WidgetsApp] built by this widget.\n  final LocaleResolutionCallback localeResolutionCallback;\n\n  /// {@macro flutter.widgets.widgetsApp.supportedLocales}\n  ///\n  /// It is passed along unmodified to the [WidgetsApp] built by this widget.\n  ///\n  /// See also:\n  ///\n  ///  * [localizationsDelegates], which must be specified for localized\n  ///    applications.\n  ///  * [GlobalMaterialLocalizations], a [localizationsDelegates] value\n  ///    which provides material localizations for many languages.\n  ///  * The Flutter Internationalization Tutorial,\n  ///    <https://flutter.dev/tutorials/internationalization/>.\n  final Iterable<Locale> supportedLocales;\n\n  /// Turns on a performance overlay.\n  ///\n  /// See also:\n  ///\n  ///  * <https://flutter.dev/debugging/#performanceoverlay>\n  final bool showPerformanceOverlay;\n\n  /// Turns on checkerboarding of raster cache images.\n  final bool checkerboardRasterCacheImages;\n\n  /// Turns on checkerboarding of layers rendered to offscreen bitmaps.\n  final bool checkerboardOffscreenLayers;\n\n  /// Turns on an overlay that shows the accessibility information\n  /// reported by the framework.\n  final bool showSemanticsDebugger;\n\n  /// {@macro flutter.widgets.widgetsApp.debugShowCheckedModeBanner}\n  final bool debugShowCheckedModeBanner;\n\n  /// Turns on a [GridPaper] overlay that paints a baseline grid\n  /// Material apps.\n  ///\n  /// Only available in checked mode.\n  ///\n  /// See also:\n  ///\n  ///  * <https://material.io/design/layout/spacing-methods.html>\n  final bool debugShowMaterialGrid;\n\n  @override\n  _MaterialAppState createState() => _MaterialAppState();\n}\n\nclass _MaterialScrollBehavior extends ScrollBehavior {\n  @override\n  TargetPlatform getPlatform(BuildContext context) {\n    return Theme.of(context).platform;\n  }\n\n  @override\n  Widget buildViewportChrome(BuildContext context, Widget child, AxisDirection axisDirection) {\n    // When modifying this function, consider modifying the implementation in\n    // the base class as well.\n    switch (getPlatform(context)) {\n      case TargetPlatform.iOS:\n        return child;\n      case TargetPlatform.android:\n      case TargetPlatform.fuchsia:\n        return GlowingOverscrollIndicator(\n          child: child,\n          axisDirection: axisDirection,\n          color: Theme.of(context).accentColor,\n        );\n    }\n    return null;\n  }\n}\n\nclass _MaterialAppState extends State<MaterialApp> {\n  HeroController _heroController;\n\n  @override\n  void initState() {\n    super.initState();\n    _heroController = HeroController(createRectTween: _createRectTween);\n    _updateNavigator();\n  }\n\n  @override\n  void didUpdateWidget(MaterialApp oldWidget) {\n    super.didUpdateWidget(oldWidget);\n    if (widget.navigatorKey != oldWidget.navigatorKey) {\n      // If the Navigator changes, we have to create a new observer, because the\n      // old Navigator won't be disposed (and thus won't unregister with its\n      // observers) until after the new one has been created (because the\n      // Navigator has a GlobalKey).\n      _heroController = HeroController(createRectTween: _createRectTween);\n    }\n    _updateNavigator();\n  }\n\n  List<NavigatorObserver> _navigatorObservers;\n\n  void _updateNavigator() {\n    if (widget.home != null ||\n        widget.routes.isNotEmpty ||\n        widget.onGenerateRoute != null ||\n        widget.onUnknownRoute != null) {\n      _navigatorObservers = List<NavigatorObserver>.from(widget.navigatorObservers)\n        ..add(_heroController);\n    } else {\n      _navigatorObservers = const <NavigatorObserver>[];\n    }\n  }\n\n  RectTween _createRectTween(Rect begin, Rect end) {\n    return MaterialRectArcTween(begin: begin, end: end);\n  }\n\n  // Combine the Localizations for Material with the ones contributed\n  // by the localizationsDelegates parameter, if any. Only the first delegate\n  // of a particular LocalizationsDelegate.type is loaded so the\n  // localizationsDelegate parameter can be used to override\n  // _MaterialLocalizationsDelegate.\n  Iterable<LocalizationsDelegate<dynamic>> get _localizationsDelegates sync* {\n    if (widget.localizationsDelegates != null)\n      yield* widget.localizationsDelegates;\n    yield DefaultMaterialLocalizations.delegate;\n    yield DefaultCupertinoLocalizations.delegate;\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    Widget result = WidgetsApp(\n      key: GlobalObjectKey(this),\n      navigatorKey: widget.navigatorKey,\n      navigatorObservers: _navigatorObservers,\n        pageRouteBuilder: <T>(RouteSettings settings, WidgetBuilder builder) =>\n            MaterialPageRoute<T>(settings: settings, builder: builder),\n      home: widget.home,\n      routes: widget.routes,\n      initialRoute: widget.initialRoute,\n      onGenerateRoute: widget.onGenerateRoute,\n      onUnknownRoute: widget.onUnknownRoute,\n      builder: (BuildContext context, Widget child) {\n        // Use a light theme, dark theme, or fallback theme.\n        ThemeData theme;\n        final ui.Brightness platformBrightness = MediaQuery.platformBrightnessOf(context);\n        if (platformBrightness == ui.Brightness.dark && widget.darkTheme != null) {\n          theme = widget.darkTheme;\n        } else if (widget.theme != null) {\n          theme = widget.theme;\n        } else {\n          theme = ThemeData.fallback();\n        }\n\n        return AnimatedTheme(\n          data: theme,\n          isMaterialAppTheme: true,\n          child: widget.builder != null\n              ? Builder(\n                  builder: (BuildContext context) {\n                    // Why are we surrounding a builder with a builder?\n                    //\n                    // The widget.builder may contain code that invokes\n                    // Theme.of(), which should return the theme we selected\n                    // above in AnimatedTheme. However, if we invoke\n                    // widget.builder() directly as the child of AnimatedTheme\n                    // then there is no Context separating them, and the\n                    // widget.builder() will not find the theme. Therefore, we\n                    // surround widget.builder with yet another builder so that\n                    // a context separates them and Theme.of() correctly\n                    // resolves to the theme we passed to AnimatedTheme.\n                    return widget.builder(context, child);\n                  },\n                )\n              : child,\n        );\n      },\n      title: widget.title,\n      onGenerateTitle: widget.onGenerateTitle,\n      textStyle: _errorTextStyle,\n      // The color property is always pulled from the light theme, even if dark\n      // mode is activated. This was done to simplify the technical details\n      // of switching themes and it was deemed acceptable because this color\n      // property is only used on old Android OSes to color the app bar in\n      // Android's switcher UI.\n      //\n      // blue is the primary color of the default theme\n      color: widget.color ?? widget.theme?.primaryColor ?? Colors.blue,\n      locale: widget.locale,\n      localizationsDelegates: _localizationsDelegates,\n      localeResolutionCallback: widget.localeResolutionCallback,\n      localeListResolutionCallback: widget.localeListResolutionCallback,\n      supportedLocales: widget.supportedLocales,\n      showPerformanceOverlay: widget.showPerformanceOverlay,\n      checkerboardRasterCacheImages: widget.checkerboardRasterCacheImages,\n      checkerboardOffscreenLayers: widget.checkerboardOffscreenLayers,\n      showSemanticsDebugger: widget.showSemanticsDebugger,\n      debugShowCheckedModeBanner: widget.debugShowCheckedModeBanner,\n      inspectorSelectButtonBuilder: (BuildContext context, VoidCallback onPressed) {\n        return FloatingActionButton(\n          child: const Icon(Icons.search),\n          onPressed: onPressed,\n          mini: true,\n        );\n      },\n    );\n\n    assert(() {\n      if (widget.debugShowMaterialGrid) {\n        result = GridPaper(\n          color: const Color(0xE0F9BBE0),\n          interval: 8.0,\n          divisions: 2,\n          subdivisions: 1,\n          child: result,\n        );\n      }\n      return true;\n    }());\n\n    return ScrollConfiguration(\n      behavior: _MaterialScrollBehavior(),\n      child: result,\n    );\n  }\n}\n\n```\n\n\n\n* #### 个人见解\n\n> 根据演示代码可以看到，其实一个Widget 准确的说很多Widget组合起来能够做的事情真的挺多。从源码可以看出，其实MaterialApp 就是一个Widget，一个标准的app开发脚手架\n","source":"_posts/Flutter笔记之MaterialApp.md","raw":"---\ntitle: Flutter笔记之MaterialApp\ncover: http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_2354.jpg\ndate: 2019-05-24 12:50:39\nsubtitle: Flutter笔记之MaterialApp\ncategories:\n- Flutter\ntags:\n- Android\n- iOS\n---\n\n* #### 个人理解\n\n> 这就是官方给的一个页面规范，开发Android的同学比较了解，google一般给出的这种东西，实际项目(或者说高质量UI应用)是仅供参考的，但是这次貌似不太一样，~~MaterialApp究竟好用不好用现在也没一个说法，估计大家都选择自定义了吧~~\n\n* #### 代码属性注释解读[官方Api地址](https://api.flutter.dev/flutter/material/MaterialApp-class.html)\n\n> ```dart\n> import 'package:flutter/foundation.dart';\n> import 'package:flutter/material.dart';\n> import 'package:flutter_login_page_ui/Pages/HomePage.dart';\n> import 'package:flutter_login_page_ui/Pages/LoginPage.dart';\n> \n> GlobalKey<NavigatorState> _navigatorKey = new GlobalKey();\n> void main() => runApp(MaterialApp(\n>       // 该标题出现在 Android：任务管理器的程序快照之上 IOS: 程序切换管理器中\n>       title: 'Flutter应用',\n>       // 跟上面的tiitle一样，但含有一个context参数 用于做本地化\n>       onGenerateTitle: (context) {\n>         return 'Flutter应用';\n>       },\n>       // 该颜色为Android中程序切换中应用图标背景的颜色，当应用图标背景为透明时\n>       color: Colors.blue,\n>       // 应用程序的主题，各种的定制颜色都可以设置，用于程序主题切换\n>       theme: new ThemeData(\n>         //主题色\n>         primarySwatch: Colors.blue,\n>       ),\n>       // 本地化委托，用于更改Flutter Widget默认的提示语，按钮text等\n>       localizationsDelegates: [\n>         MyLocalizationsDelegates(),\n>       ],\n>       // 当前区域，如果为null则使用系统区域 一般用于语言切换\n>       locale: Locale('zh', 'cn'),\n>       // 当传入的是不支持的语种，可以根据这个回调，返回相近,并且支持的语种\n>       localeResolutionCallback: (local, support) {\n>         if (support.contains(support)) {\n>           print('support');\n>           return local;\n>         }\n>         print('no_support');\n>         return const Locale('zh', 'cn');\n>       },\n>       // supportedLocales 传入支持的语种数组\n>       supportedLocales: [\n>         const Locale('uok'),\n>         const Locale('meg'),\n>       ],\n>       // debug模式下是否显示材质网格，传入bool类型，使用就不写了\n>       debugShowMaterialGrid: false,\n>       // showPerformanceOverlay 当为true时应用程序顶部覆盖一层GPU和UI曲线图，可即时查看当前流畅度情况\n>       showPerformanceOverlay: false,\n>       // 当为true时，打开光栅缓存图像的棋盘格\n>       checkerboardRasterCacheImages: false,\n>       // 当为true时，打开呈现到屏幕位图的层的棋盘格\n>       checkerboardOffscreenLayers: false,\n>       // 当为true时，打开Widget边框，类似Android开发者模式中显示布局边界\n>       showSemanticsDebugger: false,\n>       // 当为true时，在debug模式下显示右上角的debug字样的横幅，false即为不显示\n>       debugShowCheckedModeBanner: false,\n>       // 路由列表\n>       routes: {\n>         'login': (BuildContext context) => LoginPage(),\n>         'welcome': (BuildContext context) => WelcomePage(),\n>         'home': (BuildContext context) => HomePage(),\n>       },\n>       // navigatorKey.currentState 相当于 Navigator.of(context)\n>       navigatorKey: _navigatorKey,\n>       // 默认第一个加载的路由页面\n>       initialRoute: 'welcome',\n>       // 调用顺序为onGenerateRoute ==> onUnknownRoute\n>       onGenerateRoute: (setting) {\n>         return PageRouteBuilder(\n>             pageBuilder: (BuildContext context, _, __) {\n>               return HomePage();\n>             },\n>             opaque: false,\n>             transitionDuration: new Duration(milliseconds: 200),\n>             transitionsBuilder:\n>                 (___, Animation<double> animation, ____, Widget child) {\n>               return FadeTransition(\n>                 opacity: animation,\n>                 child: new ScaleTransition(\n>                   scale: new Tween<double>(begin: 0.5, end: 1.0)\n>                       .animate(animation),\n>                   child: child,\n>                 ),\n>               );\n>             });\n>       },\n>       // 路由观察器，当调用Navigator的相关方法时，会回调相关的操作\n>       navigatorObservers: [MyObserver()],\n>       // 当构建一个Widget前调用 一般做字体大小，方向，主题颜色等配置\n>       builder: (BuildContext context, Widget child) {\n>         return MediaQuery(\n>           data: MediaQuery.of(context).copyWith(\n>             //字体大小\n>             textScaleFactor: 1.4,\n>           ),\n>           child: child,\n>         );\n>       }\n>     ));\n> \n> class MyLocalizationsDelegates\n>     extends LocalizationsDelegate<MaterialLocalizations> {\n>   @override\n>   bool isSupported(Locale locale) {\n> //是否支持该locale，如果不支持会报异常\n>     if (locale == const Locale('zh', 'cn')) {\n>       return true;\n>     }\n>     return false;\n>   }\n> \n>   @override //是否需要重载\n>   bool shouldReload(LocalizationsDelegate old) => false;\n> \n>   @override\n>   Future<MaterialLocalizations> load(Locale locale) {\n> //加载本地化\n>     return new SynchronousFuture(new MyLocalizations(locale));\n>   }\n> }\n> \n> //本地化实现，继承DefaultMaterialLocalizations\n> class MyLocalizations extends DefaultMaterialLocalizations {\n>   final Locale locale;\n>   MyLocalizations(\n>     this.locale,\n>   );\n>   @override\n>   String get okButtonLabel {\n>     if (locale == const Locale('zh', 'cn')) {\n>       return '好的';\n>     } else {\n>       return super.okButtonLabel;\n>     }\n>   }\n> \n>   @override\n>   String get backButtonTooltip {\n>     if (locale == const Locale('zh', 'cn')) {\n>       return '返回';\n>     } else {\n>       return super.okButtonLabel;\n>     }\n>   }\n> }\n> \n> //继承NavigatorObserver\n> class MyObserver extends NavigatorObserver {\n>   @override\n>   void didPush(Route route, Route previousRoute) {\n>     // 当调用Navigator.push时回调\n>     super.didPush(route, previousRoute);\n>     //可通过route.settings获取路由相关内容\n>     //route.currentResult获取返回内容\n>     //....等等\n>     print(route.settings.name);\n>   }\n> }\n> \n> class WelcomePage extends StatefulWidget {\n>   @override\n>   _WelcomePage createState() => _WelcomePage();\n> }\n> \n> class _WelcomePage extends State<WelcomePage> {\n>   @override\n>   Widget build(BuildContext context) => Scaffold(\n>         appBar: AppBar(\n>           title: Text(\"第一个页面\"),\n>         ),\n>         body: Center(\n>           child: Text('Home'),\n>         ),\n>       );\n> }\n> \n> ```\n\n\n\n* #### 源码\n\n```dart\n// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport 'dart:ui' as ui;\n\nimport 'package:flutter/cupertino.dart';\nimport 'package:flutter/rendering.dart';\nimport 'package:flutter/widgets.dart';\n\nimport 'arc.dart';\nimport 'colors.dart';\nimport 'floating_action_button.dart';\nimport 'icons.dart';\nimport 'material_localizations.dart';\nimport 'page.dart';\nimport 'theme.dart';\n\n/// [MaterialApp] uses this [TextStyle] as its [DefaultTextStyle] to encourage\n/// developers to be intentional about their [DefaultTextStyle].\n///\n/// In Material Design, most [Text] widgets are contained in [Material] widgets,\n/// which sets a specific [DefaultTextStyle]. If you're seeing text that uses\n/// this text style, consider putting your text in a [Material] widget (or\n/// another widget that sets a [DefaultTextStyle]).\nconst TextStyle _errorTextStyle = TextStyle(\n  color: Color(0xD0FF0000),\n  fontFamily: 'monospace',\n  fontSize: 48.0,\n  fontWeight: FontWeight.w900,\n  decoration: TextDecoration.underline,\n  decorationColor: Color(0xFFFFFF00),\n  decorationStyle: TextDecorationStyle.double,\n  debugLabel: 'fallback style; consider putting your text in a Material',\n);\n\n/// An application that uses material design.\n///\n/// A convenience widget that wraps a number of widgets that are commonly\n/// required for material design applications. It builds upon a [WidgetsApp] by\n/// adding material-design specific functionality, such as [AnimatedTheme] and\n/// [GridPaper].\n///\n/// The [MaterialApp] configures the top-level [Navigator] to search for routes\n/// in the following order:\n///\n///  1. For the `/` route, the [home] property, if non-null, is used.\n///\n///  2. Otherwise, the [routes] table is used, if it has an entry for the route.\n///\n///  3. Otherwise, [onGenerateRoute] is called, if provided. It should return a\n///     non-null value for any _valid_ route not handled by [home] and [routes].\n///\n///  4. Finally if all else fails [onUnknownRoute] is called.\n///\n/// If a [Navigator] is created, at least one of these options must handle the\n/// `/` route, since it is used when an invalid [initialRoute] is specified on\n/// startup (e.g. by another application launching this one with an intent on\n/// Android; see [Window.defaultRouteName]).\n///\n/// This widget also configures the observer of the top-level [Navigator] (if\n/// any) to perform [Hero] animations.\n///\n/// If [home], [routes], [onGenerateRoute], and [onUnknownRoute] are all null,\n/// and [builder] is not null, then no [Navigator] is created.\n///\n/// See also:\n///\n///  * [Scaffold], which provides standard app elements like an [AppBar] and a [Drawer].\n///  * [Navigator], which is used to manage the app's stack of pages.\n///  * [MaterialPageRoute], which defines an app page that transitions in a material-specific way.\n///  * [WidgetsApp], which defines the basic app elements but does not depend on the material library.\n///  * The Flutter Internationalization Tutorial,\n///    <https://flutter.dev/tutorials/internationalization/>.\nclass MaterialApp extends StatefulWidget {\n  /// Creates a MaterialApp.\n  ///\n  /// At least one of [home], [routes], [onGenerateRoute], or [builder] must be\n  /// non-null. If only [routes] is given, it must include an entry for the\n  /// [Navigator.defaultRouteName] (`/`), since that is the route used when the\n  /// application is launched with an intent that specifies an otherwise\n  /// unsupported route.\n  ///\n  /// This class creates an instance of [WidgetsApp].\n  ///\n  /// The boolean arguments, [routes], and [navigatorObservers], must not be null.\n  const MaterialApp({\n    Key key,\n    this.navigatorKey,\n    this.home,\n    this.routes = const <String, WidgetBuilder>{},\n    this.initialRoute,\n    this.onGenerateRoute,\n    this.onUnknownRoute,\n    this.navigatorObservers = const <NavigatorObserver>[],\n    this.builder,\n    this.title = '',\n    this.onGenerateTitle,\n    this.color,\n    this.theme,\n    this.darkTheme,\n    this.locale,\n    this.localizationsDelegates,\n    this.localeListResolutionCallback,\n    this.localeResolutionCallback,\n    this.supportedLocales = const <Locale>[Locale('en', 'US')],\n    this.debugShowMaterialGrid = false,\n    this.showPerformanceOverlay = false,\n    this.checkerboardRasterCacheImages = false,\n    this.checkerboardOffscreenLayers = false,\n    this.showSemanticsDebugger = false,\n    this.debugShowCheckedModeBanner = true,\n  }) : assert(routes != null),\n       assert(navigatorObservers != null),\n       assert(title != null),\n       assert(debugShowMaterialGrid != null),\n       assert(showPerformanceOverlay != null),\n       assert(checkerboardRasterCacheImages != null),\n       assert(checkerboardOffscreenLayers != null),\n       assert(showSemanticsDebugger != null),\n       assert(debugShowCheckedModeBanner != null),\n       super(key: key);\n\n  /// {@macro flutter.widgets.widgetsApp.navigatorKey}\n  final GlobalKey<NavigatorState> navigatorKey;\n\n  /// {@macro flutter.widgets.widgetsApp.home}\n  final Widget home;\n\n  /// The application's top-level routing table.\n  ///\n  /// When a named route is pushed with [Navigator.pushNamed], the route name is\n  /// looked up in this map. If the name is present, the associated\n  /// [WidgetBuilder] is used to construct a [MaterialPageRoute] that performs\n  /// an appropriate transition, including [Hero] animations, to the new route.\n  ///\n  /// {@macro flutter.widgets.widgetsApp.routes}\n  final Map<String, WidgetBuilder> routes;\n\n  /// {@macro flutter.widgets.widgetsApp.initialRoute}\n  final String initialRoute;\n\n  /// {@macro flutter.widgets.widgetsApp.onGenerateRoute}\n  final RouteFactory onGenerateRoute;\n\n  /// {@macro flutter.widgets.widgetsApp.onUnknownRoute}\n  final RouteFactory onUnknownRoute;\n\n  /// {@macro flutter.widgets.widgetsApp.navigatorObservers}\n  final List<NavigatorObserver> navigatorObservers;\n\n  /// {@macro flutter.widgets.widgetsApp.builder}\n  ///\n  /// Material specific features such as [showDialog] and [showMenu], and widgets\n  /// such as [Tooltip], [PopupMenuButton], also require a [Navigator] to properly\n  /// function.\n  final TransitionBuilder builder;\n\n  /// {@macro flutter.widgets.widgetsApp.title}\n  ///\n  /// This value is passed unmodified to [WidgetsApp.title].\n  final String title;\n\n  /// {@macro flutter.widgets.widgetsApp.onGenerateTitle}\n  ///\n  /// This value is passed unmodified to [WidgetsApp.onGenerateTitle].\n  final GenerateAppTitle onGenerateTitle;\n\n  /// Default visual properties, like colors fonts and shapes, for this app's\n  /// material widgets.\n  ///\n  /// A second [darkTheme] [ThemeData] value, which is used when the underlying\n  /// platform requests a \"dark mode\" UI, can also be specified.\n  ///\n  /// The default value of this property is the value of [ThemeData.light()].\n  ///\n  /// See also:\n  ///\n  ///  * [MediaQueryData.platformBrightness], which indicates the platform's\n  ///    desired brightness and is used to automatically toggle between [theme]\n  ///    and [darkTheme] in [MaterialApp].\n  ///  * [ThemeData.brightness], which indicates the [Brightness] of a theme's\n  ///    colors.\n  final ThemeData theme;\n\n  /// The [ThemeData] to use when the platform specifically requests a dark\n  /// themed UI.\n  ///\n  /// Host platforms such as Android Pie can request a system-wide \"dark mode\"\n  /// when entering battery saver mode.\n  ///\n  /// When the host platform requests a [Brightness.dark] mode, you may want to\n  /// supply a [ThemeData.brightness] that's also [Brightness.dark].\n  ///\n  /// Uses [theme] instead when null. Defaults to the value of\n  /// [ThemeData.light()] when both [darkTheme] and [theme] are null.\n  ///\n  /// See also:\n  ///\n  ///  * [MediaQueryData.platformBrightness], which indicates the platform's\n  ///    desired brightness and is used to automatically toggle between [theme]\n  ///    and [darkTheme] in [MaterialApp].\n  ///  * [ThemeData.brightness], which is typically set to the value of\n  ///    [MediaQueryData.platformBrightness].\n  final ThemeData darkTheme;\n\n  /// {@macro flutter.widgets.widgetsApp.color}\n  final Color color;\n\n  /// {@macro flutter.widgets.widgetsApp.locale}\n  final Locale locale;\n\n  /// {@macro flutter.widgets.widgetsApp.localizationsDelegates}\n  ///\n  /// Internationalized apps that require translations for one of the locales\n  /// listed in [GlobalMaterialLocalizations] should specify this parameter\n  /// and list the [supportedLocales] that the application can handle.\n  ///\n  /// import 'package:flutter_localizations/flutter_localizations.dart';\n  /// MaterialApp(\n  ///   localizationsDelegates: [\n  ///     // ... app-specific localization delegate[s] here\n  ///     GlobalMaterialLocalizations.delegate,\n  ///     GlobalWidgetsLocalizations.delegate,\n  ///   ],\n  ///   supportedLocales: [\n  ///     const Locale('en', 'US'), // English\n  ///     const Locale('he', 'IL'), // Hebrew\n  ///     // ... other locales the app supports\n  ///   ],\n  ///   // ...\n  /// )\n  ///\n  /// ## Adding localizations for a new locale\n  ///\n  /// The information that follows applies to the unusual case of an app\n  /// adding translations for a language not already supported by\n  /// [GlobalMaterialLocalizations].\n  ///\n  /// Delegates that produce [WidgetsLocalizations] and [MaterialLocalizations]\n  /// are included automatically. Apps can provide their own versions of these\n  /// localizations by creating implementations of\n  /// [LocalizationsDelegate<WidgetsLocalizations>] or\n  /// [LocalizationsDelegate<MaterialLocalizations>] whose load methods return\n  /// custom versions of [WidgetsLocalizations] or [MaterialLocalizations].\n  ///\n  /// For example: to add support to [MaterialLocalizations] for a\n  /// locale it doesn't already support, say `const Locale('foo', 'BR')`,\n  /// one could just extend [DefaultMaterialLocalizations]:\n  ///\n  /// class FooLocalizations extends DefaultMaterialLocalizations {\n  ///   FooLocalizations(Locale locale) : super(locale);\n  ///   @override\n  ///   String get okButtonLabel {\n  ///     if (locale == const Locale('foo', 'BR'))\n  ///       return 'foo';\n  ///     return super.okButtonLabel;\n  ///   }\n  /// }\n  ///\n  ///\n  /// A `FooLocalizationsDelegate` is essentially just a method that constructs\n  /// a `FooLocalizations` object. We return a [SynchronousFuture] here because\n  /// no asynchronous work takes place upon \"loading\" the localizations object.\n  ///\n  /// class FooLocalizationsDelegate extends LocalizationsDelegate<MaterialLocalizations> {\n  ///   const FooLocalizationsDelegate();\n  ///   @override\n  ///   Future<FooLocalizations> load(Locale locale) {\n  ///     return SynchronousFuture(FooLocalizations(locale));\n  ///   }\n  ///   @override\n  ///   bool shouldReload(FooLocalizationsDelegate old) => false;\n  /// }\n  ///\n  /// Constructing a [MaterialApp] with a `FooLocalizationsDelegate` overrides\n  /// the automatically included delegate for [MaterialLocalizations] because\n  /// only the first delegate of each [LocalizationsDelegate.type] is used and\n  /// the automatically included delegates are added to the end of the app's\n  /// [localizationsDelegates] list.\n  ///\n  /// MaterialApp(\n  ///   localizationsDelegates: [\n  ///     const FooLocalizationsDelegate(),\n  ///   ],\n  ///   // ...\n  /// )\n  /// See also:\n  ///\n  ///  * [supportedLocales], which must be specified along with\n  ///    [localizationsDelegates].\n  ///  * [GlobalMaterialLocalizations], a [localizationsDelegates] value\n  ///    which provides material localizations for many languages.\n  ///  * The Flutter Internationalization Tutorial,\n  ///    <https://flutter.dev/tutorials/internationalization/>.\n  final Iterable<LocalizationsDelegate<dynamic>> localizationsDelegates;\n\n  /// {@macro flutter.widgets.widgetsApp.localeListResolutionCallback}\n  ///\n  /// This callback is passed along to the [WidgetsApp] built by this widget.\n  final LocaleListResolutionCallback localeListResolutionCallback;\n\n  /// {@macro flutter.widgets.widgetsApp.localeResolutionCallback}\n  ///\n  /// This callback is passed along to the [WidgetsApp] built by this widget.\n  final LocaleResolutionCallback localeResolutionCallback;\n\n  /// {@macro flutter.widgets.widgetsApp.supportedLocales}\n  ///\n  /// It is passed along unmodified to the [WidgetsApp] built by this widget.\n  ///\n  /// See also:\n  ///\n  ///  * [localizationsDelegates], which must be specified for localized\n  ///    applications.\n  ///  * [GlobalMaterialLocalizations], a [localizationsDelegates] value\n  ///    which provides material localizations for many languages.\n  ///  * The Flutter Internationalization Tutorial,\n  ///    <https://flutter.dev/tutorials/internationalization/>.\n  final Iterable<Locale> supportedLocales;\n\n  /// Turns on a performance overlay.\n  ///\n  /// See also:\n  ///\n  ///  * <https://flutter.dev/debugging/#performanceoverlay>\n  final bool showPerformanceOverlay;\n\n  /// Turns on checkerboarding of raster cache images.\n  final bool checkerboardRasterCacheImages;\n\n  /// Turns on checkerboarding of layers rendered to offscreen bitmaps.\n  final bool checkerboardOffscreenLayers;\n\n  /// Turns on an overlay that shows the accessibility information\n  /// reported by the framework.\n  final bool showSemanticsDebugger;\n\n  /// {@macro flutter.widgets.widgetsApp.debugShowCheckedModeBanner}\n  final bool debugShowCheckedModeBanner;\n\n  /// Turns on a [GridPaper] overlay that paints a baseline grid\n  /// Material apps.\n  ///\n  /// Only available in checked mode.\n  ///\n  /// See also:\n  ///\n  ///  * <https://material.io/design/layout/spacing-methods.html>\n  final bool debugShowMaterialGrid;\n\n  @override\n  _MaterialAppState createState() => _MaterialAppState();\n}\n\nclass _MaterialScrollBehavior extends ScrollBehavior {\n  @override\n  TargetPlatform getPlatform(BuildContext context) {\n    return Theme.of(context).platform;\n  }\n\n  @override\n  Widget buildViewportChrome(BuildContext context, Widget child, AxisDirection axisDirection) {\n    // When modifying this function, consider modifying the implementation in\n    // the base class as well.\n    switch (getPlatform(context)) {\n      case TargetPlatform.iOS:\n        return child;\n      case TargetPlatform.android:\n      case TargetPlatform.fuchsia:\n        return GlowingOverscrollIndicator(\n          child: child,\n          axisDirection: axisDirection,\n          color: Theme.of(context).accentColor,\n        );\n    }\n    return null;\n  }\n}\n\nclass _MaterialAppState extends State<MaterialApp> {\n  HeroController _heroController;\n\n  @override\n  void initState() {\n    super.initState();\n    _heroController = HeroController(createRectTween: _createRectTween);\n    _updateNavigator();\n  }\n\n  @override\n  void didUpdateWidget(MaterialApp oldWidget) {\n    super.didUpdateWidget(oldWidget);\n    if (widget.navigatorKey != oldWidget.navigatorKey) {\n      // If the Navigator changes, we have to create a new observer, because the\n      // old Navigator won't be disposed (and thus won't unregister with its\n      // observers) until after the new one has been created (because the\n      // Navigator has a GlobalKey).\n      _heroController = HeroController(createRectTween: _createRectTween);\n    }\n    _updateNavigator();\n  }\n\n  List<NavigatorObserver> _navigatorObservers;\n\n  void _updateNavigator() {\n    if (widget.home != null ||\n        widget.routes.isNotEmpty ||\n        widget.onGenerateRoute != null ||\n        widget.onUnknownRoute != null) {\n      _navigatorObservers = List<NavigatorObserver>.from(widget.navigatorObservers)\n        ..add(_heroController);\n    } else {\n      _navigatorObservers = const <NavigatorObserver>[];\n    }\n  }\n\n  RectTween _createRectTween(Rect begin, Rect end) {\n    return MaterialRectArcTween(begin: begin, end: end);\n  }\n\n  // Combine the Localizations for Material with the ones contributed\n  // by the localizationsDelegates parameter, if any. Only the first delegate\n  // of a particular LocalizationsDelegate.type is loaded so the\n  // localizationsDelegate parameter can be used to override\n  // _MaterialLocalizationsDelegate.\n  Iterable<LocalizationsDelegate<dynamic>> get _localizationsDelegates sync* {\n    if (widget.localizationsDelegates != null)\n      yield* widget.localizationsDelegates;\n    yield DefaultMaterialLocalizations.delegate;\n    yield DefaultCupertinoLocalizations.delegate;\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    Widget result = WidgetsApp(\n      key: GlobalObjectKey(this),\n      navigatorKey: widget.navigatorKey,\n      navigatorObservers: _navigatorObservers,\n        pageRouteBuilder: <T>(RouteSettings settings, WidgetBuilder builder) =>\n            MaterialPageRoute<T>(settings: settings, builder: builder),\n      home: widget.home,\n      routes: widget.routes,\n      initialRoute: widget.initialRoute,\n      onGenerateRoute: widget.onGenerateRoute,\n      onUnknownRoute: widget.onUnknownRoute,\n      builder: (BuildContext context, Widget child) {\n        // Use a light theme, dark theme, or fallback theme.\n        ThemeData theme;\n        final ui.Brightness platformBrightness = MediaQuery.platformBrightnessOf(context);\n        if (platformBrightness == ui.Brightness.dark && widget.darkTheme != null) {\n          theme = widget.darkTheme;\n        } else if (widget.theme != null) {\n          theme = widget.theme;\n        } else {\n          theme = ThemeData.fallback();\n        }\n\n        return AnimatedTheme(\n          data: theme,\n          isMaterialAppTheme: true,\n          child: widget.builder != null\n              ? Builder(\n                  builder: (BuildContext context) {\n                    // Why are we surrounding a builder with a builder?\n                    //\n                    // The widget.builder may contain code that invokes\n                    // Theme.of(), which should return the theme we selected\n                    // above in AnimatedTheme. However, if we invoke\n                    // widget.builder() directly as the child of AnimatedTheme\n                    // then there is no Context separating them, and the\n                    // widget.builder() will not find the theme. Therefore, we\n                    // surround widget.builder with yet another builder so that\n                    // a context separates them and Theme.of() correctly\n                    // resolves to the theme we passed to AnimatedTheme.\n                    return widget.builder(context, child);\n                  },\n                )\n              : child,\n        );\n      },\n      title: widget.title,\n      onGenerateTitle: widget.onGenerateTitle,\n      textStyle: _errorTextStyle,\n      // The color property is always pulled from the light theme, even if dark\n      // mode is activated. This was done to simplify the technical details\n      // of switching themes and it was deemed acceptable because this color\n      // property is only used on old Android OSes to color the app bar in\n      // Android's switcher UI.\n      //\n      // blue is the primary color of the default theme\n      color: widget.color ?? widget.theme?.primaryColor ?? Colors.blue,\n      locale: widget.locale,\n      localizationsDelegates: _localizationsDelegates,\n      localeResolutionCallback: widget.localeResolutionCallback,\n      localeListResolutionCallback: widget.localeListResolutionCallback,\n      supportedLocales: widget.supportedLocales,\n      showPerformanceOverlay: widget.showPerformanceOverlay,\n      checkerboardRasterCacheImages: widget.checkerboardRasterCacheImages,\n      checkerboardOffscreenLayers: widget.checkerboardOffscreenLayers,\n      showSemanticsDebugger: widget.showSemanticsDebugger,\n      debugShowCheckedModeBanner: widget.debugShowCheckedModeBanner,\n      inspectorSelectButtonBuilder: (BuildContext context, VoidCallback onPressed) {\n        return FloatingActionButton(\n          child: const Icon(Icons.search),\n          onPressed: onPressed,\n          mini: true,\n        );\n      },\n    );\n\n    assert(() {\n      if (widget.debugShowMaterialGrid) {\n        result = GridPaper(\n          color: const Color(0xE0F9BBE0),\n          interval: 8.0,\n          divisions: 2,\n          subdivisions: 1,\n          child: result,\n        );\n      }\n      return true;\n    }());\n\n    return ScrollConfiguration(\n      behavior: _MaterialScrollBehavior(),\n      child: result,\n    );\n  }\n}\n\n```\n\n\n\n* #### 个人见解\n\n> 根据演示代码可以看到，其实一个Widget 准确的说很多Widget组合起来能够做的事情真的挺多。从源码可以看出，其实MaterialApp 就是一个Widget，一个标准的app开发脚手架\n","slug":"Flutter笔记之MaterialApp","published":1,"updated":"2019-05-27T07:59:57.366Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjw65m7fv00013ivonhleydjx","content":"<ul>\n<li>\n<h4 id=\"个人理解\"><a class=\"markdownIt-Anchor\" href=\"#个人理解\"></a> 个人理解</h4>\n</li>\n</ul>\n<blockquote>\n<p>这就是官方给的一个页面规范，开发Android的同学比较了解，google一般给出的这种东西，实际项目(或者说高质量UI应用)是仅供参考的，但是这次貌似不太一样，<s>MaterialApp究竟好用不好用现在也没一个说法，估计大家都选择自定义了吧</s></p>\n</blockquote>\n<ul>\n<li>\n<h4 id=\"代码属性注释解读官方api地址\"><a class=\"markdownIt-Anchor\" href=\"#代码属性注释解读官方api地址\"></a> 代码属性注释解读<a href=\"https://api.flutter.dev/flutter/material/MaterialApp-class.html\" target=\"_blank\" rel=\"noopener\">官方Api地址</a></h4>\n</li>\n</ul>\n<blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"keyword\">import</span> <span class=\"string\">'package:flutter/foundation.dart'</span>;</span><br><span class=\"line\">&gt; <span class=\"keyword\">import</span> <span class=\"string\">'package:flutter/material.dart'</span>;</span><br><span class=\"line\">&gt; <span class=\"keyword\">import</span> <span class=\"string\">'package:flutter_login_page_ui/Pages/HomePage.dart'</span>;</span><br><span class=\"line\">&gt; <span class=\"keyword\">import</span> <span class=\"string\">'package:flutter_login_page_ui/Pages/LoginPage.dart'</span>;</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt; GlobalKey&lt;NavigatorState&gt; _navigatorKey = <span class=\"keyword\">new</span> GlobalKey();</span><br><span class=\"line\">&gt; <span class=\"keyword\">void</span> main() =&gt; runApp(MaterialApp(</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 该标题出现在 Android：任务管理器的程序快照之上 IOS: 程序切换管理器中</span></span><br><span class=\"line\">&gt;       title: <span class=\"string\">'Flutter应用'</span>,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 跟上面的tiitle一样，但含有一个context参数 用于做本地化</span></span><br><span class=\"line\">&gt;       onGenerateTitle: (context) &#123;</span><br><span class=\"line\">&gt;         <span class=\"keyword\">return</span> <span class=\"string\">'Flutter应用'</span>;</span><br><span class=\"line\">&gt;       &#125;,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 该颜色为Android中程序切换中应用图标背景的颜色，当应用图标背景为透明时</span></span><br><span class=\"line\">&gt;       color: Colors.blue,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 应用程序的主题，各种的定制颜色都可以设置，用于程序主题切换</span></span><br><span class=\"line\">&gt;       theme: <span class=\"keyword\">new</span> ThemeData(</span><br><span class=\"line\">&gt;         <span class=\"comment\">//主题色</span></span><br><span class=\"line\">&gt;         primarySwatch: Colors.blue,</span><br><span class=\"line\">&gt;       ),</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 本地化委托，用于更改Flutter Widget默认的提示语，按钮text等</span></span><br><span class=\"line\">&gt;       localizationsDelegates: [</span><br><span class=\"line\">&gt;         MyLocalizationsDelegates(),</span><br><span class=\"line\">&gt;       ],</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 当前区域，如果为null则使用系统区域 一般用于语言切换</span></span><br><span class=\"line\">&gt;       locale: Locale(<span class=\"string\">'zh'</span>, <span class=\"string\">'cn'</span>),</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 当传入的是不支持的语种，可以根据这个回调，返回相近,并且支持的语种</span></span><br><span class=\"line\">&gt;       localeResolutionCallback: (local, support) &#123;</span><br><span class=\"line\">&gt;         <span class=\"keyword\">if</span> (support.contains(support)) &#123;</span><br><span class=\"line\">&gt;           <span class=\"built_in\">print</span>(<span class=\"string\">'support'</span>);</span><br><span class=\"line\">&gt;           <span class=\"keyword\">return</span> local;</span><br><span class=\"line\">&gt;         &#125;</span><br><span class=\"line\">&gt;         <span class=\"built_in\">print</span>(<span class=\"string\">'no_support'</span>);</span><br><span class=\"line\">&gt;         <span class=\"keyword\">return</span> <span class=\"keyword\">const</span> Locale(<span class=\"string\">'zh'</span>, <span class=\"string\">'cn'</span>);</span><br><span class=\"line\">&gt;       &#125;,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// supportedLocales 传入支持的语种数组</span></span><br><span class=\"line\">&gt;       supportedLocales: [</span><br><span class=\"line\">&gt;         <span class=\"keyword\">const</span> Locale(<span class=\"string\">'uok'</span>),</span><br><span class=\"line\">&gt;         <span class=\"keyword\">const</span> Locale(<span class=\"string\">'meg'</span>),</span><br><span class=\"line\">&gt;       ],</span><br><span class=\"line\">&gt;       <span class=\"comment\">// debug模式下是否显示材质网格，传入bool类型，使用就不写了</span></span><br><span class=\"line\">&gt;       debugShowMaterialGrid: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// showPerformanceOverlay 当为true时应用程序顶部覆盖一层GPU和UI曲线图，可即时查看当前流畅度情况</span></span><br><span class=\"line\">&gt;       showPerformanceOverlay: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 当为true时，打开光栅缓存图像的棋盘格</span></span><br><span class=\"line\">&gt;       checkerboardRasterCacheImages: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 当为true时，打开呈现到屏幕位图的层的棋盘格</span></span><br><span class=\"line\">&gt;       checkerboardOffscreenLayers: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 当为true时，打开Widget边框，类似Android开发者模式中显示布局边界</span></span><br><span class=\"line\">&gt;       showSemanticsDebugger: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 当为true时，在debug模式下显示右上角的debug字样的横幅，false即为不显示</span></span><br><span class=\"line\">&gt;       debugShowCheckedModeBanner: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 路由列表</span></span><br><span class=\"line\">&gt;       routes: &#123;</span><br><span class=\"line\">&gt;         <span class=\"string\">'login'</span>: (BuildContext context) =&gt; LoginPage(),</span><br><span class=\"line\">&gt;         <span class=\"string\">'welcome'</span>: (BuildContext context) =&gt; WelcomePage(),</span><br><span class=\"line\">&gt;         <span class=\"string\">'home'</span>: (BuildContext context) =&gt; HomePage(),</span><br><span class=\"line\">&gt;       &#125;,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// navigatorKey.currentState 相当于 Navigator.of(context)</span></span><br><span class=\"line\">&gt;       navigatorKey: _navigatorKey,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 默认第一个加载的路由页面</span></span><br><span class=\"line\">&gt;       initialRoute: <span class=\"string\">'welcome'</span>,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 调用顺序为onGenerateRoute ==&gt; onUnknownRoute</span></span><br><span class=\"line\">&gt;       onGenerateRoute: (setting) &#123;</span><br><span class=\"line\">&gt;         <span class=\"keyword\">return</span> PageRouteBuilder(</span><br><span class=\"line\">&gt;             pageBuilder: (BuildContext context, _, __) &#123;</span><br><span class=\"line\">&gt;               <span class=\"keyword\">return</span> HomePage();</span><br><span class=\"line\">&gt;             &#125;,</span><br><span class=\"line\">&gt;             opaque: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">&gt;             transitionDuration: <span class=\"keyword\">new</span> <span class=\"built_in\">Duration</span>(milliseconds: <span class=\"number\">200</span>),</span><br><span class=\"line\">&gt;             transitionsBuilder:</span><br><span class=\"line\">&gt;                 (___, Animation&lt;<span class=\"built_in\">double</span>&gt; animation, ____, Widget child) &#123;</span><br><span class=\"line\">&gt;               <span class=\"keyword\">return</span> FadeTransition(</span><br><span class=\"line\">&gt;                 opacity: animation,</span><br><span class=\"line\">&gt;                 child: <span class=\"keyword\">new</span> ScaleTransition(</span><br><span class=\"line\">&gt;                   scale: <span class=\"keyword\">new</span> Tween&lt;<span class=\"built_in\">double</span>&gt;(begin: <span class=\"number\">0.5</span>, end: <span class=\"number\">1.0</span>)</span><br><span class=\"line\">&gt;                       .animate(animation),</span><br><span class=\"line\">&gt;                   child: child,</span><br><span class=\"line\">&gt;                 ),</span><br><span class=\"line\">&gt;               );</span><br><span class=\"line\">&gt;             &#125;);</span><br><span class=\"line\">&gt;       &#125;,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 路由观察器，当调用Navigator的相关方法时，会回调相关的操作</span></span><br><span class=\"line\">&gt;       navigatorObservers: [MyObserver()],</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 当构建一个Widget前调用 一般做字体大小，方向，主题颜色等配置</span></span><br><span class=\"line\">&gt;       builder: (BuildContext context, Widget child) &#123;</span><br><span class=\"line\">&gt;         <span class=\"keyword\">return</span> MediaQuery(</span><br><span class=\"line\">&gt;           data: MediaQuery.of(context).copyWith(</span><br><span class=\"line\">&gt;             <span class=\"comment\">//字体大小</span></span><br><span class=\"line\">&gt;             textScaleFactor: <span class=\"number\">1.4</span>,</span><br><span class=\"line\">&gt;           ),</span><br><span class=\"line\">&gt;           child: child,</span><br><span class=\"line\">&gt;         );</span><br><span class=\"line\">&gt;       &#125;</span><br><span class=\"line\">&gt;     ));</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt; <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyLocalizationsDelegates</span></span></span><br><span class=\"line\"><span class=\"class\">&gt;     <span class=\"keyword\">extends</span> <span class=\"title\">LocalizationsDelegate</span>&lt;<span class=\"title\">MaterialLocalizations</span>&gt; </span>&#123;</span><br><span class=\"line\">&gt;   <span class=\"meta\">@override</span></span><br><span class=\"line\">&gt;   <span class=\"built_in\">bool</span> isSupported(Locale locale) &#123;</span><br><span class=\"line\">&gt; <span class=\"comment\">//是否支持该locale，如果不支持会报异常</span></span><br><span class=\"line\">&gt;     <span class=\"keyword\">if</span> (locale == <span class=\"keyword\">const</span> Locale(<span class=\"string\">'zh'</span>, <span class=\"string\">'cn'</span>)) &#123;</span><br><span class=\"line\">&gt;       <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">&gt;     &#125;</span><br><span class=\"line\">&gt;     <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">&gt;   &#125;</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt;   <span class=\"meta\">@override</span> <span class=\"comment\">//是否需要重载</span></span><br><span class=\"line\">&gt;   <span class=\"built_in\">bool</span> shouldReload(LocalizationsDelegate old) =&gt; <span class=\"keyword\">false</span>;</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt;   <span class=\"meta\">@override</span></span><br><span class=\"line\">&gt;   Future&lt;MaterialLocalizations&gt; load(Locale locale) &#123;</span><br><span class=\"line\">&gt; <span class=\"comment\">//加载本地化</span></span><br><span class=\"line\">&gt;     <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> SynchronousFuture(<span class=\"keyword\">new</span> MyLocalizations(locale));</span><br><span class=\"line\">&gt;   &#125;</span><br><span class=\"line\">&gt; &#125;</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt; <span class=\"comment\">//本地化实现，继承DefaultMaterialLocalizations</span></span><br><span class=\"line\">&gt; <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyLocalizations</span> <span class=\"keyword\">extends</span> <span class=\"title\">DefaultMaterialLocalizations</span> </span>&#123;</span><br><span class=\"line\">&gt;   <span class=\"keyword\">final</span> Locale locale;</span><br><span class=\"line\">&gt;   MyLocalizations(</span><br><span class=\"line\">&gt;     <span class=\"keyword\">this</span>.locale,</span><br><span class=\"line\">&gt;   );</span><br><span class=\"line\">&gt;   <span class=\"meta\">@override</span></span><br><span class=\"line\">&gt;   <span class=\"built_in\">String</span> <span class=\"keyword\">get</span> okButtonLabel &#123;</span><br><span class=\"line\">&gt;     <span class=\"keyword\">if</span> (locale == <span class=\"keyword\">const</span> Locale(<span class=\"string\">'zh'</span>, <span class=\"string\">'cn'</span>)) &#123;</span><br><span class=\"line\">&gt;       <span class=\"keyword\">return</span> <span class=\"string\">'好的'</span>;</span><br><span class=\"line\">&gt;     &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">&gt;       <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.okButtonLabel;</span><br><span class=\"line\">&gt;     &#125;</span><br><span class=\"line\">&gt;   &#125;</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt;   <span class=\"meta\">@override</span></span><br><span class=\"line\">&gt;   <span class=\"built_in\">String</span> <span class=\"keyword\">get</span> backButtonTooltip &#123;</span><br><span class=\"line\">&gt;     <span class=\"keyword\">if</span> (locale == <span class=\"keyword\">const</span> Locale(<span class=\"string\">'zh'</span>, <span class=\"string\">'cn'</span>)) &#123;</span><br><span class=\"line\">&gt;       <span class=\"keyword\">return</span> <span class=\"string\">'返回'</span>;</span><br><span class=\"line\">&gt;     &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">&gt;       <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.okButtonLabel;</span><br><span class=\"line\">&gt;     &#125;</span><br><span class=\"line\">&gt;   &#125;</span><br><span class=\"line\">&gt; &#125;</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt; <span class=\"comment\">//继承NavigatorObserver</span></span><br><span class=\"line\">&gt; <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyObserver</span> <span class=\"keyword\">extends</span> <span class=\"title\">NavigatorObserver</span> </span>&#123;</span><br><span class=\"line\">&gt;   <span class=\"meta\">@override</span></span><br><span class=\"line\">&gt;   <span class=\"keyword\">void</span> didPush(Route route, Route previousRoute) &#123;</span><br><span class=\"line\">&gt;     <span class=\"comment\">// 当调用Navigator.push时回调</span></span><br><span class=\"line\">&gt;     <span class=\"keyword\">super</span>.didPush(route, previousRoute);</span><br><span class=\"line\">&gt;     <span class=\"comment\">//可通过route.settings获取路由相关内容</span></span><br><span class=\"line\">&gt;     <span class=\"comment\">//route.currentResult获取返回内容</span></span><br><span class=\"line\">&gt;     <span class=\"comment\">//....等等</span></span><br><span class=\"line\">&gt;     <span class=\"built_in\">print</span>(route.settings.name);</span><br><span class=\"line\">&gt;   &#125;</span><br><span class=\"line\">&gt; &#125;</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt; <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WelcomePage</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatefulWidget</span> </span>&#123;</span><br><span class=\"line\">&gt;   <span class=\"meta\">@override</span></span><br><span class=\"line\">&gt;   _WelcomePage createState() =&gt; _WelcomePage();</span><br><span class=\"line\">&gt; &#125;</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt; <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">_WelcomePage</span> <span class=\"keyword\">extends</span> <span class=\"title\">State</span>&lt;<span class=\"title\">WelcomePage</span>&gt; </span>&#123;</span><br><span class=\"line\">&gt;   <span class=\"meta\">@override</span></span><br><span class=\"line\">&gt;   Widget build(BuildContext context) =&gt; Scaffold(</span><br><span class=\"line\">&gt;         appBar: AppBar(</span><br><span class=\"line\">&gt;           title: Text(<span class=\"string\">\"第一个页面\"</span>),</span><br><span class=\"line\">&gt;         ),</span><br><span class=\"line\">&gt;         body: Center(</span><br><span class=\"line\">&gt;           child: Text(<span class=\"string\">'Home'</span>),</span><br><span class=\"line\">&gt;         ),</span><br><span class=\"line\">&gt;       );</span><br><span class=\"line\">&gt; &#125;</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<ul>\n<li>\n<h4 id=\"源码\"><a class=\"markdownIt-Anchor\" href=\"#源码\"></a> 源码</h4>\n</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Copyright 2015 The Chromium Authors. All rights reserved.</span></span><br><span class=\"line\"><span class=\"comment\">// Use of this source code is governed by a BSD-style license that can be</span></span><br><span class=\"line\"><span class=\"comment\">// found in the LICENSE file.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'dart:ui'</span> <span class=\"keyword\">as</span> ui;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'package:flutter/cupertino.dart'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'package:flutter/rendering.dart'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'package:flutter/widgets.dart'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'arc.dart'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'colors.dart'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'floating_action_button.dart'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'icons.dart'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'material_localizations.dart'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'page.dart'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'theme.dart'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// [MaterialApp] uses this [TextStyle] as its [DefaultTextStyle] to encourage</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// developers to be intentional about their [DefaultTextStyle].</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// In Material Design, most [Text] widgets </span>are<span class=\"markdown\"> contained in [Material] widgets,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// which sets </span>a<span class=\"markdown\"> specific [DefaultTextStyle]. If </span>you<span class=\"markdown\">'re seeing text that uses</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// this text style, consider putting </span>your<span class=\"markdown\"> text in </span>a<span class=\"markdown\"> [Material] widget (or</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// another widget that sets </span>a<span class=\"markdown\"> [DefaultTextStyle]).</span></span></span><br><span class=\"line\"><span class=\"keyword\">const</span> TextStyle _errorTextStyle = TextStyle(</span><br><span class=\"line\">  color: Color(<span class=\"number\">0xD0FF0000</span>),</span><br><span class=\"line\">  fontFamily: <span class=\"string\">'monospace'</span>,</span><br><span class=\"line\">  fontSize: <span class=\"number\">48.0</span>,</span><br><span class=\"line\">  fontWeight: FontWeight.w900,</span><br><span class=\"line\">  decoration: TextDecoration.underline,</span><br><span class=\"line\">  decorationColor: Color(<span class=\"number\">0xFFFFFF00</span>),</span><br><span class=\"line\">  decorationStyle: TextDecorationStyle.<span class=\"built_in\">double</span>,</span><br><span class=\"line\">  debugLabel: <span class=\"string\">'fallback style; consider putting your text in a Material'</span>,</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// An application that uses material design.</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// A convenience widget that wraps </span>a<span class=\"markdown\"> number of widgets that </span>are<span class=\"markdown\"> commonly</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// required for material design applications. It builds upon </span>a<span class=\"markdown\"> [WidgetsApp] by</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// adding material-design specific functionality, </span>such<span class=\"markdown\"> as [AnimatedTheme] and</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// [GridPaper].</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// The [MaterialApp] configures </span>the<span class=\"markdown\"> top-level [Navigator] to search for routes</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// in </span>the<span class=\"markdown\"> following order:</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///  1. For </span>the<span class=\"markdown\"> <span class=\"code\">`/`</span> route, </span>the<span class=\"markdown\"> [home] property, if non-null, is used.</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///  2. Otherwise, </span>the<span class=\"markdown\"> [routes] table is used, if it has </span>an<span class=\"markdown\"> entry for </span>the<span class=\"markdown\"> route.</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///  3. Otherwise, [onGenerateRoute] is called, if provided. It </span>should<span class=\"markdown\"> return </span>a<span class=\"markdown\"></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///     non-null value for any <span class=\"emphasis\">_valid_</span> route not handled by [home] and [routes].</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///  4. Finally if all else fails [onUnknownRoute] is called.</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// If </span>a<span class=\"markdown\"> [Navigator] is created, at least one of these options must handle </span>the<span class=\"markdown\"></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// <span class=\"code\">`/`</span> route, since it is used when </span>an<span class=\"markdown\"> invalid [initialRoute] is specified on</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// startup (e.g. by another application launching this one with </span>an<span class=\"markdown\"> intent on</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// Android; see [Window.defaultRouteName]).</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// This widget also configures </span>the<span class=\"markdown\"> observer of </span>the<span class=\"markdown\"> top-level [Navigator] (if</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// any) to perform [Hero] animations.</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// If [home], [routes], [onGenerateRoute], and [onUnknownRoute] </span>are<span class=\"markdown\"> all null,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// and [builder] is not null, then no [Navigator] is created.</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// See also:</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///  * [Scaffold], which provides standard app elements </span>like<span class=\"markdown\"> </span>an<span class=\"markdown\"> [AppBar] and </span>a<span class=\"markdown\"> [Drawer].</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///  * [Navigator], which is used to manage </span>the<span class=\"markdown\"> app's stack of pages.</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///  * [MaterialPageRoute], which defines </span>an<span class=\"markdown\"> app page that transitions in </span>a<span class=\"markdown\"> material-specific way.</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///  * [WidgetsApp], which defines </span>the<span class=\"markdown\"> basic app elements </span>but<span class=\"markdown\"> does not depend on </span>the<span class=\"markdown\"> material library.</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///  * The Flutter Internationalization Tutorial,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">https:</span>//<span class=\"attr\">flutter.dev</span>/<span class=\"attr\">tutorials</span>/<span class=\"attr\">internationalization</span>/&gt;</span></span>.</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MaterialApp</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatefulWidget</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Creates </span>a<span class=\"markdown\"> MaterialApp.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// At least one of [home], [routes], [onGenerateRoute], or [builder] must be</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// non-null. If only [routes] is given, it must include </span>an<span class=\"markdown\"> entry for </span>the<span class=\"markdown\"></span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// [Navigator.defaultRouteName] (<span class=\"code\">`/`</span>), since that is </span>the<span class=\"markdown\"> route used when </span>the<span class=\"markdown\"></span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// application is launched with </span>an<span class=\"markdown\"> intent that specifies </span>an<span class=\"markdown\"> otherwise</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// unsupported route.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// This class creates </span>an<span class=\"markdown\"> instance of [WidgetsApp].</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// The boolean arguments, [routes], and [navigatorObservers], must not be null.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> MaterialApp(&#123;</span><br><span class=\"line\">    Key key,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.navigatorKey,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.home,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.routes = <span class=\"keyword\">const</span> &lt;<span class=\"built_in\">String</span>, WidgetBuilder&gt;&#123;&#125;,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.initialRoute,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.onGenerateRoute,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.onUnknownRoute,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.navigatorObservers = <span class=\"keyword\">const</span> &lt;NavigatorObserver&gt;[],</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.builder,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.title = <span class=\"string\">''</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.onGenerateTitle,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.color,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.theme,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.darkTheme,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.locale,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.localizationsDelegates,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.localeListResolutionCallback,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.localeResolutionCallback,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.supportedLocales = <span class=\"keyword\">const</span> &lt;Locale&gt;[Locale(<span class=\"string\">'en'</span>, <span class=\"string\">'US'</span>)],</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.debugShowMaterialGrid = <span class=\"keyword\">false</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.showPerformanceOverlay = <span class=\"keyword\">false</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.checkerboardRasterCacheImages = <span class=\"keyword\">false</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.checkerboardOffscreenLayers = <span class=\"keyword\">false</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.showSemanticsDebugger = <span class=\"keyword\">false</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.debugShowCheckedModeBanner = <span class=\"keyword\">true</span>,</span><br><span class=\"line\">  &#125;) : <span class=\"keyword\">assert</span>(routes != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(navigatorObservers != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(title != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(debugShowMaterialGrid != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(showPerformanceOverlay != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(checkerboardRasterCacheImages != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(checkerboardOffscreenLayers != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(showSemanticsDebugger != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(debugShowCheckedModeBanner != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">super</span>(key: key);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.navigatorKey&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> GlobalKey&lt;NavigatorState&gt; navigatorKey;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.home&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> Widget home;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// The application's top-level routing table.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// When </span>a<span class=\"markdown\"> named route is pushed with [Navigator.pushNamed], </span>the<span class=\"markdown\"> route name is</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// looked up in this map. If </span>the<span class=\"markdown\"> name is present, </span>the<span class=\"markdown\"> associated</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// [WidgetBuilder] is used to construct </span>a<span class=\"markdown\"> [MaterialPageRoute] that performs</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// </span>an<span class=\"markdown\"> appropriate transition, including [Hero] animations, to </span>the<span class=\"markdown\"> new route.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.routes&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, WidgetBuilder&gt; routes;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.initialRoute&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">String</span> initialRoute;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.onGenerateRoute&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> RouteFactory onGenerateRoute;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.onUnknownRoute&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> RouteFactory onUnknownRoute;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.navigatorObservers&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">List</span>&lt;NavigatorObserver&gt; navigatorObservers;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.builder&#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Material specific features </span>such<span class=\"markdown\"> as [showDialog] and [showMenu], and widgets</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// </span>such<span class=\"markdown\"> as [Tooltip], [PopupMenuButton], also require </span>a<span class=\"markdown\"> [Navigator] to properly</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// function.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> TransitionBuilder builder;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.title&#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// This value is passed unmodified to [WidgetsApp.title].</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">String</span> title;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.onGenerateTitle&#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// This value is passed unmodified to [WidgetsApp.onGenerateTitle].</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> GenerateAppTitle onGenerateTitle;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Default visual properties, </span>like<span class=\"markdown\"> colors fonts and shapes, for this app's</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// material widgets.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// A second [darkTheme] [ThemeData] value, which is used when </span>the<span class=\"markdown\"> underlying</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// platform requests </span>a<span class=\"markdown\"> \"dark mode\" UI, can also be specified.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// The default value of this property is </span>the<span class=\"markdown\"> value of [ThemeData.light()].</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// See also:</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * [MediaQueryData.platformBrightness], which indicates </span>the<span class=\"markdown\"> platform's</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    desired brightness and is used to automatically toggle between [theme]</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    and [darkTheme] in [MaterialApp].</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * [ThemeData.brightness], which indicates </span>the<span class=\"markdown\"> [Brightness] of </span>a<span class=\"markdown\"> theme's</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    colors.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> ThemeData theme;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// The [ThemeData] to use when </span>the<span class=\"markdown\"> platform specifically requests </span>a<span class=\"markdown\"> dark</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// themed UI.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Host platforms </span>such<span class=\"markdown\"> as Android Pie can request </span>a<span class=\"markdown\"> system-wide \"dark mode\"</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// when entering battery saver mode.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// When </span>the<span class=\"markdown\"> host platform requests </span>a<span class=\"markdown\"> [Brightness.dark] mode, </span>you<span class=\"markdown\"> may want to</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// supply </span>a<span class=\"markdown\"> [ThemeData.brightness] that's also [Brightness.dark].</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Uses [theme] instead when null. Defaults to </span>the<span class=\"markdown\"> value of</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// [ThemeData.light()] when both [darkTheme] and [theme] </span>are<span class=\"markdown\"> null.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// See also:</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * [MediaQueryData.platformBrightness], which indicates </span>the<span class=\"markdown\"> platform's</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    desired brightness and is used to automatically toggle between [theme]</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    and [darkTheme] in [MaterialApp].</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * [ThemeData.brightness], which is typically set to </span>the<span class=\"markdown\"> value of</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    [MediaQueryData.platformBrightness].</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> ThemeData darkTheme;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.color&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> Color color;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.locale&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> Locale locale;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.localizationsDelegates&#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Internationalized apps that require translations for one of </span>the<span class=\"markdown\"> locales</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// listed in [GlobalMaterialLocalizations] </span>should<span class=\"markdown\"> specify this parameter</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// and list </span>the<span class=\"markdown\"> [supportedLocales] that </span>the<span class=\"markdown\"> application can handle.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// import 'package:flutter<span class=\"emphasis\">_localizations/flutter_</span>localizations.dart';</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// MaterialApp(</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   localizationsDelegates: [</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     // ... app-specific localization delegate[s] here</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     GlobalMaterialLocalizations.delegate,</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     GlobalWidgetsLocalizations.delegate,</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   ],</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   supportedLocales: [</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     const Locale('en', 'US'), // English</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     const Locale('he', 'IL'), // Hebrew</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     // ... other locales </span>the<span class=\"markdown\"> app supports</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   ],</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   // ...</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// )</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// ## Adding localizations for </span>a<span class=\"markdown\"> new locale</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// The information that follows applies to </span>the<span class=\"markdown\"> unusual case of </span>an<span class=\"markdown\"> app</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// adding translations for </span>a<span class=\"markdown\"> language not already supported by</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// [GlobalMaterialLocalizations].</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Delegates that produce [WidgetsLocalizations] and [MaterialLocalizations]</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// </span>are<span class=\"markdown\"> included automatically. Apps can provide their own versions of these</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// localizations by creating implementations of</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// [LocalizationsDelegate<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">WidgetsLocalizations</span>&gt;</span></span>] or</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// [LocalizationsDelegate<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">MaterialLocalizations</span>&gt;</span></span>] whose load methods return</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// custom versions of [WidgetsLocalizations] or [MaterialLocalizations].</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// For example: to add support to [MaterialLocalizations] for </span>a<span class=\"markdown\"></span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// locale it </span>doesn't<span class=\"markdown\"> already support, say <span class=\"code\">`const Locale('foo', 'BR')`</span>,</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// one could </span>just<span class=\"markdown\"> extend [DefaultMaterialLocalizations]:</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// class FooLocalizations extends DefaultMaterialLocalizations &#123;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   FooLocalizations(Locale locale) : super(locale);</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   @override</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   String get okButtonLabel &#123;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     if (locale == const Locale('foo', 'BR'))</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///       return 'foo';</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     return super.okButtonLabel;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   &#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// A <span class=\"code\">`FooLocalizationsDelegate`</span> is essentially </span>just<span class=\"markdown\"> </span>a<span class=\"markdown\"> method that constructs</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// </span>a<span class=\"markdown\"> <span class=\"code\">`FooLocalizations`</span> object. We return </span>a<span class=\"markdown\"> [SynchronousFuture] here because</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// no asynchronous work takes place upon \"loading\" </span>the<span class=\"markdown\"> localizations object.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// class FooLocalizationsDelegate extends LocalizationsDelegate<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">MaterialLocalizations</span>&gt;</span></span> &#123;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   const FooLocalizationsDelegate();</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   @override</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   Future<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">FooLocalizations</span>&gt;</span></span> load(Locale locale) &#123;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     return SynchronousFuture(FooLocalizations(locale));</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   &#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   @override</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   bool shouldReload(FooLocalizationsDelegate old) =&gt; false;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Constructing </span>a<span class=\"markdown\"> [MaterialApp] with </span>a<span class=\"markdown\"> <span class=\"code\">`FooLocalizationsDelegate`</span> overrides</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// </span>the<span class=\"markdown\"> automatically included delegate for [MaterialLocalizations] because</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// only </span>the<span class=\"markdown\"> first delegate of each [LocalizationsDelegate.type] is used and</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// </span>the<span class=\"markdown\"> automatically included delegates </span>are<span class=\"markdown\"> added to </span>the<span class=\"markdown\"> end of </span>the<span class=\"markdown\"> app's</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// [localizationsDelegates] list.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// MaterialApp(</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   localizationsDelegates: [</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     const FooLocalizationsDelegate(),</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   ],</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   // ...</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// )</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// See also:</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * [supportedLocales], which must be specified along with</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    [localizationsDelegates].</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * [GlobalMaterialLocalizations], </span>a<span class=\"markdown\"> [localizationsDelegates] value</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    which provides material localizations for many languages.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * The Flutter Internationalization Tutorial,</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">https:</span>//<span class=\"attr\">flutter.dev</span>/<span class=\"attr\">tutorials</span>/<span class=\"attr\">internationalization</span>/&gt;</span></span>.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">Iterable</span>&lt;LocalizationsDelegate&lt;<span class=\"keyword\">dynamic</span>&gt;&gt; localizationsDelegates;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.localeListResolutionCallback&#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// This callback is passed along to </span>the<span class=\"markdown\"> [WidgetsApp] built by this widget.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> LocaleListResolutionCallback localeListResolutionCallback;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.localeResolutionCallback&#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// This callback is passed along to </span>the<span class=\"markdown\"> [WidgetsApp] built by this widget.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> LocaleResolutionCallback localeResolutionCallback;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.supportedLocales&#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// It is passed along unmodified to </span>the<span class=\"markdown\"> [WidgetsApp] built by this widget.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// See also:</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * [localizationsDelegates], which must be specified for localized</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    applications.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * [GlobalMaterialLocalizations], </span>a<span class=\"markdown\"> [localizationsDelegates] value</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    which provides material localizations for many languages.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * The Flutter Internationalization Tutorial,</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">https:</span>//<span class=\"attr\">flutter.dev</span>/<span class=\"attr\">tutorials</span>/<span class=\"attr\">internationalization</span>/&gt;</span></span>.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">Iterable</span>&lt;Locale&gt; supportedLocales;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Turns on </span>a<span class=\"markdown\"> performance overlay.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// See also:</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">https:</span>//<span class=\"attr\">flutter.dev</span>/<span class=\"attr\">debugging</span>/#<span class=\"attr\">performanceoverlay</span>&gt;</span></span></span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">bool</span> showPerformanceOverlay;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Turns on checkerboarding of raster cache images.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">bool</span> checkerboardRasterCacheImages;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Turns on checkerboarding of layers rendered to offscreen bitmaps.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">bool</span> checkerboardOffscreenLayers;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Turns on </span>an<span class=\"markdown\"> overlay that shows </span>the<span class=\"markdown\"> accessibility information</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// reported by </span>the<span class=\"markdown\"> framework.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">bool</span> showSemanticsDebugger;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.debugShowCheckedModeBanner&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">bool</span> debugShowCheckedModeBanner;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Turns on </span>a<span class=\"markdown\"> [GridPaper] overlay that paints </span>a<span class=\"markdown\"> baseline grid</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Material apps.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Only available in checked mode.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// See also:</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">https:</span>//<span class=\"attr\">material.io</span>/<span class=\"attr\">design</span>/<span class=\"attr\">layout</span>/<span class=\"attr\">spacing-methods.html</span>&gt;</span></span></span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">bool</span> debugShowMaterialGrid;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  _MaterialAppState createState() =&gt; _MaterialAppState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">_MaterialScrollBehavior</span> <span class=\"keyword\">extends</span> <span class=\"title\">ScrollBehavior</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  TargetPlatform getPlatform(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Theme.of(context).platform;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget buildViewportChrome(BuildContext context, Widget child, AxisDirection axisDirection) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// When modifying this function, consider modifying the implementation in</span></span><br><span class=\"line\">    <span class=\"comment\">// the base class as well.</span></span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (getPlatform(context)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> TargetPlatform.iOS:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> child;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> TargetPlatform.android:</span><br><span class=\"line\">      <span class=\"keyword\">case</span> TargetPlatform.fuchsia:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> GlowingOverscrollIndicator(</span><br><span class=\"line\">          child: child,</span><br><span class=\"line\">          axisDirection: axisDirection,</span><br><span class=\"line\">          color: Theme.of(context).accentColor,</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">_MaterialAppState</span> <span class=\"keyword\">extends</span> <span class=\"title\">State</span>&lt;<span class=\"title\">MaterialApp</span>&gt; </span>&#123;</span><br><span class=\"line\">  HeroController _heroController;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> initState() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.initState();</span><br><span class=\"line\">    _heroController = HeroController(createRectTween: _createRectTween);</span><br><span class=\"line\">    _updateNavigator();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> didUpdateWidget(MaterialApp oldWidget) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.didUpdateWidget(oldWidget);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (widget.navigatorKey != oldWidget.navigatorKey) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// If the Navigator changes, we have to create a new observer, because the</span></span><br><span class=\"line\">      <span class=\"comment\">// old Navigator won't be disposed (and thus won't unregister with its</span></span><br><span class=\"line\">      <span class=\"comment\">// observers) until after the new one has been created (because the</span></span><br><span class=\"line\">      <span class=\"comment\">// Navigator has a GlobalKey).</span></span><br><span class=\"line\">      _heroController = HeroController(createRectTween: _createRectTween);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    _updateNavigator();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">List</span>&lt;NavigatorObserver&gt; _navigatorObservers;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> _updateNavigator() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (widget.home != <span class=\"keyword\">null</span> ||</span><br><span class=\"line\">        widget.routes.isNotEmpty ||</span><br><span class=\"line\">        widget.onGenerateRoute != <span class=\"keyword\">null</span> ||</span><br><span class=\"line\">        widget.onUnknownRoute != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">      _navigatorObservers = <span class=\"built_in\">List</span>&lt;NavigatorObserver&gt;.from(widget.navigatorObservers)</span><br><span class=\"line\">        ..add(_heroController);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      _navigatorObservers = <span class=\"keyword\">const</span> &lt;NavigatorObserver&gt;[];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  RectTween _createRectTween(Rect begin, Rect end) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> MaterialRectArcTween(begin: begin, end: end);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Combine the Localizations for Material with the ones contributed</span></span><br><span class=\"line\">  <span class=\"comment\">// by the localizationsDelegates parameter, if any. Only the first delegate</span></span><br><span class=\"line\">  <span class=\"comment\">// of a particular LocalizationsDelegate.type is loaded so the</span></span><br><span class=\"line\">  <span class=\"comment\">// localizationsDelegate parameter can be used to override</span></span><br><span class=\"line\">  <span class=\"comment\">// _MaterialLocalizationsDelegate.</span></span><br><span class=\"line\">  <span class=\"built_in\">Iterable</span>&lt;LocalizationsDelegate&lt;<span class=\"keyword\">dynamic</span>&gt;&gt; <span class=\"keyword\">get</span> _localizationsDelegates <span class=\"keyword\">sync</span>* &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (widget.localizationsDelegates != <span class=\"keyword\">null</span>)</span><br><span class=\"line\">      <span class=\"keyword\">yield</span>* widget.localizationsDelegates;</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> DefaultMaterialLocalizations.delegate;</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> DefaultCupertinoLocalizations.delegate;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    Widget result = WidgetsApp(</span><br><span class=\"line\">      key: GlobalObjectKey(<span class=\"keyword\">this</span>),</span><br><span class=\"line\">      navigatorKey: widget.navigatorKey,</span><br><span class=\"line\">      navigatorObservers: _navigatorObservers,</span><br><span class=\"line\">        pageRouteBuilder: &lt;T&gt;(RouteSettings settings, WidgetBuilder builder) =&gt;</span><br><span class=\"line\">            MaterialPageRoute&lt;T&gt;(settings: settings, builder: builder),</span><br><span class=\"line\">      home: widget.home,</span><br><span class=\"line\">      routes: widget.routes,</span><br><span class=\"line\">      initialRoute: widget.initialRoute,</span><br><span class=\"line\">      onGenerateRoute: widget.onGenerateRoute,</span><br><span class=\"line\">      onUnknownRoute: widget.onUnknownRoute,</span><br><span class=\"line\">      builder: (BuildContext context, Widget child) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Use a light theme, dark theme, or fallback theme.</span></span><br><span class=\"line\">        ThemeData theme;</span><br><span class=\"line\">        <span class=\"keyword\">final</span> ui.Brightness platformBrightness = MediaQuery.platformBrightnessOf(context);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (platformBrightness == ui.Brightness.dark &amp;&amp; widget.darkTheme != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">          theme = widget.darkTheme;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (widget.theme != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">          theme = widget.theme;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          theme = ThemeData.fallback();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> AnimatedTheme(</span><br><span class=\"line\">          data: theme,</span><br><span class=\"line\">          isMaterialAppTheme: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">          child: widget.builder != <span class=\"keyword\">null</span></span><br><span class=\"line\">              ? Builder(</span><br><span class=\"line\">                  builder: (BuildContext context) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// Why are we surrounding a builder with a builder?</span></span><br><span class=\"line\">                    <span class=\"comment\">//</span></span><br><span class=\"line\">                    <span class=\"comment\">// The widget.builder may contain code that invokes</span></span><br><span class=\"line\">                    <span class=\"comment\">// Theme.of(), which should return the theme we selected</span></span><br><span class=\"line\">                    <span class=\"comment\">// above in AnimatedTheme. However, if we invoke</span></span><br><span class=\"line\">                    <span class=\"comment\">// widget.builder() directly as the child of AnimatedTheme</span></span><br><span class=\"line\">                    <span class=\"comment\">// then there is no Context separating them, and the</span></span><br><span class=\"line\">                    <span class=\"comment\">// widget.builder() will not find the theme. Therefore, we</span></span><br><span class=\"line\">                    <span class=\"comment\">// surround widget.builder with yet another builder so that</span></span><br><span class=\"line\">                    <span class=\"comment\">// a context separates them and Theme.of() correctly</span></span><br><span class=\"line\">                    <span class=\"comment\">// resolves to the theme we passed to AnimatedTheme.</span></span><br><span class=\"line\">                    <span class=\"keyword\">return</span> widget.builder(context, child);</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                )</span><br><span class=\"line\">              : child,</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      title: widget.title,</span><br><span class=\"line\">      onGenerateTitle: widget.onGenerateTitle,</span><br><span class=\"line\">      textStyle: _errorTextStyle,</span><br><span class=\"line\">      <span class=\"comment\">// The color property is always pulled from the light theme, even if dark</span></span><br><span class=\"line\">      <span class=\"comment\">// mode is activated. This was done to simplify the technical details</span></span><br><span class=\"line\">      <span class=\"comment\">// of switching themes and it was deemed acceptable because this color</span></span><br><span class=\"line\">      <span class=\"comment\">// property is only used on old Android OSes to color the app bar in</span></span><br><span class=\"line\">      <span class=\"comment\">// Android's switcher UI.</span></span><br><span class=\"line\">      <span class=\"comment\">//</span></span><br><span class=\"line\">      <span class=\"comment\">// blue is the primary color of the default theme</span></span><br><span class=\"line\">      color: widget.color ?? widget.theme?.primaryColor ?? Colors.blue,</span><br><span class=\"line\">      locale: widget.locale,</span><br><span class=\"line\">      localizationsDelegates: _localizationsDelegates,</span><br><span class=\"line\">      localeResolutionCallback: widget.localeResolutionCallback,</span><br><span class=\"line\">      localeListResolutionCallback: widget.localeListResolutionCallback,</span><br><span class=\"line\">      supportedLocales: widget.supportedLocales,</span><br><span class=\"line\">      showPerformanceOverlay: widget.showPerformanceOverlay,</span><br><span class=\"line\">      checkerboardRasterCacheImages: widget.checkerboardRasterCacheImages,</span><br><span class=\"line\">      checkerboardOffscreenLayers: widget.checkerboardOffscreenLayers,</span><br><span class=\"line\">      showSemanticsDebugger: widget.showSemanticsDebugger,</span><br><span class=\"line\">      debugShowCheckedModeBanner: widget.debugShowCheckedModeBanner,</span><br><span class=\"line\">      inspectorSelectButtonBuilder: (BuildContext context, VoidCallback onPressed) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> FloatingActionButton(</span><br><span class=\"line\">          child: <span class=\"keyword\">const</span> Icon(Icons.search),</span><br><span class=\"line\">          onPressed: onPressed,</span><br><span class=\"line\">          mini: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">assert</span>(() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (widget.debugShowMaterialGrid) &#123;</span><br><span class=\"line\">        result = GridPaper(</span><br><span class=\"line\">          color: <span class=\"keyword\">const</span> Color(<span class=\"number\">0xE0F9BBE0</span>),</span><br><span class=\"line\">          interval: <span class=\"number\">8.0</span>,</span><br><span class=\"line\">          divisions: <span class=\"number\">2</span>,</span><br><span class=\"line\">          subdivisions: <span class=\"number\">1</span>,</span><br><span class=\"line\">          child: result,</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ScrollConfiguration(</span><br><span class=\"line\">      behavior: _MaterialScrollBehavior(),</span><br><span class=\"line\">      child: result,</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<h4 id=\"个人见解\"><a class=\"markdownIt-Anchor\" href=\"#个人见解\"></a> 个人见解</h4>\n</li>\n</ul>\n<blockquote>\n<p>根据演示代码可以看到，其实一个Widget 准确的说很多Widget组合起来能够做的事情真的挺多。从源码可以看出，其实MaterialApp 就是一个Widget，一个标准的app开发脚手架</p>\n</blockquote>\n","site":{"data":{"links":[{"name":"Yaooort","describe":"大傻子","link":"http://www.yaooort.com","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4172.jpg"},{"name":"GitHub","describe":"直男网","link":"https://github.com/yaooort","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3829.jpg"}]}},"excerpt":"","more":"<ul>\n<li>\n<h4 id=\"个人理解\"><a class=\"markdownIt-Anchor\" href=\"#个人理解\"></a> 个人理解</h4>\n</li>\n</ul>\n<blockquote>\n<p>这就是官方给的一个页面规范，开发Android的同学比较了解，google一般给出的这种东西，实际项目(或者说高质量UI应用)是仅供参考的，但是这次貌似不太一样，<s>MaterialApp究竟好用不好用现在也没一个说法，估计大家都选择自定义了吧</s></p>\n</blockquote>\n<ul>\n<li>\n<h4 id=\"代码属性注释解读官方api地址\"><a class=\"markdownIt-Anchor\" href=\"#代码属性注释解读官方api地址\"></a> 代码属性注释解读<a href=\"https://api.flutter.dev/flutter/material/MaterialApp-class.html\" target=\"_blank\" rel=\"noopener\">官方Api地址</a></h4>\n</li>\n</ul>\n<blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"keyword\">import</span> <span class=\"string\">'package:flutter/foundation.dart'</span>;</span><br><span class=\"line\">&gt; <span class=\"keyword\">import</span> <span class=\"string\">'package:flutter/material.dart'</span>;</span><br><span class=\"line\">&gt; <span class=\"keyword\">import</span> <span class=\"string\">'package:flutter_login_page_ui/Pages/HomePage.dart'</span>;</span><br><span class=\"line\">&gt; <span class=\"keyword\">import</span> <span class=\"string\">'package:flutter_login_page_ui/Pages/LoginPage.dart'</span>;</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt; GlobalKey&lt;NavigatorState&gt; _navigatorKey = <span class=\"keyword\">new</span> GlobalKey();</span><br><span class=\"line\">&gt; <span class=\"keyword\">void</span> main() =&gt; runApp(MaterialApp(</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 该标题出现在 Android：任务管理器的程序快照之上 IOS: 程序切换管理器中</span></span><br><span class=\"line\">&gt;       title: <span class=\"string\">'Flutter应用'</span>,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 跟上面的tiitle一样，但含有一个context参数 用于做本地化</span></span><br><span class=\"line\">&gt;       onGenerateTitle: (context) &#123;</span><br><span class=\"line\">&gt;         <span class=\"keyword\">return</span> <span class=\"string\">'Flutter应用'</span>;</span><br><span class=\"line\">&gt;       &#125;,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 该颜色为Android中程序切换中应用图标背景的颜色，当应用图标背景为透明时</span></span><br><span class=\"line\">&gt;       color: Colors.blue,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 应用程序的主题，各种的定制颜色都可以设置，用于程序主题切换</span></span><br><span class=\"line\">&gt;       theme: <span class=\"keyword\">new</span> ThemeData(</span><br><span class=\"line\">&gt;         <span class=\"comment\">//主题色</span></span><br><span class=\"line\">&gt;         primarySwatch: Colors.blue,</span><br><span class=\"line\">&gt;       ),</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 本地化委托，用于更改Flutter Widget默认的提示语，按钮text等</span></span><br><span class=\"line\">&gt;       localizationsDelegates: [</span><br><span class=\"line\">&gt;         MyLocalizationsDelegates(),</span><br><span class=\"line\">&gt;       ],</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 当前区域，如果为null则使用系统区域 一般用于语言切换</span></span><br><span class=\"line\">&gt;       locale: Locale(<span class=\"string\">'zh'</span>, <span class=\"string\">'cn'</span>),</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 当传入的是不支持的语种，可以根据这个回调，返回相近,并且支持的语种</span></span><br><span class=\"line\">&gt;       localeResolutionCallback: (local, support) &#123;</span><br><span class=\"line\">&gt;         <span class=\"keyword\">if</span> (support.contains(support)) &#123;</span><br><span class=\"line\">&gt;           <span class=\"built_in\">print</span>(<span class=\"string\">'support'</span>);</span><br><span class=\"line\">&gt;           <span class=\"keyword\">return</span> local;</span><br><span class=\"line\">&gt;         &#125;</span><br><span class=\"line\">&gt;         <span class=\"built_in\">print</span>(<span class=\"string\">'no_support'</span>);</span><br><span class=\"line\">&gt;         <span class=\"keyword\">return</span> <span class=\"keyword\">const</span> Locale(<span class=\"string\">'zh'</span>, <span class=\"string\">'cn'</span>);</span><br><span class=\"line\">&gt;       &#125;,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// supportedLocales 传入支持的语种数组</span></span><br><span class=\"line\">&gt;       supportedLocales: [</span><br><span class=\"line\">&gt;         <span class=\"keyword\">const</span> Locale(<span class=\"string\">'uok'</span>),</span><br><span class=\"line\">&gt;         <span class=\"keyword\">const</span> Locale(<span class=\"string\">'meg'</span>),</span><br><span class=\"line\">&gt;       ],</span><br><span class=\"line\">&gt;       <span class=\"comment\">// debug模式下是否显示材质网格，传入bool类型，使用就不写了</span></span><br><span class=\"line\">&gt;       debugShowMaterialGrid: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// showPerformanceOverlay 当为true时应用程序顶部覆盖一层GPU和UI曲线图，可即时查看当前流畅度情况</span></span><br><span class=\"line\">&gt;       showPerformanceOverlay: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 当为true时，打开光栅缓存图像的棋盘格</span></span><br><span class=\"line\">&gt;       checkerboardRasterCacheImages: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 当为true时，打开呈现到屏幕位图的层的棋盘格</span></span><br><span class=\"line\">&gt;       checkerboardOffscreenLayers: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 当为true时，打开Widget边框，类似Android开发者模式中显示布局边界</span></span><br><span class=\"line\">&gt;       showSemanticsDebugger: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 当为true时，在debug模式下显示右上角的debug字样的横幅，false即为不显示</span></span><br><span class=\"line\">&gt;       debugShowCheckedModeBanner: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 路由列表</span></span><br><span class=\"line\">&gt;       routes: &#123;</span><br><span class=\"line\">&gt;         <span class=\"string\">'login'</span>: (BuildContext context) =&gt; LoginPage(),</span><br><span class=\"line\">&gt;         <span class=\"string\">'welcome'</span>: (BuildContext context) =&gt; WelcomePage(),</span><br><span class=\"line\">&gt;         <span class=\"string\">'home'</span>: (BuildContext context) =&gt; HomePage(),</span><br><span class=\"line\">&gt;       &#125;,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// navigatorKey.currentState 相当于 Navigator.of(context)</span></span><br><span class=\"line\">&gt;       navigatorKey: _navigatorKey,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 默认第一个加载的路由页面</span></span><br><span class=\"line\">&gt;       initialRoute: <span class=\"string\">'welcome'</span>,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 调用顺序为onGenerateRoute ==&gt; onUnknownRoute</span></span><br><span class=\"line\">&gt;       onGenerateRoute: (setting) &#123;</span><br><span class=\"line\">&gt;         <span class=\"keyword\">return</span> PageRouteBuilder(</span><br><span class=\"line\">&gt;             pageBuilder: (BuildContext context, _, __) &#123;</span><br><span class=\"line\">&gt;               <span class=\"keyword\">return</span> HomePage();</span><br><span class=\"line\">&gt;             &#125;,</span><br><span class=\"line\">&gt;             opaque: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">&gt;             transitionDuration: <span class=\"keyword\">new</span> <span class=\"built_in\">Duration</span>(milliseconds: <span class=\"number\">200</span>),</span><br><span class=\"line\">&gt;             transitionsBuilder:</span><br><span class=\"line\">&gt;                 (___, Animation&lt;<span class=\"built_in\">double</span>&gt; animation, ____, Widget child) &#123;</span><br><span class=\"line\">&gt;               <span class=\"keyword\">return</span> FadeTransition(</span><br><span class=\"line\">&gt;                 opacity: animation,</span><br><span class=\"line\">&gt;                 child: <span class=\"keyword\">new</span> ScaleTransition(</span><br><span class=\"line\">&gt;                   scale: <span class=\"keyword\">new</span> Tween&lt;<span class=\"built_in\">double</span>&gt;(begin: <span class=\"number\">0.5</span>, end: <span class=\"number\">1.0</span>)</span><br><span class=\"line\">&gt;                       .animate(animation),</span><br><span class=\"line\">&gt;                   child: child,</span><br><span class=\"line\">&gt;                 ),</span><br><span class=\"line\">&gt;               );</span><br><span class=\"line\">&gt;             &#125;);</span><br><span class=\"line\">&gt;       &#125;,</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 路由观察器，当调用Navigator的相关方法时，会回调相关的操作</span></span><br><span class=\"line\">&gt;       navigatorObservers: [MyObserver()],</span><br><span class=\"line\">&gt;       <span class=\"comment\">// 当构建一个Widget前调用 一般做字体大小，方向，主题颜色等配置</span></span><br><span class=\"line\">&gt;       builder: (BuildContext context, Widget child) &#123;</span><br><span class=\"line\">&gt;         <span class=\"keyword\">return</span> MediaQuery(</span><br><span class=\"line\">&gt;           data: MediaQuery.of(context).copyWith(</span><br><span class=\"line\">&gt;             <span class=\"comment\">//字体大小</span></span><br><span class=\"line\">&gt;             textScaleFactor: <span class=\"number\">1.4</span>,</span><br><span class=\"line\">&gt;           ),</span><br><span class=\"line\">&gt;           child: child,</span><br><span class=\"line\">&gt;         );</span><br><span class=\"line\">&gt;       &#125;</span><br><span class=\"line\">&gt;     ));</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt; <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyLocalizationsDelegates</span></span></span><br><span class=\"line\"><span class=\"class\">&gt;     <span class=\"keyword\">extends</span> <span class=\"title\">LocalizationsDelegate</span>&lt;<span class=\"title\">MaterialLocalizations</span>&gt; </span>&#123;</span><br><span class=\"line\">&gt;   <span class=\"meta\">@override</span></span><br><span class=\"line\">&gt;   <span class=\"built_in\">bool</span> isSupported(Locale locale) &#123;</span><br><span class=\"line\">&gt; <span class=\"comment\">//是否支持该locale，如果不支持会报异常</span></span><br><span class=\"line\">&gt;     <span class=\"keyword\">if</span> (locale == <span class=\"keyword\">const</span> Locale(<span class=\"string\">'zh'</span>, <span class=\"string\">'cn'</span>)) &#123;</span><br><span class=\"line\">&gt;       <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">&gt;     &#125;</span><br><span class=\"line\">&gt;     <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">&gt;   &#125;</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt;   <span class=\"meta\">@override</span> <span class=\"comment\">//是否需要重载</span></span><br><span class=\"line\">&gt;   <span class=\"built_in\">bool</span> shouldReload(LocalizationsDelegate old) =&gt; <span class=\"keyword\">false</span>;</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt;   <span class=\"meta\">@override</span></span><br><span class=\"line\">&gt;   Future&lt;MaterialLocalizations&gt; load(Locale locale) &#123;</span><br><span class=\"line\">&gt; <span class=\"comment\">//加载本地化</span></span><br><span class=\"line\">&gt;     <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> SynchronousFuture(<span class=\"keyword\">new</span> MyLocalizations(locale));</span><br><span class=\"line\">&gt;   &#125;</span><br><span class=\"line\">&gt; &#125;</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt; <span class=\"comment\">//本地化实现，继承DefaultMaterialLocalizations</span></span><br><span class=\"line\">&gt; <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyLocalizations</span> <span class=\"keyword\">extends</span> <span class=\"title\">DefaultMaterialLocalizations</span> </span>&#123;</span><br><span class=\"line\">&gt;   <span class=\"keyword\">final</span> Locale locale;</span><br><span class=\"line\">&gt;   MyLocalizations(</span><br><span class=\"line\">&gt;     <span class=\"keyword\">this</span>.locale,</span><br><span class=\"line\">&gt;   );</span><br><span class=\"line\">&gt;   <span class=\"meta\">@override</span></span><br><span class=\"line\">&gt;   <span class=\"built_in\">String</span> <span class=\"keyword\">get</span> okButtonLabel &#123;</span><br><span class=\"line\">&gt;     <span class=\"keyword\">if</span> (locale == <span class=\"keyword\">const</span> Locale(<span class=\"string\">'zh'</span>, <span class=\"string\">'cn'</span>)) &#123;</span><br><span class=\"line\">&gt;       <span class=\"keyword\">return</span> <span class=\"string\">'好的'</span>;</span><br><span class=\"line\">&gt;     &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">&gt;       <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.okButtonLabel;</span><br><span class=\"line\">&gt;     &#125;</span><br><span class=\"line\">&gt;   &#125;</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt;   <span class=\"meta\">@override</span></span><br><span class=\"line\">&gt;   <span class=\"built_in\">String</span> <span class=\"keyword\">get</span> backButtonTooltip &#123;</span><br><span class=\"line\">&gt;     <span class=\"keyword\">if</span> (locale == <span class=\"keyword\">const</span> Locale(<span class=\"string\">'zh'</span>, <span class=\"string\">'cn'</span>)) &#123;</span><br><span class=\"line\">&gt;       <span class=\"keyword\">return</span> <span class=\"string\">'返回'</span>;</span><br><span class=\"line\">&gt;     &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">&gt;       <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.okButtonLabel;</span><br><span class=\"line\">&gt;     &#125;</span><br><span class=\"line\">&gt;   &#125;</span><br><span class=\"line\">&gt; &#125;</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt; <span class=\"comment\">//继承NavigatorObserver</span></span><br><span class=\"line\">&gt; <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyObserver</span> <span class=\"keyword\">extends</span> <span class=\"title\">NavigatorObserver</span> </span>&#123;</span><br><span class=\"line\">&gt;   <span class=\"meta\">@override</span></span><br><span class=\"line\">&gt;   <span class=\"keyword\">void</span> didPush(Route route, Route previousRoute) &#123;</span><br><span class=\"line\">&gt;     <span class=\"comment\">// 当调用Navigator.push时回调</span></span><br><span class=\"line\">&gt;     <span class=\"keyword\">super</span>.didPush(route, previousRoute);</span><br><span class=\"line\">&gt;     <span class=\"comment\">//可通过route.settings获取路由相关内容</span></span><br><span class=\"line\">&gt;     <span class=\"comment\">//route.currentResult获取返回内容</span></span><br><span class=\"line\">&gt;     <span class=\"comment\">//....等等</span></span><br><span class=\"line\">&gt;     <span class=\"built_in\">print</span>(route.settings.name);</span><br><span class=\"line\">&gt;   &#125;</span><br><span class=\"line\">&gt; &#125;</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt; <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WelcomePage</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatefulWidget</span> </span>&#123;</span><br><span class=\"line\">&gt;   <span class=\"meta\">@override</span></span><br><span class=\"line\">&gt;   _WelcomePage createState() =&gt; _WelcomePage();</span><br><span class=\"line\">&gt; &#125;</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt; <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">_WelcomePage</span> <span class=\"keyword\">extends</span> <span class=\"title\">State</span>&lt;<span class=\"title\">WelcomePage</span>&gt; </span>&#123;</span><br><span class=\"line\">&gt;   <span class=\"meta\">@override</span></span><br><span class=\"line\">&gt;   Widget build(BuildContext context) =&gt; Scaffold(</span><br><span class=\"line\">&gt;         appBar: AppBar(</span><br><span class=\"line\">&gt;           title: Text(<span class=\"string\">\"第一个页面\"</span>),</span><br><span class=\"line\">&gt;         ),</span><br><span class=\"line\">&gt;         body: Center(</span><br><span class=\"line\">&gt;           child: Text(<span class=\"string\">'Home'</span>),</span><br><span class=\"line\">&gt;         ),</span><br><span class=\"line\">&gt;       );</span><br><span class=\"line\">&gt; &#125;</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<ul>\n<li>\n<h4 id=\"源码\"><a class=\"markdownIt-Anchor\" href=\"#源码\"></a> 源码</h4>\n</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Copyright 2015 The Chromium Authors. All rights reserved.</span></span><br><span class=\"line\"><span class=\"comment\">// Use of this source code is governed by a BSD-style license that can be</span></span><br><span class=\"line\"><span class=\"comment\">// found in the LICENSE file.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'dart:ui'</span> <span class=\"keyword\">as</span> ui;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'package:flutter/cupertino.dart'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'package:flutter/rendering.dart'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'package:flutter/widgets.dart'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'arc.dart'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'colors.dart'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'floating_action_button.dart'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'icons.dart'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'material_localizations.dart'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'page.dart'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'theme.dart'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// [MaterialApp] uses this [TextStyle] as its [DefaultTextStyle] to encourage</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// developers to be intentional about their [DefaultTextStyle].</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// In Material Design, most [Text] widgets </span>are<span class=\"markdown\"> contained in [Material] widgets,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// which sets </span>a<span class=\"markdown\"> specific [DefaultTextStyle]. If </span>you<span class=\"markdown\">'re seeing text that uses</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// this text style, consider putting </span>your<span class=\"markdown\"> text in </span>a<span class=\"markdown\"> [Material] widget (or</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// another widget that sets </span>a<span class=\"markdown\"> [DefaultTextStyle]).</span></span></span><br><span class=\"line\"><span class=\"keyword\">const</span> TextStyle _errorTextStyle = TextStyle(</span><br><span class=\"line\">  color: Color(<span class=\"number\">0xD0FF0000</span>),</span><br><span class=\"line\">  fontFamily: <span class=\"string\">'monospace'</span>,</span><br><span class=\"line\">  fontSize: <span class=\"number\">48.0</span>,</span><br><span class=\"line\">  fontWeight: FontWeight.w900,</span><br><span class=\"line\">  decoration: TextDecoration.underline,</span><br><span class=\"line\">  decorationColor: Color(<span class=\"number\">0xFFFFFF00</span>),</span><br><span class=\"line\">  decorationStyle: TextDecorationStyle.<span class=\"built_in\">double</span>,</span><br><span class=\"line\">  debugLabel: <span class=\"string\">'fallback style; consider putting your text in a Material'</span>,</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// An application that uses material design.</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// A convenience widget that wraps </span>a<span class=\"markdown\"> number of widgets that </span>are<span class=\"markdown\"> commonly</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// required for material design applications. It builds upon </span>a<span class=\"markdown\"> [WidgetsApp] by</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// adding material-design specific functionality, </span>such<span class=\"markdown\"> as [AnimatedTheme] and</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// [GridPaper].</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// The [MaterialApp] configures </span>the<span class=\"markdown\"> top-level [Navigator] to search for routes</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// in </span>the<span class=\"markdown\"> following order:</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///  1. For </span>the<span class=\"markdown\"> <span class=\"code\">`/`</span> route, </span>the<span class=\"markdown\"> [home] property, if non-null, is used.</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///  2. Otherwise, </span>the<span class=\"markdown\"> [routes] table is used, if it has </span>an<span class=\"markdown\"> entry for </span>the<span class=\"markdown\"> route.</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///  3. Otherwise, [onGenerateRoute] is called, if provided. It </span>should<span class=\"markdown\"> return </span>a<span class=\"markdown\"></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///     non-null value for any <span class=\"emphasis\">_valid_</span> route not handled by [home] and [routes].</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///  4. Finally if all else fails [onUnknownRoute] is called.</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// If </span>a<span class=\"markdown\"> [Navigator] is created, at least one of these options must handle </span>the<span class=\"markdown\"></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// <span class=\"code\">`/`</span> route, since it is used when </span>an<span class=\"markdown\"> invalid [initialRoute] is specified on</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// startup (e.g. by another application launching this one with </span>an<span class=\"markdown\"> intent on</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// Android; see [Window.defaultRouteName]).</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// This widget also configures </span>the<span class=\"markdown\"> observer of </span>the<span class=\"markdown\"> top-level [Navigator] (if</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// any) to perform [Hero] animations.</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// If [home], [routes], [onGenerateRoute], and [onUnknownRoute] </span>are<span class=\"markdown\"> all null,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// and [builder] is not null, then no [Navigator] is created.</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/// See also:</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///  * [Scaffold], which provides standard app elements </span>like<span class=\"markdown\"> </span>an<span class=\"markdown\"> [AppBar] and </span>a<span class=\"markdown\"> [Drawer].</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///  * [Navigator], which is used to manage </span>the<span class=\"markdown\"> app's stack of pages.</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///  * [MaterialPageRoute], which defines </span>an<span class=\"markdown\"> app page that transitions in </span>a<span class=\"markdown\"> material-specific way.</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///  * [WidgetsApp], which defines </span>the<span class=\"markdown\"> basic app elements </span>but<span class=\"markdown\"> does not depend on </span>the<span class=\"markdown\"> material library.</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///  * The Flutter Internationalization Tutorial,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">///    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">https:</span>//<span class=\"attr\">flutter.dev</span>/<span class=\"attr\">tutorials</span>/<span class=\"attr\">internationalization</span>/&gt;</span></span>.</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MaterialApp</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatefulWidget</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Creates </span>a<span class=\"markdown\"> MaterialApp.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// At least one of [home], [routes], [onGenerateRoute], or [builder] must be</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// non-null. If only [routes] is given, it must include </span>an<span class=\"markdown\"> entry for </span>the<span class=\"markdown\"></span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// [Navigator.defaultRouteName] (<span class=\"code\">`/`</span>), since that is </span>the<span class=\"markdown\"> route used when </span>the<span class=\"markdown\"></span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// application is launched with </span>an<span class=\"markdown\"> intent that specifies </span>an<span class=\"markdown\"> otherwise</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// unsupported route.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// This class creates </span>an<span class=\"markdown\"> instance of [WidgetsApp].</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// The boolean arguments, [routes], and [navigatorObservers], must not be null.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> MaterialApp(&#123;</span><br><span class=\"line\">    Key key,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.navigatorKey,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.home,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.routes = <span class=\"keyword\">const</span> &lt;<span class=\"built_in\">String</span>, WidgetBuilder&gt;&#123;&#125;,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.initialRoute,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.onGenerateRoute,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.onUnknownRoute,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.navigatorObservers = <span class=\"keyword\">const</span> &lt;NavigatorObserver&gt;[],</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.builder,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.title = <span class=\"string\">''</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.onGenerateTitle,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.color,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.theme,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.darkTheme,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.locale,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.localizationsDelegates,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.localeListResolutionCallback,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.localeResolutionCallback,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.supportedLocales = <span class=\"keyword\">const</span> &lt;Locale&gt;[Locale(<span class=\"string\">'en'</span>, <span class=\"string\">'US'</span>)],</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.debugShowMaterialGrid = <span class=\"keyword\">false</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.showPerformanceOverlay = <span class=\"keyword\">false</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.checkerboardRasterCacheImages = <span class=\"keyword\">false</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.checkerboardOffscreenLayers = <span class=\"keyword\">false</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.showSemanticsDebugger = <span class=\"keyword\">false</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.debugShowCheckedModeBanner = <span class=\"keyword\">true</span>,</span><br><span class=\"line\">  &#125;) : <span class=\"keyword\">assert</span>(routes != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(navigatorObservers != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(title != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(debugShowMaterialGrid != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(showPerformanceOverlay != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(checkerboardRasterCacheImages != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(checkerboardOffscreenLayers != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(showSemanticsDebugger != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(debugShowCheckedModeBanner != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">super</span>(key: key);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.navigatorKey&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> GlobalKey&lt;NavigatorState&gt; navigatorKey;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.home&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> Widget home;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// The application's top-level routing table.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// When </span>a<span class=\"markdown\"> named route is pushed with [Navigator.pushNamed], </span>the<span class=\"markdown\"> route name is</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// looked up in this map. If </span>the<span class=\"markdown\"> name is present, </span>the<span class=\"markdown\"> associated</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// [WidgetBuilder] is used to construct </span>a<span class=\"markdown\"> [MaterialPageRoute] that performs</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// </span>an<span class=\"markdown\"> appropriate transition, including [Hero] animations, to </span>the<span class=\"markdown\"> new route.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.routes&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, WidgetBuilder&gt; routes;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.initialRoute&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">String</span> initialRoute;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.onGenerateRoute&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> RouteFactory onGenerateRoute;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.onUnknownRoute&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> RouteFactory onUnknownRoute;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.navigatorObservers&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">List</span>&lt;NavigatorObserver&gt; navigatorObservers;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.builder&#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Material specific features </span>such<span class=\"markdown\"> as [showDialog] and [showMenu], and widgets</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// </span>such<span class=\"markdown\"> as [Tooltip], [PopupMenuButton], also require </span>a<span class=\"markdown\"> [Navigator] to properly</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// function.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> TransitionBuilder builder;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.title&#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// This value is passed unmodified to [WidgetsApp.title].</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">String</span> title;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.onGenerateTitle&#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// This value is passed unmodified to [WidgetsApp.onGenerateTitle].</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> GenerateAppTitle onGenerateTitle;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Default visual properties, </span>like<span class=\"markdown\"> colors fonts and shapes, for this app's</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// material widgets.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// A second [darkTheme] [ThemeData] value, which is used when </span>the<span class=\"markdown\"> underlying</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// platform requests </span>a<span class=\"markdown\"> \"dark mode\" UI, can also be specified.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// The default value of this property is </span>the<span class=\"markdown\"> value of [ThemeData.light()].</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// See also:</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * [MediaQueryData.platformBrightness], which indicates </span>the<span class=\"markdown\"> platform's</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    desired brightness and is used to automatically toggle between [theme]</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    and [darkTheme] in [MaterialApp].</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * [ThemeData.brightness], which indicates </span>the<span class=\"markdown\"> [Brightness] of </span>a<span class=\"markdown\"> theme's</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    colors.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> ThemeData theme;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// The [ThemeData] to use when </span>the<span class=\"markdown\"> platform specifically requests </span>a<span class=\"markdown\"> dark</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// themed UI.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Host platforms </span>such<span class=\"markdown\"> as Android Pie can request </span>a<span class=\"markdown\"> system-wide \"dark mode\"</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// when entering battery saver mode.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// When </span>the<span class=\"markdown\"> host platform requests </span>a<span class=\"markdown\"> [Brightness.dark] mode, </span>you<span class=\"markdown\"> may want to</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// supply </span>a<span class=\"markdown\"> [ThemeData.brightness] that's also [Brightness.dark].</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Uses [theme] instead when null. Defaults to </span>the<span class=\"markdown\"> value of</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// [ThemeData.light()] when both [darkTheme] and [theme] </span>are<span class=\"markdown\"> null.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// See also:</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * [MediaQueryData.platformBrightness], which indicates </span>the<span class=\"markdown\"> platform's</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    desired brightness and is used to automatically toggle between [theme]</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    and [darkTheme] in [MaterialApp].</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * [ThemeData.brightness], which is typically set to </span>the<span class=\"markdown\"> value of</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    [MediaQueryData.platformBrightness].</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> ThemeData darkTheme;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.color&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> Color color;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.locale&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> Locale locale;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.localizationsDelegates&#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Internationalized apps that require translations for one of </span>the<span class=\"markdown\"> locales</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// listed in [GlobalMaterialLocalizations] </span>should<span class=\"markdown\"> specify this parameter</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// and list </span>the<span class=\"markdown\"> [supportedLocales] that </span>the<span class=\"markdown\"> application can handle.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// import 'package:flutter<span class=\"emphasis\">_localizations/flutter_</span>localizations.dart';</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// MaterialApp(</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   localizationsDelegates: [</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     // ... app-specific localization delegate[s] here</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     GlobalMaterialLocalizations.delegate,</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     GlobalWidgetsLocalizations.delegate,</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   ],</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   supportedLocales: [</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     const Locale('en', 'US'), // English</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     const Locale('he', 'IL'), // Hebrew</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     // ... other locales </span>the<span class=\"markdown\"> app supports</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   ],</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   // ...</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// )</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// ## Adding localizations for </span>a<span class=\"markdown\"> new locale</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// The information that follows applies to </span>the<span class=\"markdown\"> unusual case of </span>an<span class=\"markdown\"> app</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// adding translations for </span>a<span class=\"markdown\"> language not already supported by</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// [GlobalMaterialLocalizations].</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Delegates that produce [WidgetsLocalizations] and [MaterialLocalizations]</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// </span>are<span class=\"markdown\"> included automatically. Apps can provide their own versions of these</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// localizations by creating implementations of</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// [LocalizationsDelegate<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">WidgetsLocalizations</span>&gt;</span></span>] or</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// [LocalizationsDelegate<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">MaterialLocalizations</span>&gt;</span></span>] whose load methods return</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// custom versions of [WidgetsLocalizations] or [MaterialLocalizations].</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// For example: to add support to [MaterialLocalizations] for </span>a<span class=\"markdown\"></span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// locale it </span>doesn't<span class=\"markdown\"> already support, say <span class=\"code\">`const Locale('foo', 'BR')`</span>,</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// one could </span>just<span class=\"markdown\"> extend [DefaultMaterialLocalizations]:</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// class FooLocalizations extends DefaultMaterialLocalizations &#123;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   FooLocalizations(Locale locale) : super(locale);</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   @override</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   String get okButtonLabel &#123;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     if (locale == const Locale('foo', 'BR'))</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///       return 'foo';</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     return super.okButtonLabel;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   &#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// A <span class=\"code\">`FooLocalizationsDelegate`</span> is essentially </span>just<span class=\"markdown\"> </span>a<span class=\"markdown\"> method that constructs</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// </span>a<span class=\"markdown\"> <span class=\"code\">`FooLocalizations`</span> object. We return </span>a<span class=\"markdown\"> [SynchronousFuture] here because</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// no asynchronous work takes place upon \"loading\" </span>the<span class=\"markdown\"> localizations object.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// class FooLocalizationsDelegate extends LocalizationsDelegate<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">MaterialLocalizations</span>&gt;</span></span> &#123;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   const FooLocalizationsDelegate();</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   @override</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   Future<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">FooLocalizations</span>&gt;</span></span> load(Locale locale) &#123;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     return SynchronousFuture(FooLocalizations(locale));</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   &#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   @override</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   bool shouldReload(FooLocalizationsDelegate old) =&gt; false;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Constructing </span>a<span class=\"markdown\"> [MaterialApp] with </span>a<span class=\"markdown\"> <span class=\"code\">`FooLocalizationsDelegate`</span> overrides</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// </span>the<span class=\"markdown\"> automatically included delegate for [MaterialLocalizations] because</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// only </span>the<span class=\"markdown\"> first delegate of each [LocalizationsDelegate.type] is used and</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// </span>the<span class=\"markdown\"> automatically included delegates </span>are<span class=\"markdown\"> added to </span>the<span class=\"markdown\"> end of </span>the<span class=\"markdown\"> app's</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// [localizationsDelegates] list.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// MaterialApp(</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   localizationsDelegates: [</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///     const FooLocalizationsDelegate(),</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   ],</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///   // ...</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// )</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// See also:</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * [supportedLocales], which must be specified along with</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    [localizationsDelegates].</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * [GlobalMaterialLocalizations], </span>a<span class=\"markdown\"> [localizationsDelegates] value</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    which provides material localizations for many languages.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * The Flutter Internationalization Tutorial,</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">https:</span>//<span class=\"attr\">flutter.dev</span>/<span class=\"attr\">tutorials</span>/<span class=\"attr\">internationalization</span>/&gt;</span></span>.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">Iterable</span>&lt;LocalizationsDelegate&lt;<span class=\"keyword\">dynamic</span>&gt;&gt; localizationsDelegates;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.localeListResolutionCallback&#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// This callback is passed along to </span>the<span class=\"markdown\"> [WidgetsApp] built by this widget.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> LocaleListResolutionCallback localeListResolutionCallback;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.localeResolutionCallback&#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// This callback is passed along to </span>the<span class=\"markdown\"> [WidgetsApp] built by this widget.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> LocaleResolutionCallback localeResolutionCallback;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.supportedLocales&#125;</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// It is passed along unmodified to </span>the<span class=\"markdown\"> [WidgetsApp] built by this widget.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// See also:</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * [localizationsDelegates], which must be specified for localized</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    applications.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * [GlobalMaterialLocalizations], </span>a<span class=\"markdown\"> [localizationsDelegates] value</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    which provides material localizations for many languages.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * The Flutter Internationalization Tutorial,</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">https:</span>//<span class=\"attr\">flutter.dev</span>/<span class=\"attr\">tutorials</span>/<span class=\"attr\">internationalization</span>/&gt;</span></span>.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">Iterable</span>&lt;Locale&gt; supportedLocales;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Turns on </span>a<span class=\"markdown\"> performance overlay.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// See also:</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">https:</span>//<span class=\"attr\">flutter.dev</span>/<span class=\"attr\">debugging</span>/#<span class=\"attr\">performanceoverlay</span>&gt;</span></span></span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">bool</span> showPerformanceOverlay;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Turns on checkerboarding of raster cache images.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">bool</span> checkerboardRasterCacheImages;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Turns on checkerboarding of layers rendered to offscreen bitmaps.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">bool</span> checkerboardOffscreenLayers;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Turns on </span>an<span class=\"markdown\"> overlay that shows </span>the<span class=\"markdown\"> accessibility information</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// reported by </span>the<span class=\"markdown\"> framework.</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">bool</span> showSemanticsDebugger;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// &#123;@macro flutter.widgets.widgetsApp.debugShowCheckedModeBanner&#125;</span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">bool</span> debugShowCheckedModeBanner;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Turns on </span>a<span class=\"markdown\"> [GridPaper] overlay that paints </span>a<span class=\"markdown\"> baseline grid</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Material apps.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// Only available in checked mode.</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">/// See also:</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///</span></span></span><br><span class=\"line\">  <span class=\"comment\"><span class=\"markdown\">///  * <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">https:</span>//<span class=\"attr\">material.io</span>/<span class=\"attr\">design</span>/<span class=\"attr\">layout</span>/<span class=\"attr\">spacing-methods.html</span>&gt;</span></span></span></span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">bool</span> debugShowMaterialGrid;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  _MaterialAppState createState() =&gt; _MaterialAppState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">_MaterialScrollBehavior</span> <span class=\"keyword\">extends</span> <span class=\"title\">ScrollBehavior</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  TargetPlatform getPlatform(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Theme.of(context).platform;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget buildViewportChrome(BuildContext context, Widget child, AxisDirection axisDirection) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// When modifying this function, consider modifying the implementation in</span></span><br><span class=\"line\">    <span class=\"comment\">// the base class as well.</span></span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (getPlatform(context)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> TargetPlatform.iOS:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> child;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> TargetPlatform.android:</span><br><span class=\"line\">      <span class=\"keyword\">case</span> TargetPlatform.fuchsia:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> GlowingOverscrollIndicator(</span><br><span class=\"line\">          child: child,</span><br><span class=\"line\">          axisDirection: axisDirection,</span><br><span class=\"line\">          color: Theme.of(context).accentColor,</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">_MaterialAppState</span> <span class=\"keyword\">extends</span> <span class=\"title\">State</span>&lt;<span class=\"title\">MaterialApp</span>&gt; </span>&#123;</span><br><span class=\"line\">  HeroController _heroController;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> initState() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.initState();</span><br><span class=\"line\">    _heroController = HeroController(createRectTween: _createRectTween);</span><br><span class=\"line\">    _updateNavigator();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> didUpdateWidget(MaterialApp oldWidget) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.didUpdateWidget(oldWidget);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (widget.navigatorKey != oldWidget.navigatorKey) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// If the Navigator changes, we have to create a new observer, because the</span></span><br><span class=\"line\">      <span class=\"comment\">// old Navigator won't be disposed (and thus won't unregister with its</span></span><br><span class=\"line\">      <span class=\"comment\">// observers) until after the new one has been created (because the</span></span><br><span class=\"line\">      <span class=\"comment\">// Navigator has a GlobalKey).</span></span><br><span class=\"line\">      _heroController = HeroController(createRectTween: _createRectTween);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    _updateNavigator();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">List</span>&lt;NavigatorObserver&gt; _navigatorObservers;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">void</span> _updateNavigator() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (widget.home != <span class=\"keyword\">null</span> ||</span><br><span class=\"line\">        widget.routes.isNotEmpty ||</span><br><span class=\"line\">        widget.onGenerateRoute != <span class=\"keyword\">null</span> ||</span><br><span class=\"line\">        widget.onUnknownRoute != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">      _navigatorObservers = <span class=\"built_in\">List</span>&lt;NavigatorObserver&gt;.from(widget.navigatorObservers)</span><br><span class=\"line\">        ..add(_heroController);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      _navigatorObservers = <span class=\"keyword\">const</span> &lt;NavigatorObserver&gt;[];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  RectTween _createRectTween(Rect begin, Rect end) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> MaterialRectArcTween(begin: begin, end: end);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Combine the Localizations for Material with the ones contributed</span></span><br><span class=\"line\">  <span class=\"comment\">// by the localizationsDelegates parameter, if any. Only the first delegate</span></span><br><span class=\"line\">  <span class=\"comment\">// of a particular LocalizationsDelegate.type is loaded so the</span></span><br><span class=\"line\">  <span class=\"comment\">// localizationsDelegate parameter can be used to override</span></span><br><span class=\"line\">  <span class=\"comment\">// _MaterialLocalizationsDelegate.</span></span><br><span class=\"line\">  <span class=\"built_in\">Iterable</span>&lt;LocalizationsDelegate&lt;<span class=\"keyword\">dynamic</span>&gt;&gt; <span class=\"keyword\">get</span> _localizationsDelegates <span class=\"keyword\">sync</span>* &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (widget.localizationsDelegates != <span class=\"keyword\">null</span>)</span><br><span class=\"line\">      <span class=\"keyword\">yield</span>* widget.localizationsDelegates;</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> DefaultMaterialLocalizations.delegate;</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> DefaultCupertinoLocalizations.delegate;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    Widget result = WidgetsApp(</span><br><span class=\"line\">      key: GlobalObjectKey(<span class=\"keyword\">this</span>),</span><br><span class=\"line\">      navigatorKey: widget.navigatorKey,</span><br><span class=\"line\">      navigatorObservers: _navigatorObservers,</span><br><span class=\"line\">        pageRouteBuilder: &lt;T&gt;(RouteSettings settings, WidgetBuilder builder) =&gt;</span><br><span class=\"line\">            MaterialPageRoute&lt;T&gt;(settings: settings, builder: builder),</span><br><span class=\"line\">      home: widget.home,</span><br><span class=\"line\">      routes: widget.routes,</span><br><span class=\"line\">      initialRoute: widget.initialRoute,</span><br><span class=\"line\">      onGenerateRoute: widget.onGenerateRoute,</span><br><span class=\"line\">      onUnknownRoute: widget.onUnknownRoute,</span><br><span class=\"line\">      builder: (BuildContext context, Widget child) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Use a light theme, dark theme, or fallback theme.</span></span><br><span class=\"line\">        ThemeData theme;</span><br><span class=\"line\">        <span class=\"keyword\">final</span> ui.Brightness platformBrightness = MediaQuery.platformBrightnessOf(context);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (platformBrightness == ui.Brightness.dark &amp;&amp; widget.darkTheme != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">          theme = widget.darkTheme;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (widget.theme != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">          theme = widget.theme;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          theme = ThemeData.fallback();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> AnimatedTheme(</span><br><span class=\"line\">          data: theme,</span><br><span class=\"line\">          isMaterialAppTheme: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">          child: widget.builder != <span class=\"keyword\">null</span></span><br><span class=\"line\">              ? Builder(</span><br><span class=\"line\">                  builder: (BuildContext context) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// Why are we surrounding a builder with a builder?</span></span><br><span class=\"line\">                    <span class=\"comment\">//</span></span><br><span class=\"line\">                    <span class=\"comment\">// The widget.builder may contain code that invokes</span></span><br><span class=\"line\">                    <span class=\"comment\">// Theme.of(), which should return the theme we selected</span></span><br><span class=\"line\">                    <span class=\"comment\">// above in AnimatedTheme. However, if we invoke</span></span><br><span class=\"line\">                    <span class=\"comment\">// widget.builder() directly as the child of AnimatedTheme</span></span><br><span class=\"line\">                    <span class=\"comment\">// then there is no Context separating them, and the</span></span><br><span class=\"line\">                    <span class=\"comment\">// widget.builder() will not find the theme. Therefore, we</span></span><br><span class=\"line\">                    <span class=\"comment\">// surround widget.builder with yet another builder so that</span></span><br><span class=\"line\">                    <span class=\"comment\">// a context separates them and Theme.of() correctly</span></span><br><span class=\"line\">                    <span class=\"comment\">// resolves to the theme we passed to AnimatedTheme.</span></span><br><span class=\"line\">                    <span class=\"keyword\">return</span> widget.builder(context, child);</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                )</span><br><span class=\"line\">              : child,</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      title: widget.title,</span><br><span class=\"line\">      onGenerateTitle: widget.onGenerateTitle,</span><br><span class=\"line\">      textStyle: _errorTextStyle,</span><br><span class=\"line\">      <span class=\"comment\">// The color property is always pulled from the light theme, even if dark</span></span><br><span class=\"line\">      <span class=\"comment\">// mode is activated. This was done to simplify the technical details</span></span><br><span class=\"line\">      <span class=\"comment\">// of switching themes and it was deemed acceptable because this color</span></span><br><span class=\"line\">      <span class=\"comment\">// property is only used on old Android OSes to color the app bar in</span></span><br><span class=\"line\">      <span class=\"comment\">// Android's switcher UI.</span></span><br><span class=\"line\">      <span class=\"comment\">//</span></span><br><span class=\"line\">      <span class=\"comment\">// blue is the primary color of the default theme</span></span><br><span class=\"line\">      color: widget.color ?? widget.theme?.primaryColor ?? Colors.blue,</span><br><span class=\"line\">      locale: widget.locale,</span><br><span class=\"line\">      localizationsDelegates: _localizationsDelegates,</span><br><span class=\"line\">      localeResolutionCallback: widget.localeResolutionCallback,</span><br><span class=\"line\">      localeListResolutionCallback: widget.localeListResolutionCallback,</span><br><span class=\"line\">      supportedLocales: widget.supportedLocales,</span><br><span class=\"line\">      showPerformanceOverlay: widget.showPerformanceOverlay,</span><br><span class=\"line\">      checkerboardRasterCacheImages: widget.checkerboardRasterCacheImages,</span><br><span class=\"line\">      checkerboardOffscreenLayers: widget.checkerboardOffscreenLayers,</span><br><span class=\"line\">      showSemanticsDebugger: widget.showSemanticsDebugger,</span><br><span class=\"line\">      debugShowCheckedModeBanner: widget.debugShowCheckedModeBanner,</span><br><span class=\"line\">      inspectorSelectButtonBuilder: (BuildContext context, VoidCallback onPressed) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> FloatingActionButton(</span><br><span class=\"line\">          child: <span class=\"keyword\">const</span> Icon(Icons.search),</span><br><span class=\"line\">          onPressed: onPressed,</span><br><span class=\"line\">          mini: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">assert</span>(() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (widget.debugShowMaterialGrid) &#123;</span><br><span class=\"line\">        result = GridPaper(</span><br><span class=\"line\">          color: <span class=\"keyword\">const</span> Color(<span class=\"number\">0xE0F9BBE0</span>),</span><br><span class=\"line\">          interval: <span class=\"number\">8.0</span>,</span><br><span class=\"line\">          divisions: <span class=\"number\">2</span>,</span><br><span class=\"line\">          subdivisions: <span class=\"number\">1</span>,</span><br><span class=\"line\">          child: result,</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ScrollConfiguration(</span><br><span class=\"line\">      behavior: _MaterialScrollBehavior(),</span><br><span class=\"line\">      child: result,</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<h4 id=\"个人见解\"><a class=\"markdownIt-Anchor\" href=\"#个人见解\"></a> 个人见解</h4>\n</li>\n</ul>\n<blockquote>\n<p>根据演示代码可以看到，其实一个Widget 准确的说很多Widget组合起来能够做的事情真的挺多。从源码可以看出，其实MaterialApp 就是一个Widget，一个标准的app开发脚手架</p>\n</blockquote>\n"},{"title":"BeautifulSoup requests 爬虫初体验","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3241.jpg","date":"2019-05-22T07:50:39.000Z","subtitle":"爬虫BeautifulSoup使用","_content":"\n\n### BeautifulSoup requests 爬虫初体验\n\n------\n\n说爬虫不得不提python\n\n常用的Python爬虫库(摘自知乎[hunt zhan](https://www.zhihu.com/people/huntzhan))\n\n> * Beautiful Soup。名气大，整合了一些常用爬虫需求。缺点：不能加载JS。\n> * Scrapy。看起来很强大的爬虫框架，可以满足简单的页面爬取（比如可以明确获知url pattern的情况）。用这个框架可以轻松爬下来如亚马逊商品信息之类的数据。但是对于稍微复杂一点的页面，如weibo的页面信息，这个框架就满足不了需求了。\n> * mechanize。优点：可以加载JS。缺点：文档严重缺失。不过通过官方的example以及人肉尝试的方法，还是勉强能用的。\n> * selenium。这是一个调用浏览器的driver，通过这个库你可以直接调用浏览器完成某些操作，比如输入验证码。\n> * cola。一个分布式爬虫框架。项目整体设计有点糟，模块间耦合度较高，不过值得借鉴。\n\n#### Beautiful Soup 网页解析还是非常简单粗暴的(配合requests)基本的爬取没有任何问题\n\n在这个数据称王的时代，没有数据对于内容性产品而言无疑是半条腿走路。(虽说这样做有些不要脸，但是没有办法，一些公开无版权的内容信息诱惑力太大，如果人工摘取工作量太复杂)\n\n### 废话少说，劈柴\n\n##### 1.安装库\n\n- beautifulsoup4\n- [官方中文文档](https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/)\n\n```\npip install beautifulsoup4\n```\n\n- requests\n- [官方中文文档](https://2.python-requests.org//zh_CN/latest/user/quickstart.html)\n\n```\npip install requests\n```\n\n- 安装解析器\n\n```\npip install lxml\n```\n\n\n\n| 解析器           | 使用方法                                                     | 优势                                                  | 劣势                                            |\n| :--------------- | ------------------------------------------------------------ | ----------------------------------------------------- | ----------------------------------------------- |\n| Python标准库     | `BeautifulSoup(markup, \"html.parser\")`                       | Python的内置标准库执行速度适中文档容错能力强          | Python 2.7.3 or 3.2.2)前 的版本中文档容错能力差 |\n| lxml HTML 解析器 | `BeautifulSoup(markup, \"lxml\")`                              | 速度快文档容错能力强                                  | 需要安装C语言库                                 |\n| lxml XML 解析器  | `BeautifulSoup(markup, [\"lxml-xml\"])``BeautifulSoup(markup, \"xml\")` | 速度快唯一支持XML的解析器                             | 需要安装C语言库                                 |\n| html5lib         | `BeautifulSoup(markup, \"html5lib\")`                          | 最好的容错性以浏览器的方式解析文档生成HTML5格式的文档 | 速度慢不依赖外部扩展                            |\n\n\n\n\n##### 2.具体步骤\n\n```flow\nst=>start: 使用requests请求到网页html\nop1=>operation: 使用beautifulsoup4加载这个html\nop2=>operation: 解析搜索网页可用元素\nop3=>operation: 取出元素的内容\nop4=>operation: 处理数据\ne=>end: 存库\n\nst->op1->op2->op3->op4->e\n```\n\n##### 3.常用操作\n\n```python\n# 加载网页对象，使用lxml解析库\nsoup = BeautifulSoup(html, 'lxml')\n\n# 获取class为more的标签\nbp = soup.find_all(attrs={\"class\": 'more'})\n\n# 获取<main></main>标签\nbp = soup.main\n\n# 查找所有p标签\np = soup.find_all('p')\n\n# 使用正则匹配(含有data-number属性并且值为数字的)\nsoup.find_all(attrs={\"data-number\": re.compile(\"^[0-9]*$\")})\n\n# 获取main标签下的所有子标签\nas = soup.main.descendants\n\n# 遍历子标签\nfor child in as:\n    # 判断子标签是否为tag(因为只有tag才能继续查找,NavigableString只是一个字符串)\n    if isinstance(child, Tag):\n        # 如果标签是span标签并且含有id属性且id属性的值为counter且内容不为空\n        if child.name == 'span' and 'id' in child.attrs and child['id'] == 'counter' and child.string:\n            # 取出该标签下一个兄弟标签的第一个子标签的内容\n            # .contents 和 .children\n\t\t\t# tag的 .contents 属性可以将tag的子节点以列表的方式输出:\n        \tchild.next_sibling.contents[0].string\n            \n# 获取所有子标签的内容并过滤空内容\nfor string in soup.main.stripped_strings:\n\tprint(string)\n\n# 父标签\nchild.parent\n# .next_sibling 和 .previous_sibling 分别是下一个兄弟标签和上一个兄弟标签\n\n# 如果要去属性值可以直接使用\nchild['src']\n\n```\n\n\n\n熟悉以上操作就可以很方便的爬取html纯数据网页，你值得拥有！\n\n\n\n","source":"_posts/BeautifulSoup-requests-爬虫初体验.md","raw":"---\ntitle: BeautifulSoup requests 爬虫初体验\ncover: http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3241.jpg\ndate: 2019-05-22 15:50:39\nsubtitle: 爬虫BeautifulSoup使用\ncategories:\n- 爬虫\ntags:\n- Python\n- BeautifulSoup\n---\n\n\n### BeautifulSoup requests 爬虫初体验\n\n------\n\n说爬虫不得不提python\n\n常用的Python爬虫库(摘自知乎[hunt zhan](https://www.zhihu.com/people/huntzhan))\n\n> * Beautiful Soup。名气大，整合了一些常用爬虫需求。缺点：不能加载JS。\n> * Scrapy。看起来很强大的爬虫框架，可以满足简单的页面爬取（比如可以明确获知url pattern的情况）。用这个框架可以轻松爬下来如亚马逊商品信息之类的数据。但是对于稍微复杂一点的页面，如weibo的页面信息，这个框架就满足不了需求了。\n> * mechanize。优点：可以加载JS。缺点：文档严重缺失。不过通过官方的example以及人肉尝试的方法，还是勉强能用的。\n> * selenium。这是一个调用浏览器的driver，通过这个库你可以直接调用浏览器完成某些操作，比如输入验证码。\n> * cola。一个分布式爬虫框架。项目整体设计有点糟，模块间耦合度较高，不过值得借鉴。\n\n#### Beautiful Soup 网页解析还是非常简单粗暴的(配合requests)基本的爬取没有任何问题\n\n在这个数据称王的时代，没有数据对于内容性产品而言无疑是半条腿走路。(虽说这样做有些不要脸，但是没有办法，一些公开无版权的内容信息诱惑力太大，如果人工摘取工作量太复杂)\n\n### 废话少说，劈柴\n\n##### 1.安装库\n\n- beautifulsoup4\n- [官方中文文档](https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/)\n\n```\npip install beautifulsoup4\n```\n\n- requests\n- [官方中文文档](https://2.python-requests.org//zh_CN/latest/user/quickstart.html)\n\n```\npip install requests\n```\n\n- 安装解析器\n\n```\npip install lxml\n```\n\n\n\n| 解析器           | 使用方法                                                     | 优势                                                  | 劣势                                            |\n| :--------------- | ------------------------------------------------------------ | ----------------------------------------------------- | ----------------------------------------------- |\n| Python标准库     | `BeautifulSoup(markup, \"html.parser\")`                       | Python的内置标准库执行速度适中文档容错能力强          | Python 2.7.3 or 3.2.2)前 的版本中文档容错能力差 |\n| lxml HTML 解析器 | `BeautifulSoup(markup, \"lxml\")`                              | 速度快文档容错能力强                                  | 需要安装C语言库                                 |\n| lxml XML 解析器  | `BeautifulSoup(markup, [\"lxml-xml\"])``BeautifulSoup(markup, \"xml\")` | 速度快唯一支持XML的解析器                             | 需要安装C语言库                                 |\n| html5lib         | `BeautifulSoup(markup, \"html5lib\")`                          | 最好的容错性以浏览器的方式解析文档生成HTML5格式的文档 | 速度慢不依赖外部扩展                            |\n\n\n\n\n##### 2.具体步骤\n\n```flow\nst=>start: 使用requests请求到网页html\nop1=>operation: 使用beautifulsoup4加载这个html\nop2=>operation: 解析搜索网页可用元素\nop3=>operation: 取出元素的内容\nop4=>operation: 处理数据\ne=>end: 存库\n\nst->op1->op2->op3->op4->e\n```\n\n##### 3.常用操作\n\n```python\n# 加载网页对象，使用lxml解析库\nsoup = BeautifulSoup(html, 'lxml')\n\n# 获取class为more的标签\nbp = soup.find_all(attrs={\"class\": 'more'})\n\n# 获取<main></main>标签\nbp = soup.main\n\n# 查找所有p标签\np = soup.find_all('p')\n\n# 使用正则匹配(含有data-number属性并且值为数字的)\nsoup.find_all(attrs={\"data-number\": re.compile(\"^[0-9]*$\")})\n\n# 获取main标签下的所有子标签\nas = soup.main.descendants\n\n# 遍历子标签\nfor child in as:\n    # 判断子标签是否为tag(因为只有tag才能继续查找,NavigableString只是一个字符串)\n    if isinstance(child, Tag):\n        # 如果标签是span标签并且含有id属性且id属性的值为counter且内容不为空\n        if child.name == 'span' and 'id' in child.attrs and child['id'] == 'counter' and child.string:\n            # 取出该标签下一个兄弟标签的第一个子标签的内容\n            # .contents 和 .children\n\t\t\t# tag的 .contents 属性可以将tag的子节点以列表的方式输出:\n        \tchild.next_sibling.contents[0].string\n            \n# 获取所有子标签的内容并过滤空内容\nfor string in soup.main.stripped_strings:\n\tprint(string)\n\n# 父标签\nchild.parent\n# .next_sibling 和 .previous_sibling 分别是下一个兄弟标签和上一个兄弟标签\n\n# 如果要去属性值可以直接使用\nchild['src']\n\n```\n\n\n\n熟悉以上操作就可以很方便的爬取html纯数据网页，你值得拥有！\n\n\n\n","slug":"BeautifulSoup-requests-爬虫初体验","published":1,"updated":"2019-05-23T08:40:07.727Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjw65m7fy00043ivovmvinf9h","content":"<h3 id=\"beautifulsoup-requests-爬虫初体验\"><a class=\"markdownIt-Anchor\" href=\"#beautifulsoup-requests-爬虫初体验\"></a> BeautifulSoup requests 爬虫初体验</h3>\n<hr>\n<p>说爬虫不得不提python</p>\n<p>常用的Python爬虫库(摘自知乎<a href=\"https://www.zhihu.com/people/huntzhan\" target=\"_blank\" rel=\"noopener\">hunt zhan</a>)</p>\n<blockquote>\n<ul>\n<li>Beautiful Soup。名气大，整合了一些常用爬虫需求。缺点：不能加载JS。</li>\n<li>Scrapy。看起来很强大的爬虫框架，可以满足简单的页面爬取（比如可以明确获知url pattern的情况）。用这个框架可以轻松爬下来如亚马逊商品信息之类的数据。但是对于稍微复杂一点的页面，如weibo的页面信息，这个框架就满足不了需求了。</li>\n<li>mechanize。优点：可以加载JS。缺点：文档严重缺失。不过通过官方的example以及人肉尝试的方法，还是勉强能用的。</li>\n<li>selenium。这是一个调用浏览器的driver，通过这个库你可以直接调用浏览器完成某些操作，比如输入验证码。</li>\n<li>cola。一个分布式爬虫框架。项目整体设计有点糟，模块间耦合度较高，不过值得借鉴。</li>\n</ul>\n</blockquote>\n<h4 id=\"beautiful-soup-网页解析还是非常简单粗暴的配合requests基本的爬取没有任何问题\"><a class=\"markdownIt-Anchor\" href=\"#beautiful-soup-网页解析还是非常简单粗暴的配合requests基本的爬取没有任何问题\"></a> Beautiful Soup 网页解析还是非常简单粗暴的(配合requests)基本的爬取没有任何问题</h4>\n<p>在这个数据称王的时代，没有数据对于内容性产品而言无疑是半条腿走路。(虽说这样做有些不要脸，但是没有办法，一些公开无版权的内容信息诱惑力太大，如果人工摘取工作量太复杂)</p>\n<h3 id=\"废话少说劈柴\"><a class=\"markdownIt-Anchor\" href=\"#废话少说劈柴\"></a> 废话少说，劈柴</h3>\n<h5 id=\"1安装库\"><a class=\"markdownIt-Anchor\" href=\"#1安装库\"></a> 1.安装库</h5>\n<ul>\n<li>beautifulsoup4</li>\n<li><a href=\"https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/\" target=\"_blank\" rel=\"noopener\">官方中文文档</a></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install beautifulsoup4</span><br></pre></td></tr></table></figure>\n<ul>\n<li>requests</li>\n<li><a href=\"https://2.python-requests.org//zh_CN/latest/user/quickstart.html\" target=\"_blank\" rel=\"noopener\">官方中文文档</a></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install requests</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装解析器</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install lxml</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">解析器</th>\n<th>使用方法</th>\n<th>优势</th>\n<th>劣势</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Python标准库</td>\n<td><code>BeautifulSoup(markup, &quot;html.parser&quot;)</code></td>\n<td>Python的内置标准库执行速度适中文档容错能力强</td>\n<td>Python 2.7.3 or 3.2.2)前 的版本中文档容错能力差</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">lxml HTML 解析器</td>\n<td><code>BeautifulSoup(markup, &quot;lxml&quot;)</code></td>\n<td>速度快文档容错能力强</td>\n<td>需要安装C语言库</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">lxml XML 解析器</td>\n<td><code>BeautifulSoup(markup, [&quot;lxml-xml&quot;])``BeautifulSoup(markup, &quot;xml&quot;)</code></td>\n<td>速度快唯一支持XML的解析器</td>\n<td>需要安装C语言库</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">html5lib</td>\n<td><code>BeautifulSoup(markup, &quot;html5lib&quot;)</code></td>\n<td>最好的容错性以浏览器的方式解析文档生成HTML5格式的文档</td>\n<td>速度慢不依赖外部扩展</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"2具体步骤\"><a class=\"markdownIt-Anchor\" href=\"#2具体步骤\"></a> 2.具体步骤</h5>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st=&gt;start: 使用requests请求到网页html</span><br><span class=\"line\">op1=&gt;operation: 使用beautifulsoup4加载这个html</span><br><span class=\"line\">op2=&gt;operation: 解析搜索网页可用元素</span><br><span class=\"line\">op3=&gt;operation: 取出元素的内容</span><br><span class=\"line\">op4=&gt;operation: 处理数据</span><br><span class=\"line\">e=&gt;end: 存库</span><br><span class=\"line\"></span><br><span class=\"line\">st-&gt;op1-&gt;op2-&gt;op3-&gt;op4-&gt;e</span><br></pre></td></tr></table></figure>\n<h5 id=\"3常用操作\"><a class=\"markdownIt-Anchor\" href=\"#3常用操作\"></a> 3.常用操作</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 加载网页对象，使用lxml解析库</span></span><br><span class=\"line\">soup = BeautifulSoup(html, <span class=\"string\">'lxml'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取class为more的标签</span></span><br><span class=\"line\">bp = soup.find_all(attrs=&#123;<span class=\"string\">\"class\"</span>: <span class=\"string\">'more'</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取&lt;main&gt;&lt;/main&gt;标签</span></span><br><span class=\"line\">bp = soup.main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查找所有p标签</span></span><br><span class=\"line\">p = soup.find_all(<span class=\"string\">'p'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用正则匹配(含有data-number属性并且值为数字的)</span></span><br><span class=\"line\">soup.find_all(attrs=&#123;<span class=\"string\">\"data-number\"</span>: re.compile(<span class=\"string\">\"^[0-9]*$\"</span>)&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取main标签下的所有子标签</span></span><br><span class=\"line\"><span class=\"keyword\">as</span> = soup.main.descendants</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历子标签</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> child <span class=\"keyword\">in</span> <span class=\"keyword\">as</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 判断子标签是否为tag(因为只有tag才能继续查找,NavigableString只是一个字符串)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> isinstance(child, Tag):</span><br><span class=\"line\">        <span class=\"comment\"># 如果标签是span标签并且含有id属性且id属性的值为counter且内容不为空</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> child.name == <span class=\"string\">'span'</span> <span class=\"keyword\">and</span> <span class=\"string\">'id'</span> <span class=\"keyword\">in</span> child.attrs <span class=\"keyword\">and</span> child[<span class=\"string\">'id'</span>] == <span class=\"string\">'counter'</span> <span class=\"keyword\">and</span> child.string:</span><br><span class=\"line\">            <span class=\"comment\"># 取出该标签下一个兄弟标签的第一个子标签的内容</span></span><br><span class=\"line\">            <span class=\"comment\"># .contents 和 .children</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\"># tag的 .contents 属性可以将tag的子节点以列表的方式输出:</span></span><br><span class=\"line\">        \tchild.next_sibling.contents[<span class=\"number\">0</span>].string</span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\"># 获取所有子标签的内容并过滤空内容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> string <span class=\"keyword\">in</span> soup.main.stripped_strings:</span><br><span class=\"line\">\tprint(string)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 父标签</span></span><br><span class=\"line\">child.parent</span><br><span class=\"line\"><span class=\"comment\"># .next_sibling 和 .previous_sibling 分别是下一个兄弟标签和上一个兄弟标签</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果要去属性值可以直接使用</span></span><br><span class=\"line\">child[<span class=\"string\">'src'</span>]</span><br></pre></td></tr></table></figure>\n<p>熟悉以上操作就可以很方便的爬取html纯数据网页，你值得拥有！</p>\n","site":{"data":{"links":[{"name":"Yaooort","describe":"大傻子","link":"http://www.yaooort.com","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4172.jpg"},{"name":"GitHub","describe":"直男网","link":"https://github.com/yaooort","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3829.jpg"}]}},"excerpt":"","more":"<h3 id=\"beautifulsoup-requests-爬虫初体验\"><a class=\"markdownIt-Anchor\" href=\"#beautifulsoup-requests-爬虫初体验\"></a> BeautifulSoup requests 爬虫初体验</h3>\n<hr>\n<p>说爬虫不得不提python</p>\n<p>常用的Python爬虫库(摘自知乎<a href=\"https://www.zhihu.com/people/huntzhan\" target=\"_blank\" rel=\"noopener\">hunt zhan</a>)</p>\n<blockquote>\n<ul>\n<li>Beautiful Soup。名气大，整合了一些常用爬虫需求。缺点：不能加载JS。</li>\n<li>Scrapy。看起来很强大的爬虫框架，可以满足简单的页面爬取（比如可以明确获知url pattern的情况）。用这个框架可以轻松爬下来如亚马逊商品信息之类的数据。但是对于稍微复杂一点的页面，如weibo的页面信息，这个框架就满足不了需求了。</li>\n<li>mechanize。优点：可以加载JS。缺点：文档严重缺失。不过通过官方的example以及人肉尝试的方法，还是勉强能用的。</li>\n<li>selenium。这是一个调用浏览器的driver，通过这个库你可以直接调用浏览器完成某些操作，比如输入验证码。</li>\n<li>cola。一个分布式爬虫框架。项目整体设计有点糟，模块间耦合度较高，不过值得借鉴。</li>\n</ul>\n</blockquote>\n<h4 id=\"beautiful-soup-网页解析还是非常简单粗暴的配合requests基本的爬取没有任何问题\"><a class=\"markdownIt-Anchor\" href=\"#beautiful-soup-网页解析还是非常简单粗暴的配合requests基本的爬取没有任何问题\"></a> Beautiful Soup 网页解析还是非常简单粗暴的(配合requests)基本的爬取没有任何问题</h4>\n<p>在这个数据称王的时代，没有数据对于内容性产品而言无疑是半条腿走路。(虽说这样做有些不要脸，但是没有办法，一些公开无版权的内容信息诱惑力太大，如果人工摘取工作量太复杂)</p>\n<h3 id=\"废话少说劈柴\"><a class=\"markdownIt-Anchor\" href=\"#废话少说劈柴\"></a> 废话少说，劈柴</h3>\n<h5 id=\"1安装库\"><a class=\"markdownIt-Anchor\" href=\"#1安装库\"></a> 1.安装库</h5>\n<ul>\n<li>beautifulsoup4</li>\n<li><a href=\"https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/\" target=\"_blank\" rel=\"noopener\">官方中文文档</a></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install beautifulsoup4</span><br></pre></td></tr></table></figure>\n<ul>\n<li>requests</li>\n<li><a href=\"https://2.python-requests.org//zh_CN/latest/user/quickstart.html\" target=\"_blank\" rel=\"noopener\">官方中文文档</a></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install requests</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装解析器</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install lxml</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">解析器</th>\n<th>使用方法</th>\n<th>优势</th>\n<th>劣势</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Python标准库</td>\n<td><code>BeautifulSoup(markup, &quot;html.parser&quot;)</code></td>\n<td>Python的内置标准库执行速度适中文档容错能力强</td>\n<td>Python 2.7.3 or 3.2.2)前 的版本中文档容错能力差</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">lxml HTML 解析器</td>\n<td><code>BeautifulSoup(markup, &quot;lxml&quot;)</code></td>\n<td>速度快文档容错能力强</td>\n<td>需要安装C语言库</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">lxml XML 解析器</td>\n<td><code>BeautifulSoup(markup, [&quot;lxml-xml&quot;])``BeautifulSoup(markup, &quot;xml&quot;)</code></td>\n<td>速度快唯一支持XML的解析器</td>\n<td>需要安装C语言库</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">html5lib</td>\n<td><code>BeautifulSoup(markup, &quot;html5lib&quot;)</code></td>\n<td>最好的容错性以浏览器的方式解析文档生成HTML5格式的文档</td>\n<td>速度慢不依赖外部扩展</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"2具体步骤\"><a class=\"markdownIt-Anchor\" href=\"#2具体步骤\"></a> 2.具体步骤</h5>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st=&gt;start: 使用requests请求到网页html</span><br><span class=\"line\">op1=&gt;operation: 使用beautifulsoup4加载这个html</span><br><span class=\"line\">op2=&gt;operation: 解析搜索网页可用元素</span><br><span class=\"line\">op3=&gt;operation: 取出元素的内容</span><br><span class=\"line\">op4=&gt;operation: 处理数据</span><br><span class=\"line\">e=&gt;end: 存库</span><br><span class=\"line\"></span><br><span class=\"line\">st-&gt;op1-&gt;op2-&gt;op3-&gt;op4-&gt;e</span><br></pre></td></tr></table></figure>\n<h5 id=\"3常用操作\"><a class=\"markdownIt-Anchor\" href=\"#3常用操作\"></a> 3.常用操作</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 加载网页对象，使用lxml解析库</span></span><br><span class=\"line\">soup = BeautifulSoup(html, <span class=\"string\">'lxml'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取class为more的标签</span></span><br><span class=\"line\">bp = soup.find_all(attrs=&#123;<span class=\"string\">\"class\"</span>: <span class=\"string\">'more'</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取&lt;main&gt;&lt;/main&gt;标签</span></span><br><span class=\"line\">bp = soup.main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查找所有p标签</span></span><br><span class=\"line\">p = soup.find_all(<span class=\"string\">'p'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用正则匹配(含有data-number属性并且值为数字的)</span></span><br><span class=\"line\">soup.find_all(attrs=&#123;<span class=\"string\">\"data-number\"</span>: re.compile(<span class=\"string\">\"^[0-9]*$\"</span>)&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取main标签下的所有子标签</span></span><br><span class=\"line\"><span class=\"keyword\">as</span> = soup.main.descendants</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历子标签</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> child <span class=\"keyword\">in</span> <span class=\"keyword\">as</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 判断子标签是否为tag(因为只有tag才能继续查找,NavigableString只是一个字符串)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> isinstance(child, Tag):</span><br><span class=\"line\">        <span class=\"comment\"># 如果标签是span标签并且含有id属性且id属性的值为counter且内容不为空</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> child.name == <span class=\"string\">'span'</span> <span class=\"keyword\">and</span> <span class=\"string\">'id'</span> <span class=\"keyword\">in</span> child.attrs <span class=\"keyword\">and</span> child[<span class=\"string\">'id'</span>] == <span class=\"string\">'counter'</span> <span class=\"keyword\">and</span> child.string:</span><br><span class=\"line\">            <span class=\"comment\"># 取出该标签下一个兄弟标签的第一个子标签的内容</span></span><br><span class=\"line\">            <span class=\"comment\"># .contents 和 .children</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\"># tag的 .contents 属性可以将tag的子节点以列表的方式输出:</span></span><br><span class=\"line\">        \tchild.next_sibling.contents[<span class=\"number\">0</span>].string</span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\"># 获取所有子标签的内容并过滤空内容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> string <span class=\"keyword\">in</span> soup.main.stripped_strings:</span><br><span class=\"line\">\tprint(string)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 父标签</span></span><br><span class=\"line\">child.parent</span><br><span class=\"line\"><span class=\"comment\"># .next_sibling 和 .previous_sibling 分别是下一个兄弟标签和上一个兄弟标签</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果要去属性值可以直接使用</span></span><br><span class=\"line\">child[<span class=\"string\">'src'</span>]</span><br></pre></td></tr></table></figure>\n<p>熟悉以上操作就可以很方便的爬取html纯数据网页，你值得拥有！</p>\n"},{"title":"Flutter 笔记之 Container","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4098.jpg","date":"2019-05-25T07:50:39.000Z","subtitle":"Flutter 笔记之 Container","_content":"\n\n* #### 官方解释\n\n> 一个拥有绘制、定位、调整大小的 widget。\n>\n> 可以确定的是这个玩意用的很广泛，它可以为一个View提供相对于父view位置的控制，及边框，边距，缩放，背景等属性\n\n* #### 示例代码\n\n```dart\nbody: Center(\n            // Center控件后面再看\n            child: Container(\n          // 设置内部控件居中\n          alignment: Alignment.center,\n          // 背景色\n          color: Colors.white30,\n          // 只能有一个控件\n          child: Container(\n            // 宽高\n            width: 300,\n            height: 300,\n            // 内部控件偏移 1.0 表示x方向最右边，y轴方向最下边\n            alignment: Alignment(1.0, 1.0),\n            // 设置背景边框，覆盖到内部控件之下\n            decoration: BoxDecoration(\n              color: Colors.red,\n              border:\n                  Border.all(color: Color(0xFFFF0000), width: 0.5), // 边色与边宽度\n              borderRadius: new BorderRadius.circular((60.0)), // 圆角度\n              // borderRadius: BorderRadius.vertical(top: Radius.elliptical(20, 50)),// 也可控件一边圆角大小\n              // // 生成俩层阴影，一层绿，一层黄， 阴影位置由offset决定,阴影模糊层度由blurRadius大小决定（大就更透明更扩散），阴影模糊大小由spreadRadius决定\n              boxShadow: [\n                BoxShadow(\n                    color: Colors.amber,\n                    offset: Offset(5.0, 5.0),\n                    blurRadius: 10.0,\n                    spreadRadius: 2.0),\n                BoxShadow(color: Colors.yellowAccent, offset: Offset(1.0, 1.0)),\n                BoxShadow(color: Colors.greenAccent)\n              ],\n            ),\n            // 覆盖到内部控件之上\n            foregroundDecoration: BoxDecoration(\n              border: new Border.all(\n                  color: Color(0xFFFFFF00), width: 0.5), // 边色与边宽度\n              color: Color(0xFF9E9E9E), // 底色\n              //        shape: BoxShape.circle, // 圆形，使用圆形时不可以使用borderRadius\n              shape: BoxShape.circle, // 默认值也是矩形\n              // borderRadius: new BorderRadius.circular((20.0)), // 圆角度\n            ),\n            // 约束内部控件及自身的大小\n            constraints: BoxConstraints(\n              minWidth: 0,\n              minHeight: 0,\n              maxHeight: double.infinity,\n              maxWidth: double.infinity\n            ),\n            // 外边距\n            margin: EdgeInsets.all(30),\n            // 内边距\n            // padding: EdgeInsets.all(10),\n            // 变换z轴缩放\n            transform: new Matrix4.rotationZ(0.2),\n            padding: EdgeInsets.fromLTRB(10, 10, 10, 10),\n            child: Container(\n              color: Colors.blueAccent,\n              width: 100,\n              height: 100,\n            ),\n          ),\n        )),\n```\n\n* 注意点\n\nalignment设置了之后，就会依照父控件的constraints:BoxConstraints 确定宽高。这时候你再去设置宽高就不起作用了\n\nBoxConstraints 主要有四个属性：\n\n> minWidth\n>\n> maxWidth\n>\n> minHeight\n>\n> maxHeight\n\n\n\n* #### Decoration 背景[摘自](https://blog.csdn.net/chenlove1/article/details/83627831)\n\n1 继续关系：\n\n\nBoxDecoration:实现边框、圆角、阴影、形状、渐变、背景图像\n\nShapeDecoration:实现四个边分别指定颜色和宽度、底部线、矩形边色、圆形边色、体育场（竖向椭圆）、 角形（八边角）边色\n\nFlutterLogoDecoration:实现Flutter图片\n\nUnderlineTabindicator:下划线\n\n2 介绍\n一个背景装饰对象，相当于Android中的shape.xml，定制各种各样的背景（边框、圆角、阴影、形状、渐变、背景图像）。\n\n3 BoxDecoration例子：\n构造方法：\n```dart\n\n  const BoxDecoration({\n    this.color, // 底色\n    this.image, // 图片\n    this.border, 边色\n    this.borderRadius, // 圆角度\n    this.boxShadow, // 阴影\n    this.gradient, // 渐变\n    this.backgroundBlendMode, // 混合Mode\n    this.shape = BoxShape.rectangle,  // 形状\n  })\n```\n \n3.1 边框+圆角:\n```dart\ndecoration: new BoxDecoration(\n  border: new Border.all(color: Color(0xFFFF0000), width: 0.5), // 边色与边宽度\n  color: Color(0xFF9E9E9E), // 底色\n  //        borderRadius: new BorderRadius.circular((20.0)), // 圆角度\n  borderRadius: new BorderRadius.vertical(top: Radius.elliptical(20, 50)), // 也可控件一边圆角大小\n),\n```\n\n3.2 阴影：\n```dart\ndecoration: new BoxDecoration(\n    border: new Border.all(color: Color(0xFFFF0000), width: 0.5), // 边色与边宽度\n// 生成俩层阴影，一层绿，一层黄， 阴影位置由offset决定,阴影模糊层度由blurRadius大小决定（大就更透明更扩散），阴影模糊大小由spreadRadius决定\n    boxShadow: [BoxShadow(color: Color(0x99FFFF00), offset: Offset(5.0, 5.0),    blurRadius: 10.0, spreadRadius: 2.0), BoxShadow(color: Color(0x9900FF00), offset: Offset(1.0, 1.0)), BoxShadow(color: Color(0xFF0000FF))],\n),\n```\n\n3.3 形状（圆形与矩形）：\n```dart\ndecoration: new BoxDecoration(\n  border: new Border.all(color: Color(0xFFFFFF00), width: 0.5), // 边色与边宽度\n  color: Color(0xFF9E9E9E), // 底色\n  //        shape: BoxShape.circle, // 圆形，使用圆形时不可以使用borderRadius\n  shape: BoxShape.rectangle, // 默认值也是矩形\n  borderRadius: new BorderRadius.circular((20.0)), // 圆角度\n),\n```\n\n3.4 渐变（环形、扫描式、线性）：\n```dart\ndecoration: new BoxDecoration(\n  border: new Border.all(color: Color(0xFFFFFF00), width: 0.5), // 边色与边宽度\n// 环形渲染\n  gradient: RadialGradient(colors: [Color(0xFFFFFF00), Color(0xFF00FF00), Color(0xFF00FFFF)],radius: 1, tileMode: TileMode.mirror)\n//扫描式渐变\n//        gradient: SweepGradient(colors: [Color(0xFFFFFF00), Color(0xFF00FF00), Color(0xFF00FFFF)], startAngle: 0.0, endAngle: 1*3.14)\n// 线性渐变\n//        gradient: LinearGradient(colors: [Color(0xFFFFFF00), Color(0xFF00FF00), Color(0xFF00FFFF)], begin: FractionalOffset(1, 0), end: FractionalOffset(0, 1))\n),\n```\n\n3.4 背景图像：\n```dart\ndecoration: new BoxDecoration(\n  border: new Border.all(color: Color(0xFFFFFF00), width: 0.5), // 边色与边宽度\n  image: new DecorationImage(\n  image: new NetworkImage('https://avatar.csdn.net/8/9/A/3_chenlove1.jpg'), // 网络图片\n  // image: new AssetImage('graphics/background.png'), 本地图片\n  fit: BoxFit.fill // 填满\n  //          centerSlice: new Rect.fromLTRB(270.0, 180.0, 1360.0, 730.0),// 固定大小\n  ),\n),\n```\n\n4 ShapeDecoration例子：\n构造方法：\n```dart\nconst ShapeDecoration({\n  this.color,\n  this.image,\n  this.gradient,\n  this.shadows,\n  @required this.shape,\n})\n// 除了shape，其他与BoxDecoration一致，shape研究：    \n\ndecoration: new ShapeDecoration(\n  color: Color(0xFFFF00FF), // 底色\n  // 统一四边颜色和宽度\n  shape: Border.all(color: Color(0xFF00FFFF),style: BorderStyle.solid,width: 2)\n// 四个边分别指定颜色和宽度， 当只给bottom时与UnderlineInputBorder一致效果\n//          shape: Border(top: b, bottom: b, right: b, left: b)\n// 底部线\n//          shape: UnderlineInputBorder( borderSide:BorderSide(color: Color(0xFFFFFFFF), style: BorderStyle.solid, width: 2))\n// 矩形边色\n//        shape: RoundedRectangleBorder(borderRadius: BorderRadius.all(Radius.circular(10)), side: BorderSide(color: Color(0xFFFFFFFF), style: BorderStyle.solid, width: 2))\n// 圆形边色\n//        shape: CircleBorder(side: BorderSide(color: Color(0xFFFFFF00), style: BorderStyle.solid, width: 2))\n// 体育场（竖向椭圆）\n//        shape: StadiumBorder(side: BorderSide(width: 2, style: BorderStyle.solid, color: Color(0xFF00FFFF))\n// 角形（八边角）边色\n//          shape: BeveledRectangleBorder(borderRadius: BorderRadius.all(Radius.circular(10)), side: BorderSide(color: Color(0xFFFFFFFF), style: BorderStyle.solid, width: 2))\n),\n```\n\n5 FlutterLogoDecoration例子：\n构造方法：\n```dart\nconst FlutterLogoDecoration({\n  this.lightColor = const Color(0xFF42A5F5), // Colors.blue[400]\n  this.darkColor = const Color(0xFF0D47A1), // Colors.blue[900]\n  this.textColor = const Color(0xFF616161),\n  this.style = FlutterLogoStyle.markOnly,\n  this.margin = EdgeInsets.zero,\n}) \n// 这个就不解析了，Flutter的logo，开发没啥用！\n```\n\n\n6 UnderlineTabindicator例子：\n构造方法：\n```dart\nconst UnderlineTabIndicator({\n  this.borderSide = const BorderSide(width: 2.0, color: Colors.white),\n  this.insets = EdgeInsets.zero,\n})\n// 这个比较简单就是加下划线，可以设置Insets值（控制下划高底，左右边距）\n\ndecoration: new UnderlineTabIndicator(\n  borderSide: BorderSide(width: 2.0, color: Colors.white),\n  insets: EdgeInsets.fromLTRB(0,0,0,10)\n),\n```\n\n\n\n\n","source":"_posts/Flutter-笔记之-Container.md","raw":"---\ntitle: Flutter 笔记之 Container\ncover: http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4098.jpg\ndate: 2019-05-25 15:50:39\nsubtitle: Flutter 笔记之 Container\ncategories:\n- Flutter\ntags:\n- Android\n- iOS\n---\n\n\n* #### 官方解释\n\n> 一个拥有绘制、定位、调整大小的 widget。\n>\n> 可以确定的是这个玩意用的很广泛，它可以为一个View提供相对于父view位置的控制，及边框，边距，缩放，背景等属性\n\n* #### 示例代码\n\n```dart\nbody: Center(\n            // Center控件后面再看\n            child: Container(\n          // 设置内部控件居中\n          alignment: Alignment.center,\n          // 背景色\n          color: Colors.white30,\n          // 只能有一个控件\n          child: Container(\n            // 宽高\n            width: 300,\n            height: 300,\n            // 内部控件偏移 1.0 表示x方向最右边，y轴方向最下边\n            alignment: Alignment(1.0, 1.0),\n            // 设置背景边框，覆盖到内部控件之下\n            decoration: BoxDecoration(\n              color: Colors.red,\n              border:\n                  Border.all(color: Color(0xFFFF0000), width: 0.5), // 边色与边宽度\n              borderRadius: new BorderRadius.circular((60.0)), // 圆角度\n              // borderRadius: BorderRadius.vertical(top: Radius.elliptical(20, 50)),// 也可控件一边圆角大小\n              // // 生成俩层阴影，一层绿，一层黄， 阴影位置由offset决定,阴影模糊层度由blurRadius大小决定（大就更透明更扩散），阴影模糊大小由spreadRadius决定\n              boxShadow: [\n                BoxShadow(\n                    color: Colors.amber,\n                    offset: Offset(5.0, 5.0),\n                    blurRadius: 10.0,\n                    spreadRadius: 2.0),\n                BoxShadow(color: Colors.yellowAccent, offset: Offset(1.0, 1.0)),\n                BoxShadow(color: Colors.greenAccent)\n              ],\n            ),\n            // 覆盖到内部控件之上\n            foregroundDecoration: BoxDecoration(\n              border: new Border.all(\n                  color: Color(0xFFFFFF00), width: 0.5), // 边色与边宽度\n              color: Color(0xFF9E9E9E), // 底色\n              //        shape: BoxShape.circle, // 圆形，使用圆形时不可以使用borderRadius\n              shape: BoxShape.circle, // 默认值也是矩形\n              // borderRadius: new BorderRadius.circular((20.0)), // 圆角度\n            ),\n            // 约束内部控件及自身的大小\n            constraints: BoxConstraints(\n              minWidth: 0,\n              minHeight: 0,\n              maxHeight: double.infinity,\n              maxWidth: double.infinity\n            ),\n            // 外边距\n            margin: EdgeInsets.all(30),\n            // 内边距\n            // padding: EdgeInsets.all(10),\n            // 变换z轴缩放\n            transform: new Matrix4.rotationZ(0.2),\n            padding: EdgeInsets.fromLTRB(10, 10, 10, 10),\n            child: Container(\n              color: Colors.blueAccent,\n              width: 100,\n              height: 100,\n            ),\n          ),\n        )),\n```\n\n* 注意点\n\nalignment设置了之后，就会依照父控件的constraints:BoxConstraints 确定宽高。这时候你再去设置宽高就不起作用了\n\nBoxConstraints 主要有四个属性：\n\n> minWidth\n>\n> maxWidth\n>\n> minHeight\n>\n> maxHeight\n\n\n\n* #### Decoration 背景[摘自](https://blog.csdn.net/chenlove1/article/details/83627831)\n\n1 继续关系：\n\n\nBoxDecoration:实现边框、圆角、阴影、形状、渐变、背景图像\n\nShapeDecoration:实现四个边分别指定颜色和宽度、底部线、矩形边色、圆形边色、体育场（竖向椭圆）、 角形（八边角）边色\n\nFlutterLogoDecoration:实现Flutter图片\n\nUnderlineTabindicator:下划线\n\n2 介绍\n一个背景装饰对象，相当于Android中的shape.xml，定制各种各样的背景（边框、圆角、阴影、形状、渐变、背景图像）。\n\n3 BoxDecoration例子：\n构造方法：\n```dart\n\n  const BoxDecoration({\n    this.color, // 底色\n    this.image, // 图片\n    this.border, 边色\n    this.borderRadius, // 圆角度\n    this.boxShadow, // 阴影\n    this.gradient, // 渐变\n    this.backgroundBlendMode, // 混合Mode\n    this.shape = BoxShape.rectangle,  // 形状\n  })\n```\n \n3.1 边框+圆角:\n```dart\ndecoration: new BoxDecoration(\n  border: new Border.all(color: Color(0xFFFF0000), width: 0.5), // 边色与边宽度\n  color: Color(0xFF9E9E9E), // 底色\n  //        borderRadius: new BorderRadius.circular((20.0)), // 圆角度\n  borderRadius: new BorderRadius.vertical(top: Radius.elliptical(20, 50)), // 也可控件一边圆角大小\n),\n```\n\n3.2 阴影：\n```dart\ndecoration: new BoxDecoration(\n    border: new Border.all(color: Color(0xFFFF0000), width: 0.5), // 边色与边宽度\n// 生成俩层阴影，一层绿，一层黄， 阴影位置由offset决定,阴影模糊层度由blurRadius大小决定（大就更透明更扩散），阴影模糊大小由spreadRadius决定\n    boxShadow: [BoxShadow(color: Color(0x99FFFF00), offset: Offset(5.0, 5.0),    blurRadius: 10.0, spreadRadius: 2.0), BoxShadow(color: Color(0x9900FF00), offset: Offset(1.0, 1.0)), BoxShadow(color: Color(0xFF0000FF))],\n),\n```\n\n3.3 形状（圆形与矩形）：\n```dart\ndecoration: new BoxDecoration(\n  border: new Border.all(color: Color(0xFFFFFF00), width: 0.5), // 边色与边宽度\n  color: Color(0xFF9E9E9E), // 底色\n  //        shape: BoxShape.circle, // 圆形，使用圆形时不可以使用borderRadius\n  shape: BoxShape.rectangle, // 默认值也是矩形\n  borderRadius: new BorderRadius.circular((20.0)), // 圆角度\n),\n```\n\n3.4 渐变（环形、扫描式、线性）：\n```dart\ndecoration: new BoxDecoration(\n  border: new Border.all(color: Color(0xFFFFFF00), width: 0.5), // 边色与边宽度\n// 环形渲染\n  gradient: RadialGradient(colors: [Color(0xFFFFFF00), Color(0xFF00FF00), Color(0xFF00FFFF)],radius: 1, tileMode: TileMode.mirror)\n//扫描式渐变\n//        gradient: SweepGradient(colors: [Color(0xFFFFFF00), Color(0xFF00FF00), Color(0xFF00FFFF)], startAngle: 0.0, endAngle: 1*3.14)\n// 线性渐变\n//        gradient: LinearGradient(colors: [Color(0xFFFFFF00), Color(0xFF00FF00), Color(0xFF00FFFF)], begin: FractionalOffset(1, 0), end: FractionalOffset(0, 1))\n),\n```\n\n3.4 背景图像：\n```dart\ndecoration: new BoxDecoration(\n  border: new Border.all(color: Color(0xFFFFFF00), width: 0.5), // 边色与边宽度\n  image: new DecorationImage(\n  image: new NetworkImage('https://avatar.csdn.net/8/9/A/3_chenlove1.jpg'), // 网络图片\n  // image: new AssetImage('graphics/background.png'), 本地图片\n  fit: BoxFit.fill // 填满\n  //          centerSlice: new Rect.fromLTRB(270.0, 180.0, 1360.0, 730.0),// 固定大小\n  ),\n),\n```\n\n4 ShapeDecoration例子：\n构造方法：\n```dart\nconst ShapeDecoration({\n  this.color,\n  this.image,\n  this.gradient,\n  this.shadows,\n  @required this.shape,\n})\n// 除了shape，其他与BoxDecoration一致，shape研究：    \n\ndecoration: new ShapeDecoration(\n  color: Color(0xFFFF00FF), // 底色\n  // 统一四边颜色和宽度\n  shape: Border.all(color: Color(0xFF00FFFF),style: BorderStyle.solid,width: 2)\n// 四个边分别指定颜色和宽度， 当只给bottom时与UnderlineInputBorder一致效果\n//          shape: Border(top: b, bottom: b, right: b, left: b)\n// 底部线\n//          shape: UnderlineInputBorder( borderSide:BorderSide(color: Color(0xFFFFFFFF), style: BorderStyle.solid, width: 2))\n// 矩形边色\n//        shape: RoundedRectangleBorder(borderRadius: BorderRadius.all(Radius.circular(10)), side: BorderSide(color: Color(0xFFFFFFFF), style: BorderStyle.solid, width: 2))\n// 圆形边色\n//        shape: CircleBorder(side: BorderSide(color: Color(0xFFFFFF00), style: BorderStyle.solid, width: 2))\n// 体育场（竖向椭圆）\n//        shape: StadiumBorder(side: BorderSide(width: 2, style: BorderStyle.solid, color: Color(0xFF00FFFF))\n// 角形（八边角）边色\n//          shape: BeveledRectangleBorder(borderRadius: BorderRadius.all(Radius.circular(10)), side: BorderSide(color: Color(0xFFFFFFFF), style: BorderStyle.solid, width: 2))\n),\n```\n\n5 FlutterLogoDecoration例子：\n构造方法：\n```dart\nconst FlutterLogoDecoration({\n  this.lightColor = const Color(0xFF42A5F5), // Colors.blue[400]\n  this.darkColor = const Color(0xFF0D47A1), // Colors.blue[900]\n  this.textColor = const Color(0xFF616161),\n  this.style = FlutterLogoStyle.markOnly,\n  this.margin = EdgeInsets.zero,\n}) \n// 这个就不解析了，Flutter的logo，开发没啥用！\n```\n\n\n6 UnderlineTabindicator例子：\n构造方法：\n```dart\nconst UnderlineTabIndicator({\n  this.borderSide = const BorderSide(width: 2.0, color: Colors.white),\n  this.insets = EdgeInsets.zero,\n})\n// 这个比较简单就是加下划线，可以设置Insets值（控制下划高底，左右边距）\n\ndecoration: new UnderlineTabIndicator(\n  borderSide: BorderSide(width: 2.0, color: Colors.white),\n  insets: EdgeInsets.fromLTRB(0,0,0,10)\n),\n```\n\n\n\n\n","slug":"Flutter-笔记之-Container","published":1,"updated":"2019-05-27T07:55:20.809Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjw65m7fz00053ivofhnpw7y2","content":"<ul>\n<li>\n<h4 id=\"官方解释\"><a class=\"markdownIt-Anchor\" href=\"#官方解释\"></a> 官方解释</h4>\n</li>\n</ul>\n<blockquote>\n<p>一个拥有绘制、定位、调整大小的 widget。</p>\n<p>可以确定的是这个玩意用的很广泛，它可以为一个View提供相对于父view位置的控制，及边框，边距，缩放，背景等属性</p>\n</blockquote>\n<ul>\n<li>\n<h4 id=\"示例代码\"><a class=\"markdownIt-Anchor\" href=\"#示例代码\"></a> 示例代码</h4>\n</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body: Center(</span><br><span class=\"line\">            <span class=\"comment\">// Center控件后面再看</span></span><br><span class=\"line\">            child: Container(</span><br><span class=\"line\">          <span class=\"comment\">// 设置内部控件居中</span></span><br><span class=\"line\">          alignment: Alignment.center,</span><br><span class=\"line\">          <span class=\"comment\">// 背景色</span></span><br><span class=\"line\">          color: Colors.white30,</span><br><span class=\"line\">          <span class=\"comment\">// 只能有一个控件</span></span><br><span class=\"line\">          child: Container(</span><br><span class=\"line\">            <span class=\"comment\">// 宽高</span></span><br><span class=\"line\">            width: <span class=\"number\">300</span>,</span><br><span class=\"line\">            height: <span class=\"number\">300</span>,</span><br><span class=\"line\">            <span class=\"comment\">// 内部控件偏移 1.0 表示x方向最右边，y轴方向最下边</span></span><br><span class=\"line\">            alignment: Alignment(<span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>),</span><br><span class=\"line\">            <span class=\"comment\">// 设置背景边框，覆盖到内部控件之下</span></span><br><span class=\"line\">            decoration: BoxDecoration(</span><br><span class=\"line\">              color: Colors.red,</span><br><span class=\"line\">              border:</span><br><span class=\"line\">                  Border.all(color: Color(<span class=\"number\">0xFFFF0000</span>), width: <span class=\"number\">0.5</span>), <span class=\"comment\">// 边色与边宽度</span></span><br><span class=\"line\">              borderRadius: <span class=\"keyword\">new</span> BorderRadius.circular((<span class=\"number\">60.0</span>)), <span class=\"comment\">// 圆角度</span></span><br><span class=\"line\">              <span class=\"comment\">// borderRadius: BorderRadius.vertical(top: Radius.elliptical(20, 50)),// 也可控件一边圆角大小</span></span><br><span class=\"line\">              <span class=\"comment\">// // 生成俩层阴影，一层绿，一层黄， 阴影位置由offset决定,阴影模糊层度由blurRadius大小决定（大就更透明更扩散），阴影模糊大小由spreadRadius决定</span></span><br><span class=\"line\">              boxShadow: [</span><br><span class=\"line\">                BoxShadow(</span><br><span class=\"line\">                    color: Colors.amber,</span><br><span class=\"line\">                    offset: Offset(<span class=\"number\">5.0</span>, <span class=\"number\">5.0</span>),</span><br><span class=\"line\">                    blurRadius: <span class=\"number\">10.0</span>,</span><br><span class=\"line\">                    spreadRadius: <span class=\"number\">2.0</span>),</span><br><span class=\"line\">                BoxShadow(color: Colors.yellowAccent, offset: Offset(<span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>)),</span><br><span class=\"line\">                BoxShadow(color: Colors.greenAccent)</span><br><span class=\"line\">              ],</span><br><span class=\"line\">            ),</span><br><span class=\"line\">            <span class=\"comment\">// 覆盖到内部控件之上</span></span><br><span class=\"line\">            foregroundDecoration: BoxDecoration(</span><br><span class=\"line\">              border: <span class=\"keyword\">new</span> Border.all(</span><br><span class=\"line\">                  color: Color(<span class=\"number\">0xFFFFFF00</span>), width: <span class=\"number\">0.5</span>), <span class=\"comment\">// 边色与边宽度</span></span><br><span class=\"line\">              color: Color(<span class=\"number\">0xFF9E9E9E</span>), <span class=\"comment\">// 底色</span></span><br><span class=\"line\">              <span class=\"comment\">//        shape: BoxShape.circle, // 圆形，使用圆形时不可以使用borderRadius</span></span><br><span class=\"line\">              shape: BoxShape.circle, <span class=\"comment\">// 默认值也是矩形</span></span><br><span class=\"line\">              <span class=\"comment\">// borderRadius: new BorderRadius.circular((20.0)), // 圆角度</span></span><br><span class=\"line\">            ),</span><br><span class=\"line\">            <span class=\"comment\">// 约束内部控件及自身的大小</span></span><br><span class=\"line\">            constraints: BoxConstraints(</span><br><span class=\"line\">              minWidth: <span class=\"number\">0</span>,</span><br><span class=\"line\">              minHeight: <span class=\"number\">0</span>,</span><br><span class=\"line\">              maxHeight: <span class=\"built_in\">double</span>.infinity,</span><br><span class=\"line\">              maxWidth: <span class=\"built_in\">double</span>.infinity</span><br><span class=\"line\">            ),</span><br><span class=\"line\">            <span class=\"comment\">// 外边距</span></span><br><span class=\"line\">            margin: EdgeInsets.all(<span class=\"number\">30</span>),</span><br><span class=\"line\">            <span class=\"comment\">// 内边距</span></span><br><span class=\"line\">            <span class=\"comment\">// padding: EdgeInsets.all(10),</span></span><br><span class=\"line\">            <span class=\"comment\">// 变换z轴缩放</span></span><br><span class=\"line\">            transform: <span class=\"keyword\">new</span> Matrix4.rotationZ(<span class=\"number\">0.2</span>),</span><br><span class=\"line\">            padding: EdgeInsets.fromLTRB(<span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>),</span><br><span class=\"line\">            child: Container(</span><br><span class=\"line\">              color: Colors.blueAccent,</span><br><span class=\"line\">              width: <span class=\"number\">100</span>,</span><br><span class=\"line\">              height: <span class=\"number\">100</span>,</span><br><span class=\"line\">            ),</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        )),</span><br></pre></td></tr></table></figure>\n<ul>\n<li>注意点</li>\n</ul>\n<p>alignment设置了之后，就会依照父控件的constraints:BoxConstraints 确定宽高。这时候你再去设置宽高就不起作用了</p>\n<p>BoxConstraints 主要有四个属性：</p>\n<blockquote>\n<p>minWidth</p>\n<p>maxWidth</p>\n<p>minHeight</p>\n<p>maxHeight</p>\n</blockquote>\n<ul>\n<li>\n<h4 id=\"decoration-背景摘自\"><a class=\"markdownIt-Anchor\" href=\"#decoration-背景摘自\"></a> Decoration 背景<a href=\"https://blog.csdn.net/chenlove1/article/details/83627831\" target=\"_blank\" rel=\"noopener\">摘自</a></h4>\n</li>\n</ul>\n<p>1 继续关系：</p>\n<p>BoxDecoration:实现边框、圆角、阴影、形状、渐变、背景图像</p>\n<p>ShapeDecoration:实现四个边分别指定颜色和宽度、底部线、矩形边色、圆形边色、体育场（竖向椭圆）、 角形（八边角）边色</p>\n<p>FlutterLogoDecoration:实现Flutter图片</p>\n<p>UnderlineTabindicator:下划线</p>\n<p>2 介绍<br>\n一个背景装饰对象，相当于Android中的shape.xml，定制各种各样的背景（边框、圆角、阴影、形状、渐变、背景图像）。</p>\n<p>3 BoxDecoration例子：<br>\n构造方法：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> BoxDecoration(&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.color, <span class=\"comment\">// 底色</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.image, <span class=\"comment\">// 图片</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.border, 边色</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.borderRadius, <span class=\"comment\">// 圆角度</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.boxShadow, <span class=\"comment\">// 阴影</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.gradient, <span class=\"comment\">// 渐变</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.backgroundBlendMode, <span class=\"comment\">// 混合Mode</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.shape = BoxShape.rectangle,  <span class=\"comment\">// 形状</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>3.1 边框+圆角:</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">decoration: <span class=\"keyword\">new</span> BoxDecoration(</span><br><span class=\"line\">  border: <span class=\"keyword\">new</span> Border.all(color: Color(<span class=\"number\">0xFFFF0000</span>), width: <span class=\"number\">0.5</span>), <span class=\"comment\">// 边色与边宽度</span></span><br><span class=\"line\">  color: Color(<span class=\"number\">0xFF9E9E9E</span>), <span class=\"comment\">// 底色</span></span><br><span class=\"line\">  <span class=\"comment\">//        borderRadius: new BorderRadius.circular((20.0)), // 圆角度</span></span><br><span class=\"line\">  borderRadius: <span class=\"keyword\">new</span> BorderRadius.vertical(top: Radius.elliptical(<span class=\"number\">20</span>, <span class=\"number\">50</span>)), <span class=\"comment\">// 也可控件一边圆角大小</span></span><br><span class=\"line\">),</span><br></pre></td></tr></table></figure>\n<p>3.2 阴影：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">decoration: <span class=\"keyword\">new</span> BoxDecoration(</span><br><span class=\"line\">    border: <span class=\"keyword\">new</span> Border.all(color: Color(<span class=\"number\">0xFFFF0000</span>), width: <span class=\"number\">0.5</span>), <span class=\"comment\">// 边色与边宽度</span></span><br><span class=\"line\"><span class=\"comment\">// 生成俩层阴影，一层绿，一层黄， 阴影位置由offset决定,阴影模糊层度由blurRadius大小决定（大就更透明更扩散），阴影模糊大小由spreadRadius决定</span></span><br><span class=\"line\">    boxShadow: [BoxShadow(color: Color(<span class=\"number\">0x99FFFF00</span>), offset: Offset(<span class=\"number\">5.0</span>, <span class=\"number\">5.0</span>),    blurRadius: <span class=\"number\">10.0</span>, spreadRadius: <span class=\"number\">2.0</span>), BoxShadow(color: Color(<span class=\"number\">0x9900FF00</span>), offset: Offset(<span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>)), BoxShadow(color: Color(<span class=\"number\">0xFF0000FF</span>))],</span><br><span class=\"line\">),</span><br></pre></td></tr></table></figure>\n<p>3.3 形状（圆形与矩形）：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">decoration: <span class=\"keyword\">new</span> BoxDecoration(</span><br><span class=\"line\">  border: <span class=\"keyword\">new</span> Border.all(color: Color(<span class=\"number\">0xFFFFFF00</span>), width: <span class=\"number\">0.5</span>), <span class=\"comment\">// 边色与边宽度</span></span><br><span class=\"line\">  color: Color(<span class=\"number\">0xFF9E9E9E</span>), <span class=\"comment\">// 底色</span></span><br><span class=\"line\">  <span class=\"comment\">//        shape: BoxShape.circle, // 圆形，使用圆形时不可以使用borderRadius</span></span><br><span class=\"line\">  shape: BoxShape.rectangle, <span class=\"comment\">// 默认值也是矩形</span></span><br><span class=\"line\">  borderRadius: <span class=\"keyword\">new</span> BorderRadius.circular((<span class=\"number\">20.0</span>)), <span class=\"comment\">// 圆角度</span></span><br><span class=\"line\">),</span><br></pre></td></tr></table></figure>\n<p>3.4 渐变（环形、扫描式、线性）：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">decoration: <span class=\"keyword\">new</span> BoxDecoration(</span><br><span class=\"line\">  border: <span class=\"keyword\">new</span> Border.all(color: Color(<span class=\"number\">0xFFFFFF00</span>), width: <span class=\"number\">0.5</span>), <span class=\"comment\">// 边色与边宽度</span></span><br><span class=\"line\"><span class=\"comment\">// 环形渲染</span></span><br><span class=\"line\">  gradient: RadialGradient(colors: [Color(<span class=\"number\">0xFFFFFF00</span>), Color(<span class=\"number\">0xFF00FF00</span>), Color(<span class=\"number\">0xFF00FFFF</span>)],radius: <span class=\"number\">1</span>, tileMode: TileMode.mirror)</span><br><span class=\"line\"><span class=\"comment\">//扫描式渐变</span></span><br><span class=\"line\"><span class=\"comment\">//        gradient: SweepGradient(colors: [Color(0xFFFFFF00), Color(0xFF00FF00), Color(0xFF00FFFF)], startAngle: 0.0, endAngle: 1*3.14)</span></span><br><span class=\"line\"><span class=\"comment\">// 线性渐变</span></span><br><span class=\"line\"><span class=\"comment\">//        gradient: LinearGradient(colors: [Color(0xFFFFFF00), Color(0xFF00FF00), Color(0xFF00FFFF)], begin: FractionalOffset(1, 0), end: FractionalOffset(0, 1))</span></span><br><span class=\"line\">),</span><br></pre></td></tr></table></figure>\n<p>3.4 背景图像：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">decoration: <span class=\"keyword\">new</span> BoxDecoration(</span><br><span class=\"line\">  border: <span class=\"keyword\">new</span> Border.all(color: Color(<span class=\"number\">0xFFFFFF00</span>), width: <span class=\"number\">0.5</span>), <span class=\"comment\">// 边色与边宽度</span></span><br><span class=\"line\">  image: <span class=\"keyword\">new</span> DecorationImage(</span><br><span class=\"line\">  image: <span class=\"keyword\">new</span> NetworkImage(<span class=\"string\">'https://avatar.csdn.net/8/9/A/3_chenlove1.jpg'</span>), <span class=\"comment\">// 网络图片</span></span><br><span class=\"line\">  <span class=\"comment\">// image: new AssetImage('graphics/background.png'), 本地图片</span></span><br><span class=\"line\">  fit: BoxFit.fill <span class=\"comment\">// 填满</span></span><br><span class=\"line\">  <span class=\"comment\">//          centerSlice: new Rect.fromLTRB(270.0, 180.0, 1360.0, 730.0),// 固定大小</span></span><br><span class=\"line\">  ),</span><br><span class=\"line\">),</span><br></pre></td></tr></table></figure>\n<p>4 ShapeDecoration例子：<br>\n构造方法：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> ShapeDecoration(&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.color,</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.image,</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.gradient,</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.shadows,</span><br><span class=\"line\">  <span class=\"meta\">@required</span> <span class=\"keyword\">this</span>.shape,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 除了shape，其他与BoxDecoration一致，shape研究：    </span></span><br><span class=\"line\"></span><br><span class=\"line\">decoration: <span class=\"keyword\">new</span> ShapeDecoration(</span><br><span class=\"line\">  color: Color(<span class=\"number\">0xFFFF00FF</span>), <span class=\"comment\">// 底色</span></span><br><span class=\"line\">  <span class=\"comment\">// 统一四边颜色和宽度</span></span><br><span class=\"line\">  shape: Border.all(color: Color(<span class=\"number\">0xFF00FFFF</span>),style: BorderStyle.solid,width: <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\">// 四个边分别指定颜色和宽度， 当只给bottom时与UnderlineInputBorder一致效果</span></span><br><span class=\"line\"><span class=\"comment\">//          shape: Border(top: b, bottom: b, right: b, left: b)</span></span><br><span class=\"line\"><span class=\"comment\">// 底部线</span></span><br><span class=\"line\"><span class=\"comment\">//          shape: UnderlineInputBorder( borderSide:BorderSide(color: Color(0xFFFFFFFF), style: BorderStyle.solid, width: 2))</span></span><br><span class=\"line\"><span class=\"comment\">// 矩形边色</span></span><br><span class=\"line\"><span class=\"comment\">//        shape: RoundedRectangleBorder(borderRadius: BorderRadius.all(Radius.circular(10)), side: BorderSide(color: Color(0xFFFFFFFF), style: BorderStyle.solid, width: 2))</span></span><br><span class=\"line\"><span class=\"comment\">// 圆形边色</span></span><br><span class=\"line\"><span class=\"comment\">//        shape: CircleBorder(side: BorderSide(color: Color(0xFFFFFF00), style: BorderStyle.solid, width: 2))</span></span><br><span class=\"line\"><span class=\"comment\">// 体育场（竖向椭圆）</span></span><br><span class=\"line\"><span class=\"comment\">//        shape: StadiumBorder(side: BorderSide(width: 2, style: BorderStyle.solid, color: Color(0xFF00FFFF))</span></span><br><span class=\"line\"><span class=\"comment\">// 角形（八边角）边色</span></span><br><span class=\"line\"><span class=\"comment\">//          shape: BeveledRectangleBorder(borderRadius: BorderRadius.all(Radius.circular(10)), side: BorderSide(color: Color(0xFFFFFFFF), style: BorderStyle.solid, width: 2))</span></span><br><span class=\"line\">),</span><br></pre></td></tr></table></figure>\n<p>5 FlutterLogoDecoration例子：<br>\n构造方法：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> FlutterLogoDecoration(&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.lightColor = <span class=\"keyword\">const</span> Color(<span class=\"number\">0xFF42A5F5</span>), <span class=\"comment\">// Colors.blue[400]</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.darkColor = <span class=\"keyword\">const</span> Color(<span class=\"number\">0xFF0D47A1</span>), <span class=\"comment\">// Colors.blue[900]</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.textColor = <span class=\"keyword\">const</span> Color(<span class=\"number\">0xFF616161</span>),</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.style = FlutterLogoStyle.markOnly,</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.margin = EdgeInsets.zero,</span><br><span class=\"line\">&#125;) </span><br><span class=\"line\"><span class=\"comment\">// 这个就不解析了，Flutter的logo，开发没啥用！</span></span><br></pre></td></tr></table></figure>\n<p>6 UnderlineTabindicator例子：<br>\n构造方法：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> UnderlineTabIndicator(&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.borderSide = <span class=\"keyword\">const</span> BorderSide(width: <span class=\"number\">2.0</span>, color: Colors.white),</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.insets = EdgeInsets.zero,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 这个比较简单就是加下划线，可以设置Insets值（控制下划高底，左右边距）</span></span><br><span class=\"line\"></span><br><span class=\"line\">decoration: <span class=\"keyword\">new</span> UnderlineTabIndicator(</span><br><span class=\"line\">  borderSide: BorderSide(width: <span class=\"number\">2.0</span>, color: Colors.white),</span><br><span class=\"line\">  insets: EdgeInsets.fromLTRB(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">10</span>)</span><br><span class=\"line\">),</span><br></pre></td></tr></table></figure>\n","site":{"data":{"links":[{"name":"Yaooort","describe":"大傻子","link":"http://www.yaooort.com","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4172.jpg"},{"name":"GitHub","describe":"直男网","link":"https://github.com/yaooort","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3829.jpg"}]}},"excerpt":"","more":"<ul>\n<li>\n<h4 id=\"官方解释\"><a class=\"markdownIt-Anchor\" href=\"#官方解释\"></a> 官方解释</h4>\n</li>\n</ul>\n<blockquote>\n<p>一个拥有绘制、定位、调整大小的 widget。</p>\n<p>可以确定的是这个玩意用的很广泛，它可以为一个View提供相对于父view位置的控制，及边框，边距，缩放，背景等属性</p>\n</blockquote>\n<ul>\n<li>\n<h4 id=\"示例代码\"><a class=\"markdownIt-Anchor\" href=\"#示例代码\"></a> 示例代码</h4>\n</li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body: Center(</span><br><span class=\"line\">            <span class=\"comment\">// Center控件后面再看</span></span><br><span class=\"line\">            child: Container(</span><br><span class=\"line\">          <span class=\"comment\">// 设置内部控件居中</span></span><br><span class=\"line\">          alignment: Alignment.center,</span><br><span class=\"line\">          <span class=\"comment\">// 背景色</span></span><br><span class=\"line\">          color: Colors.white30,</span><br><span class=\"line\">          <span class=\"comment\">// 只能有一个控件</span></span><br><span class=\"line\">          child: Container(</span><br><span class=\"line\">            <span class=\"comment\">// 宽高</span></span><br><span class=\"line\">            width: <span class=\"number\">300</span>,</span><br><span class=\"line\">            height: <span class=\"number\">300</span>,</span><br><span class=\"line\">            <span class=\"comment\">// 内部控件偏移 1.0 表示x方向最右边，y轴方向最下边</span></span><br><span class=\"line\">            alignment: Alignment(<span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>),</span><br><span class=\"line\">            <span class=\"comment\">// 设置背景边框，覆盖到内部控件之下</span></span><br><span class=\"line\">            decoration: BoxDecoration(</span><br><span class=\"line\">              color: Colors.red,</span><br><span class=\"line\">              border:</span><br><span class=\"line\">                  Border.all(color: Color(<span class=\"number\">0xFFFF0000</span>), width: <span class=\"number\">0.5</span>), <span class=\"comment\">// 边色与边宽度</span></span><br><span class=\"line\">              borderRadius: <span class=\"keyword\">new</span> BorderRadius.circular((<span class=\"number\">60.0</span>)), <span class=\"comment\">// 圆角度</span></span><br><span class=\"line\">              <span class=\"comment\">// borderRadius: BorderRadius.vertical(top: Radius.elliptical(20, 50)),// 也可控件一边圆角大小</span></span><br><span class=\"line\">              <span class=\"comment\">// // 生成俩层阴影，一层绿，一层黄， 阴影位置由offset决定,阴影模糊层度由blurRadius大小决定（大就更透明更扩散），阴影模糊大小由spreadRadius决定</span></span><br><span class=\"line\">              boxShadow: [</span><br><span class=\"line\">                BoxShadow(</span><br><span class=\"line\">                    color: Colors.amber,</span><br><span class=\"line\">                    offset: Offset(<span class=\"number\">5.0</span>, <span class=\"number\">5.0</span>),</span><br><span class=\"line\">                    blurRadius: <span class=\"number\">10.0</span>,</span><br><span class=\"line\">                    spreadRadius: <span class=\"number\">2.0</span>),</span><br><span class=\"line\">                BoxShadow(color: Colors.yellowAccent, offset: Offset(<span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>)),</span><br><span class=\"line\">                BoxShadow(color: Colors.greenAccent)</span><br><span class=\"line\">              ],</span><br><span class=\"line\">            ),</span><br><span class=\"line\">            <span class=\"comment\">// 覆盖到内部控件之上</span></span><br><span class=\"line\">            foregroundDecoration: BoxDecoration(</span><br><span class=\"line\">              border: <span class=\"keyword\">new</span> Border.all(</span><br><span class=\"line\">                  color: Color(<span class=\"number\">0xFFFFFF00</span>), width: <span class=\"number\">0.5</span>), <span class=\"comment\">// 边色与边宽度</span></span><br><span class=\"line\">              color: Color(<span class=\"number\">0xFF9E9E9E</span>), <span class=\"comment\">// 底色</span></span><br><span class=\"line\">              <span class=\"comment\">//        shape: BoxShape.circle, // 圆形，使用圆形时不可以使用borderRadius</span></span><br><span class=\"line\">              shape: BoxShape.circle, <span class=\"comment\">// 默认值也是矩形</span></span><br><span class=\"line\">              <span class=\"comment\">// borderRadius: new BorderRadius.circular((20.0)), // 圆角度</span></span><br><span class=\"line\">            ),</span><br><span class=\"line\">            <span class=\"comment\">// 约束内部控件及自身的大小</span></span><br><span class=\"line\">            constraints: BoxConstraints(</span><br><span class=\"line\">              minWidth: <span class=\"number\">0</span>,</span><br><span class=\"line\">              minHeight: <span class=\"number\">0</span>,</span><br><span class=\"line\">              maxHeight: <span class=\"built_in\">double</span>.infinity,</span><br><span class=\"line\">              maxWidth: <span class=\"built_in\">double</span>.infinity</span><br><span class=\"line\">            ),</span><br><span class=\"line\">            <span class=\"comment\">// 外边距</span></span><br><span class=\"line\">            margin: EdgeInsets.all(<span class=\"number\">30</span>),</span><br><span class=\"line\">            <span class=\"comment\">// 内边距</span></span><br><span class=\"line\">            <span class=\"comment\">// padding: EdgeInsets.all(10),</span></span><br><span class=\"line\">            <span class=\"comment\">// 变换z轴缩放</span></span><br><span class=\"line\">            transform: <span class=\"keyword\">new</span> Matrix4.rotationZ(<span class=\"number\">0.2</span>),</span><br><span class=\"line\">            padding: EdgeInsets.fromLTRB(<span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>),</span><br><span class=\"line\">            child: Container(</span><br><span class=\"line\">              color: Colors.blueAccent,</span><br><span class=\"line\">              width: <span class=\"number\">100</span>,</span><br><span class=\"line\">              height: <span class=\"number\">100</span>,</span><br><span class=\"line\">            ),</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        )),</span><br></pre></td></tr></table></figure>\n<ul>\n<li>注意点</li>\n</ul>\n<p>alignment设置了之后，就会依照父控件的constraints:BoxConstraints 确定宽高。这时候你再去设置宽高就不起作用了</p>\n<p>BoxConstraints 主要有四个属性：</p>\n<blockquote>\n<p>minWidth</p>\n<p>maxWidth</p>\n<p>minHeight</p>\n<p>maxHeight</p>\n</blockquote>\n<ul>\n<li>\n<h4 id=\"decoration-背景摘自\"><a class=\"markdownIt-Anchor\" href=\"#decoration-背景摘自\"></a> Decoration 背景<a href=\"https://blog.csdn.net/chenlove1/article/details/83627831\" target=\"_blank\" rel=\"noopener\">摘自</a></h4>\n</li>\n</ul>\n<p>1 继续关系：</p>\n<p>BoxDecoration:实现边框、圆角、阴影、形状、渐变、背景图像</p>\n<p>ShapeDecoration:实现四个边分别指定颜色和宽度、底部线、矩形边色、圆形边色、体育场（竖向椭圆）、 角形（八边角）边色</p>\n<p>FlutterLogoDecoration:实现Flutter图片</p>\n<p>UnderlineTabindicator:下划线</p>\n<p>2 介绍<br>\n一个背景装饰对象，相当于Android中的shape.xml，定制各种各样的背景（边框、圆角、阴影、形状、渐变、背景图像）。</p>\n<p>3 BoxDecoration例子：<br>\n构造方法：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> BoxDecoration(&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.color, <span class=\"comment\">// 底色</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.image, <span class=\"comment\">// 图片</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.border, 边色</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.borderRadius, <span class=\"comment\">// 圆角度</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.boxShadow, <span class=\"comment\">// 阴影</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.gradient, <span class=\"comment\">// 渐变</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.backgroundBlendMode, <span class=\"comment\">// 混合Mode</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.shape = BoxShape.rectangle,  <span class=\"comment\">// 形状</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>3.1 边框+圆角:</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">decoration: <span class=\"keyword\">new</span> BoxDecoration(</span><br><span class=\"line\">  border: <span class=\"keyword\">new</span> Border.all(color: Color(<span class=\"number\">0xFFFF0000</span>), width: <span class=\"number\">0.5</span>), <span class=\"comment\">// 边色与边宽度</span></span><br><span class=\"line\">  color: Color(<span class=\"number\">0xFF9E9E9E</span>), <span class=\"comment\">// 底色</span></span><br><span class=\"line\">  <span class=\"comment\">//        borderRadius: new BorderRadius.circular((20.0)), // 圆角度</span></span><br><span class=\"line\">  borderRadius: <span class=\"keyword\">new</span> BorderRadius.vertical(top: Radius.elliptical(<span class=\"number\">20</span>, <span class=\"number\">50</span>)), <span class=\"comment\">// 也可控件一边圆角大小</span></span><br><span class=\"line\">),</span><br></pre></td></tr></table></figure>\n<p>3.2 阴影：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">decoration: <span class=\"keyword\">new</span> BoxDecoration(</span><br><span class=\"line\">    border: <span class=\"keyword\">new</span> Border.all(color: Color(<span class=\"number\">0xFFFF0000</span>), width: <span class=\"number\">0.5</span>), <span class=\"comment\">// 边色与边宽度</span></span><br><span class=\"line\"><span class=\"comment\">// 生成俩层阴影，一层绿，一层黄， 阴影位置由offset决定,阴影模糊层度由blurRadius大小决定（大就更透明更扩散），阴影模糊大小由spreadRadius决定</span></span><br><span class=\"line\">    boxShadow: [BoxShadow(color: Color(<span class=\"number\">0x99FFFF00</span>), offset: Offset(<span class=\"number\">5.0</span>, <span class=\"number\">5.0</span>),    blurRadius: <span class=\"number\">10.0</span>, spreadRadius: <span class=\"number\">2.0</span>), BoxShadow(color: Color(<span class=\"number\">0x9900FF00</span>), offset: Offset(<span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>)), BoxShadow(color: Color(<span class=\"number\">0xFF0000FF</span>))],</span><br><span class=\"line\">),</span><br></pre></td></tr></table></figure>\n<p>3.3 形状（圆形与矩形）：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">decoration: <span class=\"keyword\">new</span> BoxDecoration(</span><br><span class=\"line\">  border: <span class=\"keyword\">new</span> Border.all(color: Color(<span class=\"number\">0xFFFFFF00</span>), width: <span class=\"number\">0.5</span>), <span class=\"comment\">// 边色与边宽度</span></span><br><span class=\"line\">  color: Color(<span class=\"number\">0xFF9E9E9E</span>), <span class=\"comment\">// 底色</span></span><br><span class=\"line\">  <span class=\"comment\">//        shape: BoxShape.circle, // 圆形，使用圆形时不可以使用borderRadius</span></span><br><span class=\"line\">  shape: BoxShape.rectangle, <span class=\"comment\">// 默认值也是矩形</span></span><br><span class=\"line\">  borderRadius: <span class=\"keyword\">new</span> BorderRadius.circular((<span class=\"number\">20.0</span>)), <span class=\"comment\">// 圆角度</span></span><br><span class=\"line\">),</span><br></pre></td></tr></table></figure>\n<p>3.4 渐变（环形、扫描式、线性）：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">decoration: <span class=\"keyword\">new</span> BoxDecoration(</span><br><span class=\"line\">  border: <span class=\"keyword\">new</span> Border.all(color: Color(<span class=\"number\">0xFFFFFF00</span>), width: <span class=\"number\">0.5</span>), <span class=\"comment\">// 边色与边宽度</span></span><br><span class=\"line\"><span class=\"comment\">// 环形渲染</span></span><br><span class=\"line\">  gradient: RadialGradient(colors: [Color(<span class=\"number\">0xFFFFFF00</span>), Color(<span class=\"number\">0xFF00FF00</span>), Color(<span class=\"number\">0xFF00FFFF</span>)],radius: <span class=\"number\">1</span>, tileMode: TileMode.mirror)</span><br><span class=\"line\"><span class=\"comment\">//扫描式渐变</span></span><br><span class=\"line\"><span class=\"comment\">//        gradient: SweepGradient(colors: [Color(0xFFFFFF00), Color(0xFF00FF00), Color(0xFF00FFFF)], startAngle: 0.0, endAngle: 1*3.14)</span></span><br><span class=\"line\"><span class=\"comment\">// 线性渐变</span></span><br><span class=\"line\"><span class=\"comment\">//        gradient: LinearGradient(colors: [Color(0xFFFFFF00), Color(0xFF00FF00), Color(0xFF00FFFF)], begin: FractionalOffset(1, 0), end: FractionalOffset(0, 1))</span></span><br><span class=\"line\">),</span><br></pre></td></tr></table></figure>\n<p>3.4 背景图像：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">decoration: <span class=\"keyword\">new</span> BoxDecoration(</span><br><span class=\"line\">  border: <span class=\"keyword\">new</span> Border.all(color: Color(<span class=\"number\">0xFFFFFF00</span>), width: <span class=\"number\">0.5</span>), <span class=\"comment\">// 边色与边宽度</span></span><br><span class=\"line\">  image: <span class=\"keyword\">new</span> DecorationImage(</span><br><span class=\"line\">  image: <span class=\"keyword\">new</span> NetworkImage(<span class=\"string\">'https://avatar.csdn.net/8/9/A/3_chenlove1.jpg'</span>), <span class=\"comment\">// 网络图片</span></span><br><span class=\"line\">  <span class=\"comment\">// image: new AssetImage('graphics/background.png'), 本地图片</span></span><br><span class=\"line\">  fit: BoxFit.fill <span class=\"comment\">// 填满</span></span><br><span class=\"line\">  <span class=\"comment\">//          centerSlice: new Rect.fromLTRB(270.0, 180.0, 1360.0, 730.0),// 固定大小</span></span><br><span class=\"line\">  ),</span><br><span class=\"line\">),</span><br></pre></td></tr></table></figure>\n<p>4 ShapeDecoration例子：<br>\n构造方法：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> ShapeDecoration(&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.color,</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.image,</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.gradient,</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.shadows,</span><br><span class=\"line\">  <span class=\"meta\">@required</span> <span class=\"keyword\">this</span>.shape,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 除了shape，其他与BoxDecoration一致，shape研究：    </span></span><br><span class=\"line\"></span><br><span class=\"line\">decoration: <span class=\"keyword\">new</span> ShapeDecoration(</span><br><span class=\"line\">  color: Color(<span class=\"number\">0xFFFF00FF</span>), <span class=\"comment\">// 底色</span></span><br><span class=\"line\">  <span class=\"comment\">// 统一四边颜色和宽度</span></span><br><span class=\"line\">  shape: Border.all(color: Color(<span class=\"number\">0xFF00FFFF</span>),style: BorderStyle.solid,width: <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\">// 四个边分别指定颜色和宽度， 当只给bottom时与UnderlineInputBorder一致效果</span></span><br><span class=\"line\"><span class=\"comment\">//          shape: Border(top: b, bottom: b, right: b, left: b)</span></span><br><span class=\"line\"><span class=\"comment\">// 底部线</span></span><br><span class=\"line\"><span class=\"comment\">//          shape: UnderlineInputBorder( borderSide:BorderSide(color: Color(0xFFFFFFFF), style: BorderStyle.solid, width: 2))</span></span><br><span class=\"line\"><span class=\"comment\">// 矩形边色</span></span><br><span class=\"line\"><span class=\"comment\">//        shape: RoundedRectangleBorder(borderRadius: BorderRadius.all(Radius.circular(10)), side: BorderSide(color: Color(0xFFFFFFFF), style: BorderStyle.solid, width: 2))</span></span><br><span class=\"line\"><span class=\"comment\">// 圆形边色</span></span><br><span class=\"line\"><span class=\"comment\">//        shape: CircleBorder(side: BorderSide(color: Color(0xFFFFFF00), style: BorderStyle.solid, width: 2))</span></span><br><span class=\"line\"><span class=\"comment\">// 体育场（竖向椭圆）</span></span><br><span class=\"line\"><span class=\"comment\">//        shape: StadiumBorder(side: BorderSide(width: 2, style: BorderStyle.solid, color: Color(0xFF00FFFF))</span></span><br><span class=\"line\"><span class=\"comment\">// 角形（八边角）边色</span></span><br><span class=\"line\"><span class=\"comment\">//          shape: BeveledRectangleBorder(borderRadius: BorderRadius.all(Radius.circular(10)), side: BorderSide(color: Color(0xFFFFFFFF), style: BorderStyle.solid, width: 2))</span></span><br><span class=\"line\">),</span><br></pre></td></tr></table></figure>\n<p>5 FlutterLogoDecoration例子：<br>\n构造方法：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> FlutterLogoDecoration(&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.lightColor = <span class=\"keyword\">const</span> Color(<span class=\"number\">0xFF42A5F5</span>), <span class=\"comment\">// Colors.blue[400]</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.darkColor = <span class=\"keyword\">const</span> Color(<span class=\"number\">0xFF0D47A1</span>), <span class=\"comment\">// Colors.blue[900]</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.textColor = <span class=\"keyword\">const</span> Color(<span class=\"number\">0xFF616161</span>),</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.style = FlutterLogoStyle.markOnly,</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.margin = EdgeInsets.zero,</span><br><span class=\"line\">&#125;) </span><br><span class=\"line\"><span class=\"comment\">// 这个就不解析了，Flutter的logo，开发没啥用！</span></span><br></pre></td></tr></table></figure>\n<p>6 UnderlineTabindicator例子：<br>\n构造方法：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> UnderlineTabIndicator(&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.borderSide = <span class=\"keyword\">const</span> BorderSide(width: <span class=\"number\">2.0</span>, color: Colors.white),</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.insets = EdgeInsets.zero,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 这个比较简单就是加下划线，可以设置Insets值（控制下划高底，左右边距）</span></span><br><span class=\"line\"></span><br><span class=\"line\">decoration: <span class=\"keyword\">new</span> UnderlineTabIndicator(</span><br><span class=\"line\">  borderSide: BorderSide(width: <span class=\"number\">2.0</span>, color: Colors.white),</span><br><span class=\"line\">  insets: EdgeInsets.fromLTRB(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">10</span>)</span><br><span class=\"line\">),</span><br></pre></td></tr></table></figure>\n"},{"title":"Flutter-之Row/Column","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4171.jpg","date":"2019-05-27T07:25:44.000Z","subtitle":"Flutter-之Row/Column","_content":"\n\n---\n\n### 1.Row/Column\n\n> 这是横向排列（Row）和纵向排列（Column）的布局控件\n\n\n\n##### 1.1两者用法基本一样\n\n> 可以适应两种场景\n>\n> 一种是等分宽或高，使用Expanded自由控制每个子控件的比例\n\n```dart\nExpanded(\n        flex: 1, //比例\n        child: Container(\n          height: 100,\n          color: Colors.blueAccent,\n          child: Card(\n            color: Colors.brown,\n            child: Center(\n              child: Text('你好'),\n            ),\n          ),\n        ),\n      );\n```\n\n> 另一种是使用控件固定大小\n>\n> 例如，默认设置下，这三个控件在屏幕中央排成一排并且，内容以居中形式呈现\n\n```dart\nchildren: <Widget>[\n              Text('这是一个文字'),\n              Container(\n                width: 100,\n                height: 100,\n                color: Colors.blueGrey,\n                child: Icon(IconData(0xe900, fontFamily: \"CustomIcons\")),\n              ),\n              Card(\n                child: Image.asset(\"assets/logo.png\"),\n              )\n            ],\n```\n\n##### 1.2基本属性设置\n\n> **MainAxisAlignment**：主轴方向上的对齐方式，会对child的位置起作用，默认是start。\n>\n> 其中MainAxisAlignment枚举值：\n>\n> - center：将children放置在主轴的中心；\n> - end：将children放置在主轴的末尾；\n> - spaceAround：将主轴方向上的空白区域均分，使得children之间的空白区域相等，但是首尾child的空白区域为1/2；\n> - spaceBetween：将主轴方向上的空白区域均分，使得children之间的空白区域相等，首尾child都靠近首尾，没有间隙；\n> - spaceEvenly：将主轴方向上的空白区域均分，使得children之间的空白区域相等，包括首尾child；\n> - start：将children放置在主轴的起点；\n>\n> 其中spaceAround、spaceBetween以及spaceEvenly的区别，就是对待首尾child的方式。其距离首尾的距离分别是空白区域的1/2、0、1。\n\n> ***总结：MainAxisAlignment 可以控制子控件在row/column中的间隙及排列，例如等分屏幕宽度或者高度，然后将子控件之间的间距进行调整*** 注意使用SingleChildScrollView包裹row/column该属性失效，具体失效原因应该是冲突\n\n> **MainAxisSize**：在主轴方向占有空间的值，默认是max。\n>\n> MainAxisSize的取值有两种：\n>\n> - max：根据传入的布局约束条件，最大化主轴方向的可用空间；\n> - min：与max相反，是最小化主轴方向的可用空间；\n\n> CrossAxisAlignment枚举值有如下几种：\n>\n> - baseline：在交叉轴方向，使得children的baseline对齐；\n> - center：children在交叉轴上居中展示；\n> - end：children在交叉轴上末尾展示；\n> - start：children在交叉轴上起点处展示；\n> - stretch：让children填满交叉轴方向；\n\n>\n>\n>**VerticalDirection**：定义了children摆放顺序，默认是down。\n>\n>VerticalDirection枚举值有两种：\n>\n>- down：从top到bottom进行布局；\n>- up：从bottom到top进行布局。\n>\n>top对应Row以及Column的话，就是左边和顶部，bottom的话，则是右边和底部。\n\n\n\n##### 2.如果需要超出屏幕进行滑动，只需要使用SingleChildScrollView包裹Row/Column就可以\n\n```dart\nScaffold(\n      body: SafeArea(\n        child: SizedBox.expand(\n            child: SingleChildScrollView(\n          scrollDirection: Axis.horizontal,\n          child: Row(\n            mainAxisAlignment: MainAxisAlignment.start,\n            mainAxisSize: MainAxisSize.min,\n            crossAxisAlignment: CrossAxisAlignment.start,\n            verticalDirection: VerticalDirection.down,\n            children: <Widget>[\n              Text('这是一个文字'),\n              Container(\n                width: 100,\n                height: 100,\n                color: Colors.blueGrey,\n                child: Icon(IconData(0xe900, fontFamily: \"CustomIcons\")),\n              ),\n              Card(\n                child: Image.asset(\"assets/logo.png\"),\n              ),\n              Card(\n                child: Image.asset(\"assets/logo.png\"),\n              ),Card(\n                child: Image.asset(\"assets/logo.png\"),\n              ),Card(\n                child: Image.asset(\"assets/logo.png\"),\n              ),Card(\n                child: Image.asset(\"assets/logo.png\"),\n              ),Container(\n                width: 100,\n                height: 100,\n                color: Colors.blueGrey,\n                child: Icon(IconData(0xe900, fontFamily: \"CustomIcons\")),\n              ),\n            ],\n          ),\n        )),\n      ),\n```\n\n\n\n##### 2.1 SafeArea确定控件的安全区域\n\n> 刘海屏的顶部及底部安全区域均可单独设置\n\n```dart\nconst SafeArea({\n    Key key,\n    this.left = true,\n    this.top = true,\n    this.right = true,\n    this.bottom = true,\n    this.minimum = EdgeInsets.zero,\n    @required this.child,\n  }) : assert(left != null),\n       assert(top != null),\n       assert(right != null),\n       assert(bottom != null),\n       super(key: key);\n\n```\n\n##### 2.2 SingleChildScrollView 的包裹view的大小超出可以滑动，默认没有滚动条\n\n```dart\nconst SingleChildScrollView({\n    Key key,\n    this.scrollDirection = Axis.vertical,\n    this.reverse = false,\n    this.padding,\n    bool primary,\n    this.physics,\n    this.controller,\n    this.child,\n    this.dragStartBehavior = DragStartBehavior.start,\n  }) : assert(scrollDirection != null),\n       assert(dragStartBehavior != null),\n       assert(!(controller != null && primary == true),\n          'Primary ScrollViews obtain their ScrollController via inheritance from a PrimaryScrollController widget. '\n          'You cannot both set primary to true and pass an explicit controller.'\n       ),\n       primary = primary ?? controller == null && identical(scrollDirection, Axis.vertical),\n       super(key: key);\n\n```\n\n\n\n参考文章\n\n[Flutter 布局（七）- Row、Column详解](https://juejin.im/post/5b623d8c5188257f0b583c77)\n\n[Flutter之Row/Column用法详解](https://juejin.im/post/5c6a5892e51d4542331c5528)\n\n","source":"_posts/Flutter-之Row-Column.md","raw":"---\ntitle: Flutter-之Row/Column\ncategories: \n- Flutter\ntags: \n- Android\n- iOS\ncover: 'http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4171.jpg'\ndate: 2019-05-27 15:25:44\nsubtitle: Flutter-之Row/Column\n---\n\n\n---\n\n### 1.Row/Column\n\n> 这是横向排列（Row）和纵向排列（Column）的布局控件\n\n\n\n##### 1.1两者用法基本一样\n\n> 可以适应两种场景\n>\n> 一种是等分宽或高，使用Expanded自由控制每个子控件的比例\n\n```dart\nExpanded(\n        flex: 1, //比例\n        child: Container(\n          height: 100,\n          color: Colors.blueAccent,\n          child: Card(\n            color: Colors.brown,\n            child: Center(\n              child: Text('你好'),\n            ),\n          ),\n        ),\n      );\n```\n\n> 另一种是使用控件固定大小\n>\n> 例如，默认设置下，这三个控件在屏幕中央排成一排并且，内容以居中形式呈现\n\n```dart\nchildren: <Widget>[\n              Text('这是一个文字'),\n              Container(\n                width: 100,\n                height: 100,\n                color: Colors.blueGrey,\n                child: Icon(IconData(0xe900, fontFamily: \"CustomIcons\")),\n              ),\n              Card(\n                child: Image.asset(\"assets/logo.png\"),\n              )\n            ],\n```\n\n##### 1.2基本属性设置\n\n> **MainAxisAlignment**：主轴方向上的对齐方式，会对child的位置起作用，默认是start。\n>\n> 其中MainAxisAlignment枚举值：\n>\n> - center：将children放置在主轴的中心；\n> - end：将children放置在主轴的末尾；\n> - spaceAround：将主轴方向上的空白区域均分，使得children之间的空白区域相等，但是首尾child的空白区域为1/2；\n> - spaceBetween：将主轴方向上的空白区域均分，使得children之间的空白区域相等，首尾child都靠近首尾，没有间隙；\n> - spaceEvenly：将主轴方向上的空白区域均分，使得children之间的空白区域相等，包括首尾child；\n> - start：将children放置在主轴的起点；\n>\n> 其中spaceAround、spaceBetween以及spaceEvenly的区别，就是对待首尾child的方式。其距离首尾的距离分别是空白区域的1/2、0、1。\n\n> ***总结：MainAxisAlignment 可以控制子控件在row/column中的间隙及排列，例如等分屏幕宽度或者高度，然后将子控件之间的间距进行调整*** 注意使用SingleChildScrollView包裹row/column该属性失效，具体失效原因应该是冲突\n\n> **MainAxisSize**：在主轴方向占有空间的值，默认是max。\n>\n> MainAxisSize的取值有两种：\n>\n> - max：根据传入的布局约束条件，最大化主轴方向的可用空间；\n> - min：与max相反，是最小化主轴方向的可用空间；\n\n> CrossAxisAlignment枚举值有如下几种：\n>\n> - baseline：在交叉轴方向，使得children的baseline对齐；\n> - center：children在交叉轴上居中展示；\n> - end：children在交叉轴上末尾展示；\n> - start：children在交叉轴上起点处展示；\n> - stretch：让children填满交叉轴方向；\n\n>\n>\n>**VerticalDirection**：定义了children摆放顺序，默认是down。\n>\n>VerticalDirection枚举值有两种：\n>\n>- down：从top到bottom进行布局；\n>- up：从bottom到top进行布局。\n>\n>top对应Row以及Column的话，就是左边和顶部，bottom的话，则是右边和底部。\n\n\n\n##### 2.如果需要超出屏幕进行滑动，只需要使用SingleChildScrollView包裹Row/Column就可以\n\n```dart\nScaffold(\n      body: SafeArea(\n        child: SizedBox.expand(\n            child: SingleChildScrollView(\n          scrollDirection: Axis.horizontal,\n          child: Row(\n            mainAxisAlignment: MainAxisAlignment.start,\n            mainAxisSize: MainAxisSize.min,\n            crossAxisAlignment: CrossAxisAlignment.start,\n            verticalDirection: VerticalDirection.down,\n            children: <Widget>[\n              Text('这是一个文字'),\n              Container(\n                width: 100,\n                height: 100,\n                color: Colors.blueGrey,\n                child: Icon(IconData(0xe900, fontFamily: \"CustomIcons\")),\n              ),\n              Card(\n                child: Image.asset(\"assets/logo.png\"),\n              ),\n              Card(\n                child: Image.asset(\"assets/logo.png\"),\n              ),Card(\n                child: Image.asset(\"assets/logo.png\"),\n              ),Card(\n                child: Image.asset(\"assets/logo.png\"),\n              ),Card(\n                child: Image.asset(\"assets/logo.png\"),\n              ),Container(\n                width: 100,\n                height: 100,\n                color: Colors.blueGrey,\n                child: Icon(IconData(0xe900, fontFamily: \"CustomIcons\")),\n              ),\n            ],\n          ),\n        )),\n      ),\n```\n\n\n\n##### 2.1 SafeArea确定控件的安全区域\n\n> 刘海屏的顶部及底部安全区域均可单独设置\n\n```dart\nconst SafeArea({\n    Key key,\n    this.left = true,\n    this.top = true,\n    this.right = true,\n    this.bottom = true,\n    this.minimum = EdgeInsets.zero,\n    @required this.child,\n  }) : assert(left != null),\n       assert(top != null),\n       assert(right != null),\n       assert(bottom != null),\n       super(key: key);\n\n```\n\n##### 2.2 SingleChildScrollView 的包裹view的大小超出可以滑动，默认没有滚动条\n\n```dart\nconst SingleChildScrollView({\n    Key key,\n    this.scrollDirection = Axis.vertical,\n    this.reverse = false,\n    this.padding,\n    bool primary,\n    this.physics,\n    this.controller,\n    this.child,\n    this.dragStartBehavior = DragStartBehavior.start,\n  }) : assert(scrollDirection != null),\n       assert(dragStartBehavior != null),\n       assert(!(controller != null && primary == true),\n          'Primary ScrollViews obtain their ScrollController via inheritance from a PrimaryScrollController widget. '\n          'You cannot both set primary to true and pass an explicit controller.'\n       ),\n       primary = primary ?? controller == null && identical(scrollDirection, Axis.vertical),\n       super(key: key);\n\n```\n\n\n\n参考文章\n\n[Flutter 布局（七）- Row、Column详解](https://juejin.im/post/5b623d8c5188257f0b583c77)\n\n[Flutter之Row/Column用法详解](https://juejin.im/post/5c6a5892e51d4542331c5528)\n\n","slug":"Flutter-之Row-Column","published":1,"updated":"2019-05-27T07:55:05.070Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjw65m7g100063ivofsetvw5q","content":"<hr>\n<h3 id=\"1rowcolumn\"><a class=\"markdownIt-Anchor\" href=\"#1rowcolumn\"></a> 1.Row/Column</h3>\n<blockquote>\n<p>这是横向排列（Row）和纵向排列（Column）的布局控件</p>\n</blockquote>\n<h5 id=\"11两者用法基本一样\"><a class=\"markdownIt-Anchor\" href=\"#11两者用法基本一样\"></a> 1.1两者用法基本一样</h5>\n<blockquote>\n<p>可以适应两种场景</p>\n<p>一种是等分宽或高，使用Expanded自由控制每个子控件的比例</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Expanded(</span><br><span class=\"line\">        flex: <span class=\"number\">1</span>, <span class=\"comment\">//比例</span></span><br><span class=\"line\">        child: Container(</span><br><span class=\"line\">          height: <span class=\"number\">100</span>,</span><br><span class=\"line\">          color: Colors.blueAccent,</span><br><span class=\"line\">          child: Card(</span><br><span class=\"line\">            color: Colors.brown,</span><br><span class=\"line\">            child: Center(</span><br><span class=\"line\">              child: Text(<span class=\"string\">'你好'</span>),</span><br><span class=\"line\">            ),</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      );</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>另一种是使用控件固定大小</p>\n<p>例如，默认设置下，这三个控件在屏幕中央排成一排并且，内容以居中形式呈现</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">children: &lt;Widget&gt;[</span><br><span class=\"line\">              Text(<span class=\"string\">'这是一个文字'</span>),</span><br><span class=\"line\">              Container(</span><br><span class=\"line\">                width: <span class=\"number\">100</span>,</span><br><span class=\"line\">                height: <span class=\"number\">100</span>,</span><br><span class=\"line\">                color: Colors.blueGrey,</span><br><span class=\"line\">                child: Icon(IconData(<span class=\"number\">0xe900</span>, fontFamily: <span class=\"string\">\"CustomIcons\"</span>)),</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              Card(</span><br><span class=\"line\">                child: Image.asset(<span class=\"string\">\"assets/logo.png\"</span>),</span><br><span class=\"line\">              )</span><br><span class=\"line\">            ],</span><br></pre></td></tr></table></figure>\n<h5 id=\"12基本属性设置\"><a class=\"markdownIt-Anchor\" href=\"#12基本属性设置\"></a> 1.2基本属性设置</h5>\n<blockquote>\n<p><strong>MainAxisAlignment</strong>：主轴方向上的对齐方式，会对child的位置起作用，默认是start。</p>\n<p>其中MainAxisAlignment枚举值：</p>\n<ul>\n<li>center：将children放置在主轴的中心；</li>\n<li>end：将children放置在主轴的末尾；</li>\n<li>spaceAround：将主轴方向上的空白区域均分，使得children之间的空白区域相等，但是首尾child的空白区域为1/2；</li>\n<li>spaceBetween：将主轴方向上的空白区域均分，使得children之间的空白区域相等，首尾child都靠近首尾，没有间隙；</li>\n<li>spaceEvenly：将主轴方向上的空白区域均分，使得children之间的空白区域相等，包括首尾child；</li>\n<li>start：将children放置在主轴的起点；</li>\n</ul>\n<p>其中spaceAround、spaceBetween以及spaceEvenly的区别，就是对待首尾child的方式。其距离首尾的距离分别是空白区域的1/2、0、1。</p>\n</blockquote>\n<blockquote>\n<p><em><strong>总结：MainAxisAlignment 可以控制子控件在row/column中的间隙及排列，例如等分屏幕宽度或者高度，然后将子控件之间的间距进行调整</strong></em> 注意使用SingleChildScrollView包裹row/column该属性失效，具体失效原因应该是冲突</p>\n</blockquote>\n<blockquote>\n<p><strong>MainAxisSize</strong>：在主轴方向占有空间的值，默认是max。</p>\n<p>MainAxisSize的取值有两种：</p>\n<ul>\n<li>max：根据传入的布局约束条件，最大化主轴方向的可用空间；</li>\n<li>min：与max相反，是最小化主轴方向的可用空间；</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>CrossAxisAlignment枚举值有如下几种：</p>\n<ul>\n<li>baseline：在交叉轴方向，使得children的baseline对齐；</li>\n<li>center：children在交叉轴上居中展示；</li>\n<li>end：children在交叉轴上末尾展示；</li>\n<li>start：children在交叉轴上起点处展示；</li>\n<li>stretch：让children填满交叉轴方向；</li>\n</ul>\n</blockquote>\n<blockquote>\n<p><strong>VerticalDirection</strong>：定义了children摆放顺序，默认是down。</p>\n<p>VerticalDirection枚举值有两种：</p>\n<ul>\n<li>down：从top到bottom进行布局；</li>\n<li>up：从bottom到top进行布局。</li>\n</ul>\n<p>top对应Row以及Column的话，就是左边和顶部，bottom的话，则是右边和底部。</p>\n</blockquote>\n<h5 id=\"2如果需要超出屏幕进行滑动只需要使用singlechildscrollview包裹rowcolumn就可以\"><a class=\"markdownIt-Anchor\" href=\"#2如果需要超出屏幕进行滑动只需要使用singlechildscrollview包裹rowcolumn就可以\"></a> 2.如果需要超出屏幕进行滑动，只需要使用SingleChildScrollView包裹Row/Column就可以</h5>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Scaffold(</span><br><span class=\"line\">      body: SafeArea(</span><br><span class=\"line\">        child: SizedBox.expand(</span><br><span class=\"line\">            child: SingleChildScrollView(</span><br><span class=\"line\">          scrollDirection: Axis.horizontal,</span><br><span class=\"line\">          child: Row(</span><br><span class=\"line\">            mainAxisAlignment: MainAxisAlignment.start,</span><br><span class=\"line\">            mainAxisSize: MainAxisSize.min,</span><br><span class=\"line\">            crossAxisAlignment: CrossAxisAlignment.start,</span><br><span class=\"line\">            verticalDirection: VerticalDirection.down,</span><br><span class=\"line\">            children: &lt;Widget&gt;[</span><br><span class=\"line\">              Text(<span class=\"string\">'这是一个文字'</span>),</span><br><span class=\"line\">              Container(</span><br><span class=\"line\">                width: <span class=\"number\">100</span>,</span><br><span class=\"line\">                height: <span class=\"number\">100</span>,</span><br><span class=\"line\">                color: Colors.blueGrey,</span><br><span class=\"line\">                child: Icon(IconData(<span class=\"number\">0xe900</span>, fontFamily: <span class=\"string\">\"CustomIcons\"</span>)),</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              Card(</span><br><span class=\"line\">                child: Image.asset(<span class=\"string\">\"assets/logo.png\"</span>),</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              Card(</span><br><span class=\"line\">                child: Image.asset(<span class=\"string\">\"assets/logo.png\"</span>),</span><br><span class=\"line\">              ),Card(</span><br><span class=\"line\">                child: Image.asset(<span class=\"string\">\"assets/logo.png\"</span>),</span><br><span class=\"line\">              ),Card(</span><br><span class=\"line\">                child: Image.asset(<span class=\"string\">\"assets/logo.png\"</span>),</span><br><span class=\"line\">              ),Card(</span><br><span class=\"line\">                child: Image.asset(<span class=\"string\">\"assets/logo.png\"</span>),</span><br><span class=\"line\">              ),Container(</span><br><span class=\"line\">                width: <span class=\"number\">100</span>,</span><br><span class=\"line\">                height: <span class=\"number\">100</span>,</span><br><span class=\"line\">                color: Colors.blueGrey,</span><br><span class=\"line\">                child: Icon(IconData(<span class=\"number\">0xe900</span>, fontFamily: <span class=\"string\">\"CustomIcons\"</span>)),</span><br><span class=\"line\">              ),</span><br><span class=\"line\">            ],</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        )),</span><br><span class=\"line\">      ),</span><br></pre></td></tr></table></figure>\n<h5 id=\"21-safearea确定控件的安全区域\"><a class=\"markdownIt-Anchor\" href=\"#21-safearea确定控件的安全区域\"></a> 2.1 SafeArea确定控件的安全区域</h5>\n<blockquote>\n<p>刘海屏的顶部及底部安全区域均可单独设置</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> SafeArea(&#123;</span><br><span class=\"line\">    Key key,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.left = <span class=\"keyword\">true</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.top = <span class=\"keyword\">true</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.right = <span class=\"keyword\">true</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.bottom = <span class=\"keyword\">true</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.minimum = EdgeInsets.zero,</span><br><span class=\"line\">    <span class=\"meta\">@required</span> <span class=\"keyword\">this</span>.child,</span><br><span class=\"line\">  &#125;) : <span class=\"keyword\">assert</span>(left != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(top != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(right != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(bottom != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">super</span>(key: key);</span><br></pre></td></tr></table></figure>\n<h5 id=\"22-singlechildscrollview-的包裹view的大小超出可以滑动默认没有滚动条\"><a class=\"markdownIt-Anchor\" href=\"#22-singlechildscrollview-的包裹view的大小超出可以滑动默认没有滚动条\"></a> 2.2 SingleChildScrollView 的包裹view的大小超出可以滑动，默认没有滚动条</h5>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> SingleChildScrollView(&#123;</span><br><span class=\"line\">    Key key,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.scrollDirection = Axis.vertical,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.reverse = <span class=\"keyword\">false</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.padding,</span><br><span class=\"line\">    <span class=\"built_in\">bool</span> primary,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.physics,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.controller,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.child,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.dragStartBehavior = DragStartBehavior.start,</span><br><span class=\"line\">  &#125;) : <span class=\"keyword\">assert</span>(scrollDirection != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(dragStartBehavior != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(!(controller != <span class=\"keyword\">null</span> &amp;&amp; primary == <span class=\"keyword\">true</span>),</span><br><span class=\"line\">          <span class=\"string\">'Primary ScrollViews obtain their ScrollController via inheritance from a PrimaryScrollController widget. '</span></span><br><span class=\"line\">          <span class=\"string\">'You cannot both set primary to true and pass an explicit controller.'</span></span><br><span class=\"line\">       ),</span><br><span class=\"line\">       primary = primary ?? controller == <span class=\"keyword\">null</span> &amp;&amp; identical(scrollDirection, Axis.vertical),</span><br><span class=\"line\">       <span class=\"keyword\">super</span>(key: key);</span><br></pre></td></tr></table></figure>\n<p>参考文章</p>\n<p><a href=\"https://juejin.im/post/5b623d8c5188257f0b583c77\" target=\"_blank\" rel=\"noopener\">Flutter 布局（七）- Row、Column详解</a></p>\n<p><a href=\"https://juejin.im/post/5c6a5892e51d4542331c5528\" target=\"_blank\" rel=\"noopener\">Flutter之Row/Column用法详解</a></p>\n","site":{"data":{"links":[{"name":"Yaooort","describe":"大傻子","link":"http://www.yaooort.com","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4172.jpg"},{"name":"GitHub","describe":"直男网","link":"https://github.com/yaooort","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3829.jpg"}]}},"excerpt":"","more":"<hr>\n<h3 id=\"1rowcolumn\"><a class=\"markdownIt-Anchor\" href=\"#1rowcolumn\"></a> 1.Row/Column</h3>\n<blockquote>\n<p>这是横向排列（Row）和纵向排列（Column）的布局控件</p>\n</blockquote>\n<h5 id=\"11两者用法基本一样\"><a class=\"markdownIt-Anchor\" href=\"#11两者用法基本一样\"></a> 1.1两者用法基本一样</h5>\n<blockquote>\n<p>可以适应两种场景</p>\n<p>一种是等分宽或高，使用Expanded自由控制每个子控件的比例</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Expanded(</span><br><span class=\"line\">        flex: <span class=\"number\">1</span>, <span class=\"comment\">//比例</span></span><br><span class=\"line\">        child: Container(</span><br><span class=\"line\">          height: <span class=\"number\">100</span>,</span><br><span class=\"line\">          color: Colors.blueAccent,</span><br><span class=\"line\">          child: Card(</span><br><span class=\"line\">            color: Colors.brown,</span><br><span class=\"line\">            child: Center(</span><br><span class=\"line\">              child: Text(<span class=\"string\">'你好'</span>),</span><br><span class=\"line\">            ),</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      );</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>另一种是使用控件固定大小</p>\n<p>例如，默认设置下，这三个控件在屏幕中央排成一排并且，内容以居中形式呈现</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">children: &lt;Widget&gt;[</span><br><span class=\"line\">              Text(<span class=\"string\">'这是一个文字'</span>),</span><br><span class=\"line\">              Container(</span><br><span class=\"line\">                width: <span class=\"number\">100</span>,</span><br><span class=\"line\">                height: <span class=\"number\">100</span>,</span><br><span class=\"line\">                color: Colors.blueGrey,</span><br><span class=\"line\">                child: Icon(IconData(<span class=\"number\">0xe900</span>, fontFamily: <span class=\"string\">\"CustomIcons\"</span>)),</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              Card(</span><br><span class=\"line\">                child: Image.asset(<span class=\"string\">\"assets/logo.png\"</span>),</span><br><span class=\"line\">              )</span><br><span class=\"line\">            ],</span><br></pre></td></tr></table></figure>\n<h5 id=\"12基本属性设置\"><a class=\"markdownIt-Anchor\" href=\"#12基本属性设置\"></a> 1.2基本属性设置</h5>\n<blockquote>\n<p><strong>MainAxisAlignment</strong>：主轴方向上的对齐方式，会对child的位置起作用，默认是start。</p>\n<p>其中MainAxisAlignment枚举值：</p>\n<ul>\n<li>center：将children放置在主轴的中心；</li>\n<li>end：将children放置在主轴的末尾；</li>\n<li>spaceAround：将主轴方向上的空白区域均分，使得children之间的空白区域相等，但是首尾child的空白区域为1/2；</li>\n<li>spaceBetween：将主轴方向上的空白区域均分，使得children之间的空白区域相等，首尾child都靠近首尾，没有间隙；</li>\n<li>spaceEvenly：将主轴方向上的空白区域均分，使得children之间的空白区域相等，包括首尾child；</li>\n<li>start：将children放置在主轴的起点；</li>\n</ul>\n<p>其中spaceAround、spaceBetween以及spaceEvenly的区别，就是对待首尾child的方式。其距离首尾的距离分别是空白区域的1/2、0、1。</p>\n</blockquote>\n<blockquote>\n<p><em><strong>总结：MainAxisAlignment 可以控制子控件在row/column中的间隙及排列，例如等分屏幕宽度或者高度，然后将子控件之间的间距进行调整</strong></em> 注意使用SingleChildScrollView包裹row/column该属性失效，具体失效原因应该是冲突</p>\n</blockquote>\n<blockquote>\n<p><strong>MainAxisSize</strong>：在主轴方向占有空间的值，默认是max。</p>\n<p>MainAxisSize的取值有两种：</p>\n<ul>\n<li>max：根据传入的布局约束条件，最大化主轴方向的可用空间；</li>\n<li>min：与max相反，是最小化主轴方向的可用空间；</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>CrossAxisAlignment枚举值有如下几种：</p>\n<ul>\n<li>baseline：在交叉轴方向，使得children的baseline对齐；</li>\n<li>center：children在交叉轴上居中展示；</li>\n<li>end：children在交叉轴上末尾展示；</li>\n<li>start：children在交叉轴上起点处展示；</li>\n<li>stretch：让children填满交叉轴方向；</li>\n</ul>\n</blockquote>\n<blockquote>\n<p><strong>VerticalDirection</strong>：定义了children摆放顺序，默认是down。</p>\n<p>VerticalDirection枚举值有两种：</p>\n<ul>\n<li>down：从top到bottom进行布局；</li>\n<li>up：从bottom到top进行布局。</li>\n</ul>\n<p>top对应Row以及Column的话，就是左边和顶部，bottom的话，则是右边和底部。</p>\n</blockquote>\n<h5 id=\"2如果需要超出屏幕进行滑动只需要使用singlechildscrollview包裹rowcolumn就可以\"><a class=\"markdownIt-Anchor\" href=\"#2如果需要超出屏幕进行滑动只需要使用singlechildscrollview包裹rowcolumn就可以\"></a> 2.如果需要超出屏幕进行滑动，只需要使用SingleChildScrollView包裹Row/Column就可以</h5>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Scaffold(</span><br><span class=\"line\">      body: SafeArea(</span><br><span class=\"line\">        child: SizedBox.expand(</span><br><span class=\"line\">            child: SingleChildScrollView(</span><br><span class=\"line\">          scrollDirection: Axis.horizontal,</span><br><span class=\"line\">          child: Row(</span><br><span class=\"line\">            mainAxisAlignment: MainAxisAlignment.start,</span><br><span class=\"line\">            mainAxisSize: MainAxisSize.min,</span><br><span class=\"line\">            crossAxisAlignment: CrossAxisAlignment.start,</span><br><span class=\"line\">            verticalDirection: VerticalDirection.down,</span><br><span class=\"line\">            children: &lt;Widget&gt;[</span><br><span class=\"line\">              Text(<span class=\"string\">'这是一个文字'</span>),</span><br><span class=\"line\">              Container(</span><br><span class=\"line\">                width: <span class=\"number\">100</span>,</span><br><span class=\"line\">                height: <span class=\"number\">100</span>,</span><br><span class=\"line\">                color: Colors.blueGrey,</span><br><span class=\"line\">                child: Icon(IconData(<span class=\"number\">0xe900</span>, fontFamily: <span class=\"string\">\"CustomIcons\"</span>)),</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              Card(</span><br><span class=\"line\">                child: Image.asset(<span class=\"string\">\"assets/logo.png\"</span>),</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              Card(</span><br><span class=\"line\">                child: Image.asset(<span class=\"string\">\"assets/logo.png\"</span>),</span><br><span class=\"line\">              ),Card(</span><br><span class=\"line\">                child: Image.asset(<span class=\"string\">\"assets/logo.png\"</span>),</span><br><span class=\"line\">              ),Card(</span><br><span class=\"line\">                child: Image.asset(<span class=\"string\">\"assets/logo.png\"</span>),</span><br><span class=\"line\">              ),Card(</span><br><span class=\"line\">                child: Image.asset(<span class=\"string\">\"assets/logo.png\"</span>),</span><br><span class=\"line\">              ),Container(</span><br><span class=\"line\">                width: <span class=\"number\">100</span>,</span><br><span class=\"line\">                height: <span class=\"number\">100</span>,</span><br><span class=\"line\">                color: Colors.blueGrey,</span><br><span class=\"line\">                child: Icon(IconData(<span class=\"number\">0xe900</span>, fontFamily: <span class=\"string\">\"CustomIcons\"</span>)),</span><br><span class=\"line\">              ),</span><br><span class=\"line\">            ],</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        )),</span><br><span class=\"line\">      ),</span><br></pre></td></tr></table></figure>\n<h5 id=\"21-safearea确定控件的安全区域\"><a class=\"markdownIt-Anchor\" href=\"#21-safearea确定控件的安全区域\"></a> 2.1 SafeArea确定控件的安全区域</h5>\n<blockquote>\n<p>刘海屏的顶部及底部安全区域均可单独设置</p>\n</blockquote>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> SafeArea(&#123;</span><br><span class=\"line\">    Key key,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.left = <span class=\"keyword\">true</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.top = <span class=\"keyword\">true</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.right = <span class=\"keyword\">true</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.bottom = <span class=\"keyword\">true</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.minimum = EdgeInsets.zero,</span><br><span class=\"line\">    <span class=\"meta\">@required</span> <span class=\"keyword\">this</span>.child,</span><br><span class=\"line\">  &#125;) : <span class=\"keyword\">assert</span>(left != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(top != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(right != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(bottom != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">super</span>(key: key);</span><br></pre></td></tr></table></figure>\n<h5 id=\"22-singlechildscrollview-的包裹view的大小超出可以滑动默认没有滚动条\"><a class=\"markdownIt-Anchor\" href=\"#22-singlechildscrollview-的包裹view的大小超出可以滑动默认没有滚动条\"></a> 2.2 SingleChildScrollView 的包裹view的大小超出可以滑动，默认没有滚动条</h5>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> SingleChildScrollView(&#123;</span><br><span class=\"line\">    Key key,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.scrollDirection = Axis.vertical,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.reverse = <span class=\"keyword\">false</span>,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.padding,</span><br><span class=\"line\">    <span class=\"built_in\">bool</span> primary,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.physics,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.controller,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.child,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.dragStartBehavior = DragStartBehavior.start,</span><br><span class=\"line\">  &#125;) : <span class=\"keyword\">assert</span>(scrollDirection != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(dragStartBehavior != <span class=\"keyword\">null</span>),</span><br><span class=\"line\">       <span class=\"keyword\">assert</span>(!(controller != <span class=\"keyword\">null</span> &amp;&amp; primary == <span class=\"keyword\">true</span>),</span><br><span class=\"line\">          <span class=\"string\">'Primary ScrollViews obtain their ScrollController via inheritance from a PrimaryScrollController widget. '</span></span><br><span class=\"line\">          <span class=\"string\">'You cannot both set primary to true and pass an explicit controller.'</span></span><br><span class=\"line\">       ),</span><br><span class=\"line\">       primary = primary ?? controller == <span class=\"keyword\">null</span> &amp;&amp; identical(scrollDirection, Axis.vertical),</span><br><span class=\"line\">       <span class=\"keyword\">super</span>(key: key);</span><br></pre></td></tr></table></figure>\n<p>参考文章</p>\n<p><a href=\"https://juejin.im/post/5b623d8c5188257f0b583c77\" target=\"_blank\" rel=\"noopener\">Flutter 布局（七）- Row、Column详解</a></p>\n<p><a href=\"https://juejin.im/post/5c6a5892e51d4542331c5528\" target=\"_blank\" rel=\"noopener\">Flutter之Row/Column用法详解</a></p>\n"},{"title":"Node.js安装的标准姿势","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3213.jpg","date":"2019-05-19T15:01:59.000Z","subtitle":"Node.js安装标准姿势","_content":"### 1.卸载node.js\n- 为了对后续安装不造成影响，先卸载本地已经安装好的版本，如果是新的设备不需要，直接安装即可。推荐使用nvm管理多个版本的node.js。\n\nmac 完全卸载node.js [使用这位老兄的办法，好使。](https://blog.csdn.net/shiquanqq/article/details/78032943)\n\n##### homebrew安装的\n* 直接一条命令 \n```console\nbrew uninstall node\n```\n##### 官网下载pkg安装包的\n* 一条命令 \n```console\nsudo rm -rf /usr/local/{bin/{node,npm},lib/node_modules/npm,lib/node,share/man/*/node.*}\n```\n##### 其他\n* 编写脚本uninstallnode.sh\n\n```sh\n#!/bin/bash\nlsbom -f -l -s -pf /var/db/receipts/org.nodejs.pkg.bom \\\n| while read i; do\n  sudo rm /usr/local/${i}\ndone\nsudo rm -rf /usr/local/lib/node \\\n     /usr/local/lib/node_modules \\\n     /var/db/receipts/org.nodejs.*\n```\n\n* 修改文件权限 chmod 777 uninstallNodejs.sh \n在命令行执行\n\n### 2.安装[nvm](https://github.com/creationix/nvm)\n\n* 推荐使用这种方式\n```\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n```\n* 或者\n```\nwget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n```\n* 安装完成，测试nvm 是否安装成功\n```nvm\nnvm --version\n```\n- 如果正常显示版本号，则说明安装成功，直接略过下面\n* 这种安装方式会自动添加环境变量，但是最好先检查一下环境变量是否配置正确\n```\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\n```\n* 重新加载系统环境变量\n```\nsource ~/.bash_profile\n```\n\n##### 3.使用nvm管理node\n* 查看远程node版本\n```nvm\nnvm ls-remote \n```\n* 安装远程线上node，nvm install 版本号\n```nvm\nnvm install 8.11.3\n```\n* 查看本地已安装版本，可以看到当前使用的版本是v8.10.0\n```\nyaodeMacBook-Pro:/ yao$ nvm ls\n->      v8.10.0\n        v8.11.3\ndefault -> 8.11.3 (-> v8.11.3)\nnode -> stable (-> v8.11.3) (default)\nstable -> 8.11 (-> v8.11.3) (default)\niojs -> N/A (default)\nlts/* -> lts/carbon (-> v8.11.3)\nlts/argon -> v4.9.1 (-> N/A)\nlts/boron -> v6.14.3 (-> N/A)\nlts/carbon -> v8.11.3\n\n```\n* 使用一个版本\n```\nnvm use v8.11.3\n```\n##### 4.使用\n* 直接命令行交互式\n```\nyaodeMacBook-Pro:/ yao$ node\n> var a = 12\nundefined\n> var b = 22\nundefined\n> a+b\n34\n> \n```\n* 使用node xxx.js\n```\nyaodeMacBook-Pro:node yao$ node serverhello.js \nServer running at http://127.0.0.1:8888/\n```\n* 安装nodemon 自动监听js改动，自动重新执行\n```\nnpm install nodemon\n```\n##### 5.模块的使用\n* Node.js的模块系统采用CommonJS规范\n> CommonJS标准规定 \n> *  一个单独的文件就是一个模块\n> * 模块内将需要对外暴露的变量放到exports对象里，可以是任意对象，函数，数组等，未放到exports对象里的都是私有的。\n> * 使用require方法加载模块，即读取模块文件获得exports对象\n> * 默认每个.js文件都有一个module，可以使用module.exports暴露对外的模块方法\n> * 使用require引入模块时，模块路径后面的js文件建议不加后缀（.js）\n```javascript\n//默认每个js文件模块为一个空对象\nexports = module.exports = {}\n\n//可以使用,这种方式给扩展添加对外的属性\nexports.xxx = xxx;\n\n//也可以使用这种方式直接赋值对象,更换原有的对象\nmodule.exports = {xxx:xxx}\n\n//不要使用，直接改变该对象地址，会导致module.exports对象不会有任何改变。\nexports = {}\n```\n\n##### 6.全局变量和模块属性\n###### 全局变量\n* __dirname :当前模块所在目录路径\n* __filename : 当前模块的文件名称\n* console\n ###### 模块属性\n* module.id : 模块的唯一标识\n* module.loaded : 标记模块是否加载\n* module.parent :  引用模块的模块\n\n###### 模块分类\n* 核心模块：node.js内置的模块\n* 文件模块：自己写的模块和第三方提供的模块\n","source":"_posts/Node-js安装.md","raw":"---\ntitle: Node.js安装的标准姿势\ncover: 'http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3213.jpg'\ndate: 2019-05-19 23:01:59\nsubtitle: Node.js安装标准姿势\ncategories:\n- js\ntags:\n- js\n---\n### 1.卸载node.js\n- 为了对后续安装不造成影响，先卸载本地已经安装好的版本，如果是新的设备不需要，直接安装即可。推荐使用nvm管理多个版本的node.js。\n\nmac 完全卸载node.js [使用这位老兄的办法，好使。](https://blog.csdn.net/shiquanqq/article/details/78032943)\n\n##### homebrew安装的\n* 直接一条命令 \n```console\nbrew uninstall node\n```\n##### 官网下载pkg安装包的\n* 一条命令 \n```console\nsudo rm -rf /usr/local/{bin/{node,npm},lib/node_modules/npm,lib/node,share/man/*/node.*}\n```\n##### 其他\n* 编写脚本uninstallnode.sh\n\n```sh\n#!/bin/bash\nlsbom -f -l -s -pf /var/db/receipts/org.nodejs.pkg.bom \\\n| while read i; do\n  sudo rm /usr/local/${i}\ndone\nsudo rm -rf /usr/local/lib/node \\\n     /usr/local/lib/node_modules \\\n     /var/db/receipts/org.nodejs.*\n```\n\n* 修改文件权限 chmod 777 uninstallNodejs.sh \n在命令行执行\n\n### 2.安装[nvm](https://github.com/creationix/nvm)\n\n* 推荐使用这种方式\n```\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n```\n* 或者\n```\nwget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n```\n* 安装完成，测试nvm 是否安装成功\n```nvm\nnvm --version\n```\n- 如果正常显示版本号，则说明安装成功，直接略过下面\n* 这种安装方式会自动添加环境变量，但是最好先检查一下环境变量是否配置正确\n```\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\n```\n* 重新加载系统环境变量\n```\nsource ~/.bash_profile\n```\n\n##### 3.使用nvm管理node\n* 查看远程node版本\n```nvm\nnvm ls-remote \n```\n* 安装远程线上node，nvm install 版本号\n```nvm\nnvm install 8.11.3\n```\n* 查看本地已安装版本，可以看到当前使用的版本是v8.10.0\n```\nyaodeMacBook-Pro:/ yao$ nvm ls\n->      v8.10.0\n        v8.11.3\ndefault -> 8.11.3 (-> v8.11.3)\nnode -> stable (-> v8.11.3) (default)\nstable -> 8.11 (-> v8.11.3) (default)\niojs -> N/A (default)\nlts/* -> lts/carbon (-> v8.11.3)\nlts/argon -> v4.9.1 (-> N/A)\nlts/boron -> v6.14.3 (-> N/A)\nlts/carbon -> v8.11.3\n\n```\n* 使用一个版本\n```\nnvm use v8.11.3\n```\n##### 4.使用\n* 直接命令行交互式\n```\nyaodeMacBook-Pro:/ yao$ node\n> var a = 12\nundefined\n> var b = 22\nundefined\n> a+b\n34\n> \n```\n* 使用node xxx.js\n```\nyaodeMacBook-Pro:node yao$ node serverhello.js \nServer running at http://127.0.0.1:8888/\n```\n* 安装nodemon 自动监听js改动，自动重新执行\n```\nnpm install nodemon\n```\n##### 5.模块的使用\n* Node.js的模块系统采用CommonJS规范\n> CommonJS标准规定 \n> *  一个单独的文件就是一个模块\n> * 模块内将需要对外暴露的变量放到exports对象里，可以是任意对象，函数，数组等，未放到exports对象里的都是私有的。\n> * 使用require方法加载模块，即读取模块文件获得exports对象\n> * 默认每个.js文件都有一个module，可以使用module.exports暴露对外的模块方法\n> * 使用require引入模块时，模块路径后面的js文件建议不加后缀（.js）\n```javascript\n//默认每个js文件模块为一个空对象\nexports = module.exports = {}\n\n//可以使用,这种方式给扩展添加对外的属性\nexports.xxx = xxx;\n\n//也可以使用这种方式直接赋值对象,更换原有的对象\nmodule.exports = {xxx:xxx}\n\n//不要使用，直接改变该对象地址，会导致module.exports对象不会有任何改变。\nexports = {}\n```\n\n##### 6.全局变量和模块属性\n###### 全局变量\n* __dirname :当前模块所在目录路径\n* __filename : 当前模块的文件名称\n* console\n ###### 模块属性\n* module.id : 模块的唯一标识\n* module.loaded : 标记模块是否加载\n* module.parent :  引用模块的模块\n\n###### 模块分类\n* 核心模块：node.js内置的模块\n* 文件模块：自己写的模块和第三方提供的模块\n","slug":"Node-js安装","published":1,"updated":"2019-05-20T01:36:09.598Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjw65m7g200093ivo1gpdds7p","content":"<h3 id=\"1卸载nodejs\"><a class=\"markdownIt-Anchor\" href=\"#1卸载nodejs\"></a> 1.卸载node.js</h3>\n<ul>\n<li>为了对后续安装不造成影响，先卸载本地已经安装好的版本，如果是新的设备不需要，直接安装即可。推荐使用nvm管理多个版本的node.js。</li>\n</ul>\n<p>mac 完全卸载node.js <a href=\"https://blog.csdn.net/shiquanqq/article/details/78032943\" target=\"_blank\" rel=\"noopener\">使用这位老兄的办法，好使。</a></p>\n<h5 id=\"homebrew安装的\"><a class=\"markdownIt-Anchor\" href=\"#homebrew安装的\"></a> homebrew安装的</h5>\n<ul>\n<li>直接一条命令</li>\n</ul>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew uninstall node</span><br></pre></td></tr></table></figure>\n<h5 id=\"官网下载pkg安装包的\"><a class=\"markdownIt-Anchor\" href=\"#官网下载pkg安装包的\"></a> 官网下载pkg安装包的</h5>\n<ul>\n<li>一条命令</li>\n</ul>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rm -rf /usr/local/&#123;bin/&#123;node,npm&#125;,lib/node_modules/npm,lib/node,share/man/*/node.*&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"其他\"><a class=\"markdownIt-Anchor\" href=\"#其他\"></a> 其他</h5>\n<ul>\n<li><a href=\"http://xn--uninstallnode-oj1vp42wu72dxfh.sh\" target=\"_blank\" rel=\"noopener\">编写脚本uninstallnode.sh</a></li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">lsbom -f -l -s -pf /var/db/receipts/org.nodejs.pkg.bom \\</span><br><span class=\"line\">| <span class=\"keyword\">while</span> <span class=\"built_in\">read</span> i; <span class=\"keyword\">do</span></span><br><span class=\"line\">  sudo rm /usr/<span class=\"built_in\">local</span>/<span class=\"variable\">$&#123;i&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">sudo rm -rf /usr/<span class=\"built_in\">local</span>/lib/node \\</span><br><span class=\"line\">     /usr/<span class=\"built_in\">local</span>/lib/node_modules \\</span><br><span class=\"line\">     /var/db/receipts/org.nodejs.*</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改文件权限 chmod 777 <a href=\"http://uninstallNodejs.sh\" target=\"_blank\" rel=\"noopener\">uninstallNodejs.sh</a><br>\n在命令行执行</li>\n</ul>\n<h3 id=\"2安装nvm\"><a class=\"markdownIt-Anchor\" href=\"#2安装nvm\"></a> 2.安装<a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">nvm</a></h3>\n<ul>\n<li>推荐使用这种方式</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br></pre></td></tr></table></figure>\n<ul>\n<li>或者</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装完成，测试nvm 是否安装成功</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm --version</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果正常显示版本号，则说明安装成功，直接略过下面</li>\n</ul>\n<ul>\n<li>这种安装方式会自动添加环境变量，但是最好先检查一下环境变量是否配置正确</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export NVM_DIR=&quot;$HOME/.nvm&quot;</span><br><span class=\"line\">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm</span><br><span class=\"line\">[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion</span><br></pre></td></tr></table></figure>\n<ul>\n<li>重新加载系统环境变量</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<h5 id=\"3使用nvm管理node\"><a class=\"markdownIt-Anchor\" href=\"#3使用nvm管理node\"></a> 3.使用nvm管理node</h5>\n<ul>\n<li>查看远程node版本</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm ls-remote</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装远程线上node，nvm install 版本号</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install 8.11.3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看本地已安装版本，可以看到当前使用的版本是v8.10.0</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yaodeMacBook-Pro:/ yao$ nvm ls</span><br><span class=\"line\">-&gt;      v8.10.0</span><br><span class=\"line\">        v8.11.3</span><br><span class=\"line\">default -&gt; 8.11.3 (-&gt; v8.11.3)</span><br><span class=\"line\">node -&gt; stable (-&gt; v8.11.3) (default)</span><br><span class=\"line\">stable -&gt; 8.11 (-&gt; v8.11.3) (default)</span><br><span class=\"line\">iojs -&gt; N/A (default)</span><br><span class=\"line\">lts/* -&gt; lts/carbon (-&gt; v8.11.3)</span><br><span class=\"line\">lts/argon -&gt; v4.9.1 (-&gt; N/A)</span><br><span class=\"line\">lts/boron -&gt; v6.14.3 (-&gt; N/A)</span><br><span class=\"line\">lts/carbon -&gt; v8.11.3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用一个版本</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm use v8.11.3</span><br></pre></td></tr></table></figure>\n<h5 id=\"4使用\"><a class=\"markdownIt-Anchor\" href=\"#4使用\"></a> 4.使用</h5>\n<ul>\n<li>直接命令行交互式</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yaodeMacBook-Pro:/ yao$ node</span><br><span class=\"line\">&gt; var a = 12</span><br><span class=\"line\">undefined</span><br><span class=\"line\">&gt; var b = 22</span><br><span class=\"line\">undefined</span><br><span class=\"line\">&gt; a+b</span><br><span class=\"line\">34</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用node xxx.js</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yaodeMacBook-Pro:node yao$ node serverhello.js </span><br><span class=\"line\">Server running at http://127.0.0.1:8888/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装nodemon 自动监听js改动，自动重新执行</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install nodemon</span><br></pre></td></tr></table></figure>\n<h5 id=\"5模块的使用\"><a class=\"markdownIt-Anchor\" href=\"#5模块的使用\"></a> 5.模块的使用</h5>\n<ul>\n<li>Node.js的模块系统采用CommonJS规范</li>\n</ul>\n<blockquote>\n<p>CommonJS标准规定</p>\n<ul>\n<li>一个单独的文件就是一个模块</li>\n<li>模块内将需要对外暴露的变量放到exports对象里，可以是任意对象，函数，数组等，未放到exports对象里的都是私有的。</li>\n<li>使用require方法加载模块，即读取模块文件获得exports对象</li>\n<li>默认每个.js文件都有一个module，可以使用module.exports暴露对外的模块方法</li>\n<li>使用require引入模块时，模块路径后面的js文件建议不加后缀（.js）</li>\n</ul>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//默认每个js文件模块为一个空对象</span></span><br><span class=\"line\">exports = <span class=\"built_in\">module</span>.exports = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//可以使用,这种方式给扩展添加对外的属性</span></span><br><span class=\"line\">exports.xxx = xxx;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//也可以使用这种方式直接赋值对象,更换原有的对象</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;<span class=\"attr\">xxx</span>:xxx&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//不要使用，直接改变该对象地址，会导致module.exports对象不会有任何改变。</span></span><br><span class=\"line\">exports = &#123;&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"6全局变量和模块属性\"><a class=\"markdownIt-Anchor\" href=\"#6全局变量和模块属性\"></a> 6.全局变量和模块属性</h5>\n<h6 id=\"全局变量\"><a class=\"markdownIt-Anchor\" href=\"#全局变量\"></a> 全局变量</h6>\n<ul>\n<li>__dirname :当前模块所在目录路径</li>\n<li>__filename : 当前模块的文件名称</li>\n<li>console</li>\n</ul>\n<h6 id=\"模块属性\"><a class=\"markdownIt-Anchor\" href=\"#模块属性\"></a> 模块属性</h6>\n<ul>\n<li><a href=\"http://module.id\" target=\"_blank\" rel=\"noopener\">module.id</a> : 模块的唯一标识</li>\n<li>module.loaded : 标记模块是否加载</li>\n<li>module.parent :  引用模块的模块</li>\n</ul>\n<h6 id=\"模块分类\"><a class=\"markdownIt-Anchor\" href=\"#模块分类\"></a> 模块分类</h6>\n<ul>\n<li>核心模块：node.js内置的模块</li>\n<li>文件模块：自己写的模块和第三方提供的模块</li>\n</ul>\n","site":{"data":{"links":[{"name":"Yaooort","describe":"大傻子","link":"http://www.yaooort.com","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4172.jpg"},{"name":"GitHub","describe":"直男网","link":"https://github.com/yaooort","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3829.jpg"}]}},"excerpt":"","more":"<h3 id=\"1卸载nodejs\"><a class=\"markdownIt-Anchor\" href=\"#1卸载nodejs\"></a> 1.卸载node.js</h3>\n<ul>\n<li>为了对后续安装不造成影响，先卸载本地已经安装好的版本，如果是新的设备不需要，直接安装即可。推荐使用nvm管理多个版本的node.js。</li>\n</ul>\n<p>mac 完全卸载node.js <a href=\"https://blog.csdn.net/shiquanqq/article/details/78032943\" target=\"_blank\" rel=\"noopener\">使用这位老兄的办法，好使。</a></p>\n<h5 id=\"homebrew安装的\"><a class=\"markdownIt-Anchor\" href=\"#homebrew安装的\"></a> homebrew安装的</h5>\n<ul>\n<li>直接一条命令</li>\n</ul>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew uninstall node</span><br></pre></td></tr></table></figure>\n<h5 id=\"官网下载pkg安装包的\"><a class=\"markdownIt-Anchor\" href=\"#官网下载pkg安装包的\"></a> 官网下载pkg安装包的</h5>\n<ul>\n<li>一条命令</li>\n</ul>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rm -rf /usr/local/&#123;bin/&#123;node,npm&#125;,lib/node_modules/npm,lib/node,share/man/*/node.*&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"其他\"><a class=\"markdownIt-Anchor\" href=\"#其他\"></a> 其他</h5>\n<ul>\n<li><a href=\"http://xn--uninstallnode-oj1vp42wu72dxfh.sh\" target=\"_blank\" rel=\"noopener\">编写脚本uninstallnode.sh</a></li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">lsbom -f -l -s -pf /var/db/receipts/org.nodejs.pkg.bom \\</span><br><span class=\"line\">| <span class=\"keyword\">while</span> <span class=\"built_in\">read</span> i; <span class=\"keyword\">do</span></span><br><span class=\"line\">  sudo rm /usr/<span class=\"built_in\">local</span>/<span class=\"variable\">$&#123;i&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">sudo rm -rf /usr/<span class=\"built_in\">local</span>/lib/node \\</span><br><span class=\"line\">     /usr/<span class=\"built_in\">local</span>/lib/node_modules \\</span><br><span class=\"line\">     /var/db/receipts/org.nodejs.*</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改文件权限 chmod 777 <a href=\"http://uninstallNodejs.sh\" target=\"_blank\" rel=\"noopener\">uninstallNodejs.sh</a><br>\n在命令行执行</li>\n</ul>\n<h3 id=\"2安装nvm\"><a class=\"markdownIt-Anchor\" href=\"#2安装nvm\"></a> 2.安装<a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">nvm</a></h3>\n<ul>\n<li>推荐使用这种方式</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br></pre></td></tr></table></figure>\n<ul>\n<li>或者</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装完成，测试nvm 是否安装成功</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm --version</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果正常显示版本号，则说明安装成功，直接略过下面</li>\n</ul>\n<ul>\n<li>这种安装方式会自动添加环境变量，但是最好先检查一下环境变量是否配置正确</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export NVM_DIR=&quot;$HOME/.nvm&quot;</span><br><span class=\"line\">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm</span><br><span class=\"line\">[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion</span><br></pre></td></tr></table></figure>\n<ul>\n<li>重新加载系统环境变量</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<h5 id=\"3使用nvm管理node\"><a class=\"markdownIt-Anchor\" href=\"#3使用nvm管理node\"></a> 3.使用nvm管理node</h5>\n<ul>\n<li>查看远程node版本</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm ls-remote</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装远程线上node，nvm install 版本号</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install 8.11.3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看本地已安装版本，可以看到当前使用的版本是v8.10.0</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yaodeMacBook-Pro:/ yao$ nvm ls</span><br><span class=\"line\">-&gt;      v8.10.0</span><br><span class=\"line\">        v8.11.3</span><br><span class=\"line\">default -&gt; 8.11.3 (-&gt; v8.11.3)</span><br><span class=\"line\">node -&gt; stable (-&gt; v8.11.3) (default)</span><br><span class=\"line\">stable -&gt; 8.11 (-&gt; v8.11.3) (default)</span><br><span class=\"line\">iojs -&gt; N/A (default)</span><br><span class=\"line\">lts/* -&gt; lts/carbon (-&gt; v8.11.3)</span><br><span class=\"line\">lts/argon -&gt; v4.9.1 (-&gt; N/A)</span><br><span class=\"line\">lts/boron -&gt; v6.14.3 (-&gt; N/A)</span><br><span class=\"line\">lts/carbon -&gt; v8.11.3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用一个版本</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm use v8.11.3</span><br></pre></td></tr></table></figure>\n<h5 id=\"4使用\"><a class=\"markdownIt-Anchor\" href=\"#4使用\"></a> 4.使用</h5>\n<ul>\n<li>直接命令行交互式</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yaodeMacBook-Pro:/ yao$ node</span><br><span class=\"line\">&gt; var a = 12</span><br><span class=\"line\">undefined</span><br><span class=\"line\">&gt; var b = 22</span><br><span class=\"line\">undefined</span><br><span class=\"line\">&gt; a+b</span><br><span class=\"line\">34</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用node xxx.js</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yaodeMacBook-Pro:node yao$ node serverhello.js </span><br><span class=\"line\">Server running at http://127.0.0.1:8888/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装nodemon 自动监听js改动，自动重新执行</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install nodemon</span><br></pre></td></tr></table></figure>\n<h5 id=\"5模块的使用\"><a class=\"markdownIt-Anchor\" href=\"#5模块的使用\"></a> 5.模块的使用</h5>\n<ul>\n<li>Node.js的模块系统采用CommonJS规范</li>\n</ul>\n<blockquote>\n<p>CommonJS标准规定</p>\n<ul>\n<li>一个单独的文件就是一个模块</li>\n<li>模块内将需要对外暴露的变量放到exports对象里，可以是任意对象，函数，数组等，未放到exports对象里的都是私有的。</li>\n<li>使用require方法加载模块，即读取模块文件获得exports对象</li>\n<li>默认每个.js文件都有一个module，可以使用module.exports暴露对外的模块方法</li>\n<li>使用require引入模块时，模块路径后面的js文件建议不加后缀（.js）</li>\n</ul>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//默认每个js文件模块为一个空对象</span></span><br><span class=\"line\">exports = <span class=\"built_in\">module</span>.exports = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//可以使用,这种方式给扩展添加对外的属性</span></span><br><span class=\"line\">exports.xxx = xxx;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//也可以使用这种方式直接赋值对象,更换原有的对象</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;<span class=\"attr\">xxx</span>:xxx&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//不要使用，直接改变该对象地址，会导致module.exports对象不会有任何改变。</span></span><br><span class=\"line\">exports = &#123;&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"6全局变量和模块属性\"><a class=\"markdownIt-Anchor\" href=\"#6全局变量和模块属性\"></a> 6.全局变量和模块属性</h5>\n<h6 id=\"全局变量\"><a class=\"markdownIt-Anchor\" href=\"#全局变量\"></a> 全局变量</h6>\n<ul>\n<li>__dirname :当前模块所在目录路径</li>\n<li>__filename : 当前模块的文件名称</li>\n<li>console</li>\n</ul>\n<h6 id=\"模块属性\"><a class=\"markdownIt-Anchor\" href=\"#模块属性\"></a> 模块属性</h6>\n<ul>\n<li><a href=\"http://module.id\" target=\"_blank\" rel=\"noopener\">module.id</a> : 模块的唯一标识</li>\n<li>module.loaded : 标记模块是否加载</li>\n<li>module.parent :  引用模块的模块</li>\n</ul>\n<h6 id=\"模块分类\"><a class=\"markdownIt-Anchor\" href=\"#模块分类\"></a> 模块分类</h6>\n<ul>\n<li>核心模块：node.js内置的模块</li>\n<li>文件模块：自己写的模块和第三方提供的模块</li>\n</ul>\n"},{"title":"mac电脑开启文件共享服务","date":"2019-05-19T14:38:10.000Z","subtitle":"MacOS 快速分享本地文件到局域网","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3235.jpg","_content":"使用mac自带的Python 2.7命令快速共享本地文件.操作步骤\n- 1.打开电脑终端\n  ![屏幕快照 2019-03-21 上午11.45.20.png](http://prr6elh1d.sabkt.gdipper.com/static/images/mac电脑文件共享/2975942-6460fb75db8ad0d6.png)\n\n- 2.进入你想共享的文件夹目录\n![屏幕快照 2019-03-21 上午11.47.52.png](http://prr6elh1d.sabkt.gdipper.com/static/images/mac电脑文件共享/2975942-785157544aa83b4f.png)\n```\n 输入 cd /Users/用户/Desktop/ 进入桌面文件夹，共享桌面文件 \n```\n\n- 3.输入命令\n```\npython -m SimpleHTTPServer\n```\n![屏幕快照 2019-03-21 下午12.30.27.png](http://prr6elh1d.sabkt.gdipper.com/static/images/mac电脑文件共享/2975942-eb5707509e383e29.png)\n> 表示在本机的8000端口号开启服务\n\n- 4.在同一个局域网下的任意浏览器输入ip+端口进行访问\n> 本机IP 按住option 点击wifi图标即可查看IP地址\n![屏幕快照 2019-03-21 下午12.34.24.png](http://prr6elh1d.sabkt.gdipper.com/static/images/mac电脑文件共享/2975942-c090d92f3af55725.png)\n\n- 5.在另外一台电脑打开该地址\n```\nhttp://10.88.10.141:8000\n```\n","source":"_posts/mac电脑开启文件共享服务.md","raw":"---\ntitle: mac电脑开启文件共享服务\ndate: 2019-05-19 22:38:10\nsubtitle: MacOS 快速分享本地文件到局域网\ncategories:\n- 劈柴\ntags:\n- Python2.7\n- macOS\ncover: http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3235.jpg\n---\n使用mac自带的Python 2.7命令快速共享本地文件.操作步骤\n- 1.打开电脑终端\n  ![屏幕快照 2019-03-21 上午11.45.20.png](http://prr6elh1d.sabkt.gdipper.com/static/images/mac电脑文件共享/2975942-6460fb75db8ad0d6.png)\n\n- 2.进入你想共享的文件夹目录\n![屏幕快照 2019-03-21 上午11.47.52.png](http://prr6elh1d.sabkt.gdipper.com/static/images/mac电脑文件共享/2975942-785157544aa83b4f.png)\n```\n 输入 cd /Users/用户/Desktop/ 进入桌面文件夹，共享桌面文件 \n```\n\n- 3.输入命令\n```\npython -m SimpleHTTPServer\n```\n![屏幕快照 2019-03-21 下午12.30.27.png](http://prr6elh1d.sabkt.gdipper.com/static/images/mac电脑文件共享/2975942-eb5707509e383e29.png)\n> 表示在本机的8000端口号开启服务\n\n- 4.在同一个局域网下的任意浏览器输入ip+端口进行访问\n> 本机IP 按住option 点击wifi图标即可查看IP地址\n![屏幕快照 2019-03-21 下午12.34.24.png](http://prr6elh1d.sabkt.gdipper.com/static/images/mac电脑文件共享/2975942-c090d92f3af55725.png)\n\n- 5.在另外一台电脑打开该地址\n```\nhttp://10.88.10.141:8000\n```\n","slug":"mac电脑开启文件共享服务","published":1,"updated":"2019-05-20T01:36:09.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjw65m7g3000a3ivo00w81wi6","content":"<p>使用mac自带的Python 2.7命令快速共享本地文件.操作步骤</p>\n<ul>\n<li>\n<p>1.打开电脑终端<br>\n<img src=\"http://prr6elh1d.sabkt.gdipper.com/static/images/mac%E7%94%B5%E8%84%91%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/2975942-6460fb75db8ad0d6.png\" alt=\"屏幕快照 2019-03-21 上午11.45.20.png\"></p>\n</li>\n<li>\n<p>2.进入你想共享的文件夹目录<br>\n<img src=\"http://prr6elh1d.sabkt.gdipper.com/static/images/mac%E7%94%B5%E8%84%91%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/2975942-785157544aa83b4f.png\" alt=\"屏幕快照 2019-03-21 上午11.47.52.png\"></p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入 cd /Users/用户/Desktop/ 进入桌面文件夹，共享桌面文件</span><br></pre></td></tr></table></figure>\n<ul>\n<li>3.输入命令</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m SimpleHTTPServer</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://prr6elh1d.sabkt.gdipper.com/static/images/mac%E7%94%B5%E8%84%91%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/2975942-eb5707509e383e29.png\" alt=\"屏幕快照 2019-03-21 下午12.30.27.png\"></p>\n<blockquote>\n<p>表示在本机的8000端口号开启服务</p>\n</blockquote>\n<ul>\n<li>4.在同一个局域网下的任意浏览器输入ip+端口进行访问</li>\n</ul>\n<blockquote>\n<p>本机IP 按住option 点击wifi图标即可查看IP地址<br>\n<img src=\"http://prr6elh1d.sabkt.gdipper.com/static/images/mac%E7%94%B5%E8%84%91%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/2975942-c090d92f3af55725.png\" alt=\"屏幕快照 2019-03-21 下午12.34.24.png\"></p>\n</blockquote>\n<ul>\n<li>5.在另外一台电脑打开该地址</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://10.88.10.141:8000</span><br></pre></td></tr></table></figure>\n","site":{"data":{"links":[{"name":"Yaooort","describe":"大傻子","link":"http://www.yaooort.com","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4172.jpg"},{"name":"GitHub","describe":"直男网","link":"https://github.com/yaooort","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3829.jpg"}]}},"excerpt":"","more":"<p>使用mac自带的Python 2.7命令快速共享本地文件.操作步骤</p>\n<ul>\n<li>\n<p>1.打开电脑终端<br>\n<img src=\"http://prr6elh1d.sabkt.gdipper.com/static/images/mac%E7%94%B5%E8%84%91%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/2975942-6460fb75db8ad0d6.png\" alt=\"屏幕快照 2019-03-21 上午11.45.20.png\"></p>\n</li>\n<li>\n<p>2.进入你想共享的文件夹目录<br>\n<img src=\"http://prr6elh1d.sabkt.gdipper.com/static/images/mac%E7%94%B5%E8%84%91%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/2975942-785157544aa83b4f.png\" alt=\"屏幕快照 2019-03-21 上午11.47.52.png\"></p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入 cd /Users/用户/Desktop/ 进入桌面文件夹，共享桌面文件</span><br></pre></td></tr></table></figure>\n<ul>\n<li>3.输入命令</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m SimpleHTTPServer</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://prr6elh1d.sabkt.gdipper.com/static/images/mac%E7%94%B5%E8%84%91%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/2975942-eb5707509e383e29.png\" alt=\"屏幕快照 2019-03-21 下午12.30.27.png\"></p>\n<blockquote>\n<p>表示在本机的8000端口号开启服务</p>\n</blockquote>\n<ul>\n<li>4.在同一个局域网下的任意浏览器输入ip+端口进行访问</li>\n</ul>\n<blockquote>\n<p>本机IP 按住option 点击wifi图标即可查看IP地址<br>\n<img src=\"http://prr6elh1d.sabkt.gdipper.com/static/images/mac%E7%94%B5%E8%84%91%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/2975942-c090d92f3af55725.png\" alt=\"屏幕快照 2019-03-21 下午12.34.24.png\"></p>\n</blockquote>\n<ul>\n<li>5.在另外一台电脑打开该地址</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://10.88.10.141:8000</span><br></pre></td></tr></table></figure>\n"},{"title":"缓存腾讯视频文件","date":"2019-05-19T12:44:48.000Z","subtitle":"macOS 获取腾讯视频缓存视频文件并转为mp4","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3156.jpg","_content":"> 事件起因\n\n##### 最近没网，前两天去朋友那缓存了几部电影，1080p高清视频下载速度刷刷的。拿回来播放的时候就在想，我把视频缓存到电脑了，那我能找到吗？视频是以mp4文件缓存的吗？我能不能拿到腾讯VIP会员的缓存视频？能不能保存高清mp4？\n\n> 事件经过\n\n##### 拿着这些疑问，我就扒拉我电脑(macOS 腾讯视频mac版1.8.2)里面的缓存文件，发现视频缓存在👇这个目录\n\n```\n/Users/用户/Library/Containers/com.tencent.tenvideo/Data/Library/Application Support/Download\n```\n\n##### 打开里面的video文件夹一看，我滴个神。\n\n> ad\t\t\tg00208rhr0m.320092.hls\tl0019sl1ggv.321003.hls\n> c00226jie90.321003.hls\tj0022vz0heu.321003.hls\n\n##### 看文件夹结尾的名字hls \\(^o^)/~ ，再打开翻到最里面，发现里面的文件是.ts 而且可以正常播放，注意可以正常播放的哦，😏，（我还以为腾讯会自定义视频头信息，自定义播放器。看到这就放心了）直接使用ffmpeg合并为一个视频就行。\n\n##### 再然后搬出Python大宝剑，开始劈柴。\n\n```python\nimport os,sys\nimport logging\nfrom ffmpy import FFmpeg\nfrom natsort import natsorted\n\nlogger = logging.getLogger(__name__)\n\n\ndef hls_dir_to_mp4(in_path_dir, out_path_file):\n    \"\"\"\n    将hls文件夹里面分片的视频转化为单个MP4文件\n    ffmpeg -i \"concat:file001.ts|file002.ts|file003.ts|file004.ts......n.ts\" -acodec copy -vcodec copy -absf aac_adtstoasc out.mp4\n    :param in_path:\n    :param out_path:\n    :return:\n    \"\"\"\n    # 获取\"concat:file001.ts|file002.ts|file003.ts|file004.ts......n.ts\"列表参数\n    out_files = []\n    for dir in natsorted([val for val in os.listdir(in_path_dir) if val.startswith(in_path_dir.split(\"/\")[-1])]):\n        dirPath = os.path.join(in_path_dir, dir)\n        print(dirPath)\n\n        for root, dirs, files in os.walk(dirPath):\n            files = natsorted(files)\n            for file in files:\n                if os.path.splitext(file)[1] == '.ts':\n                    # 拼接成完整路径\n                    filePath = os.path.join(root, file)\n                    out_files.append(filePath)\n\n    cmd = '|'.join(out_files)\n    print(out_files)\n    cmd = 'concat:' + \"\\\"\" + cmd + \"\\\"\"\n    cmd = 'ffmpeg -i ' + cmd + ' -acodec copy -vcodec copy -absf aac_adtstoasc ' + out_path_file\n    print(execCmd(cmd))\n\n\ndef videoCurv():\n    \"\"\"\n    转换视频格式\n    :return:\n    \"\"\"\n    # 转换input.mp4 为 output.avi\n    FFmpeg(inputs={in_path: None}, outputs={out_path: None}).run()\n\n\ndef execCmd(cmd):\n    \"\"\"\n    执行计算命令时间\n    \"\"\"\n    r = os.popen(cmd)\n    text = r.read().strip()\n    r.close()\n    return text\n\n\nif __name__ == '__main__':\n    print(sys.argv)\n    if len(sys.argv) == 3:\n        hls_dir_to_mp4(sys.argv[1], sys.argv[2])\n    elif len(sys.argv) > 1:\n        hls_dir_to_mp4(sys.argv[1], 'tmp.mp4')\n    else:\n        print('请输入视频所在目录path')\n    # hls_dir_to_mp4(\n    #     in_path_dir='/Users/bunny/Library/Containers/com.tencent.tenvideo/Data/Library/Application Support/Download/video/g00208rhr0m.320092.hls',\n    #     out_path_file='1.mp4');\n\n```\n\n\n\n### 打完收工\n\n代码已上传[GitHub](https://github.com/yaooort/videoCreate)\n\n### 使用方法\n\n> **1.安装ffmpeg**\n>\n> - ``` brew install ffmpeg```\n\n> **2.[安装Python3](https://www.python.org/downloads/)**\n>\n> **3.安装pipenv**\n>\n> - ```pip install pipenv```\n>\n> **4.创建虚拟环境并安装依赖包**\n>\n> - ``` pipenv shell```\n>\n> **5.进入虚拟环境并执行脚本**\n>\n> - ```pipenv shell```\n>\n> - ```python tencent_video.py /Users/用户/Library/Containers/com.tencent.tenvideo/Data/Library/Application Support/Download/video/g00208rhr0m.320092.hls out.mp4```\n>\n\n\n\n完结\n","source":"_posts/缓存腾讯视频文件.md","raw":"---\ntitle: 缓存腾讯视频文件\ndate: 2019-05-19 20:44:48\nsubtitle: macOS 获取腾讯视频缓存视频文件并转为mp4\ncategories:\n- 劈柴\ntags:\n- Python\n- ffmpeg\n- macOS\ncover: http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3156.jpg\n---\n> 事件起因\n\n##### 最近没网，前两天去朋友那缓存了几部电影，1080p高清视频下载速度刷刷的。拿回来播放的时候就在想，我把视频缓存到电脑了，那我能找到吗？视频是以mp4文件缓存的吗？我能不能拿到腾讯VIP会员的缓存视频？能不能保存高清mp4？\n\n> 事件经过\n\n##### 拿着这些疑问，我就扒拉我电脑(macOS 腾讯视频mac版1.8.2)里面的缓存文件，发现视频缓存在👇这个目录\n\n```\n/Users/用户/Library/Containers/com.tencent.tenvideo/Data/Library/Application Support/Download\n```\n\n##### 打开里面的video文件夹一看，我滴个神。\n\n> ad\t\t\tg00208rhr0m.320092.hls\tl0019sl1ggv.321003.hls\n> c00226jie90.321003.hls\tj0022vz0heu.321003.hls\n\n##### 看文件夹结尾的名字hls \\(^o^)/~ ，再打开翻到最里面，发现里面的文件是.ts 而且可以正常播放，注意可以正常播放的哦，😏，（我还以为腾讯会自定义视频头信息，自定义播放器。看到这就放心了）直接使用ffmpeg合并为一个视频就行。\n\n##### 再然后搬出Python大宝剑，开始劈柴。\n\n```python\nimport os,sys\nimport logging\nfrom ffmpy import FFmpeg\nfrom natsort import natsorted\n\nlogger = logging.getLogger(__name__)\n\n\ndef hls_dir_to_mp4(in_path_dir, out_path_file):\n    \"\"\"\n    将hls文件夹里面分片的视频转化为单个MP4文件\n    ffmpeg -i \"concat:file001.ts|file002.ts|file003.ts|file004.ts......n.ts\" -acodec copy -vcodec copy -absf aac_adtstoasc out.mp4\n    :param in_path:\n    :param out_path:\n    :return:\n    \"\"\"\n    # 获取\"concat:file001.ts|file002.ts|file003.ts|file004.ts......n.ts\"列表参数\n    out_files = []\n    for dir in natsorted([val for val in os.listdir(in_path_dir) if val.startswith(in_path_dir.split(\"/\")[-1])]):\n        dirPath = os.path.join(in_path_dir, dir)\n        print(dirPath)\n\n        for root, dirs, files in os.walk(dirPath):\n            files = natsorted(files)\n            for file in files:\n                if os.path.splitext(file)[1] == '.ts':\n                    # 拼接成完整路径\n                    filePath = os.path.join(root, file)\n                    out_files.append(filePath)\n\n    cmd = '|'.join(out_files)\n    print(out_files)\n    cmd = 'concat:' + \"\\\"\" + cmd + \"\\\"\"\n    cmd = 'ffmpeg -i ' + cmd + ' -acodec copy -vcodec copy -absf aac_adtstoasc ' + out_path_file\n    print(execCmd(cmd))\n\n\ndef videoCurv():\n    \"\"\"\n    转换视频格式\n    :return:\n    \"\"\"\n    # 转换input.mp4 为 output.avi\n    FFmpeg(inputs={in_path: None}, outputs={out_path: None}).run()\n\n\ndef execCmd(cmd):\n    \"\"\"\n    执行计算命令时间\n    \"\"\"\n    r = os.popen(cmd)\n    text = r.read().strip()\n    r.close()\n    return text\n\n\nif __name__ == '__main__':\n    print(sys.argv)\n    if len(sys.argv) == 3:\n        hls_dir_to_mp4(sys.argv[1], sys.argv[2])\n    elif len(sys.argv) > 1:\n        hls_dir_to_mp4(sys.argv[1], 'tmp.mp4')\n    else:\n        print('请输入视频所在目录path')\n    # hls_dir_to_mp4(\n    #     in_path_dir='/Users/bunny/Library/Containers/com.tencent.tenvideo/Data/Library/Application Support/Download/video/g00208rhr0m.320092.hls',\n    #     out_path_file='1.mp4');\n\n```\n\n\n\n### 打完收工\n\n代码已上传[GitHub](https://github.com/yaooort/videoCreate)\n\n### 使用方法\n\n> **1.安装ffmpeg**\n>\n> - ``` brew install ffmpeg```\n\n> **2.[安装Python3](https://www.python.org/downloads/)**\n>\n> **3.安装pipenv**\n>\n> - ```pip install pipenv```\n>\n> **4.创建虚拟环境并安装依赖包**\n>\n> - ``` pipenv shell```\n>\n> **5.进入虚拟环境并执行脚本**\n>\n> - ```pipenv shell```\n>\n> - ```python tencent_video.py /Users/用户/Library/Containers/com.tencent.tenvideo/Data/Library/Application Support/Download/video/g00208rhr0m.320092.hls out.mp4```\n>\n\n\n\n完结\n","slug":"缓存腾讯视频文件","published":1,"updated":"2019-05-20T01:36:09.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjw65m7gk001g3ivo13vyi6nh","content":"<blockquote>\n<p>事件起因</p>\n</blockquote>\n<h5 id=\"最近没网前两天去朋友那缓存了几部电影1080p高清视频下载速度刷刷的-拿回来播放的时候就在想我把视频缓存到电脑了那我能找到吗视频是以mp4文件缓存的吗我能不能拿到腾讯vip会员的缓存视频能不能保存高清mp4\"><a class=\"markdownIt-Anchor\" href=\"#最近没网前两天去朋友那缓存了几部电影1080p高清视频下载速度刷刷的-拿回来播放的时候就在想我把视频缓存到电脑了那我能找到吗视频是以mp4文件缓存的吗我能不能拿到腾讯vip会员的缓存视频能不能保存高清mp4\"></a> 最近没网，前两天去朋友那缓存了几部电影，1080p高清视频下载速度刷刷的。拿回来播放的时候就在想，我把视频缓存到电脑了，那我能找到吗？视频是以mp4文件缓存的吗？我能不能拿到腾讯VIP会员的缓存视频？能不能保存高清mp4？</h5>\n<blockquote>\n<p>事件经过</p>\n</blockquote>\n<h5 id=\"拿着这些疑问我就扒拉我电脑macos-腾讯视频mac版182里面的缓存文件发现视频缓存在这个目录\"><a class=\"markdownIt-Anchor\" href=\"#拿着这些疑问我就扒拉我电脑macos-腾讯视频mac版182里面的缓存文件发现视频缓存在这个目录\"></a> 拿着这些疑问，我就扒拉我电脑(macOS 腾讯视频mac版1.8.2)里面的缓存文件，发现视频缓存在👇这个目录</h5>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/Users/用户/Library/Containers/com.tencent.tenvideo/Data/Library/Application Support/Download</span><br></pre></td></tr></table></figure>\n<h5 id=\"打开里面的video文件夹一看我滴个神\"><a class=\"markdownIt-Anchor\" href=\"#打开里面的video文件夹一看我滴个神\"></a> 打开里面的video文件夹一看，我滴个神。</h5>\n<blockquote>\n<p>ad\t\t\tg00208rhr0m.320092.hls\tl0019sl1ggv.321003.hls<br>\nc00226jie90.321003.hls\tj0022vz0heu.321003.hls</p>\n</blockquote>\n<h5 id=\"看文件夹结尾的名字hls-o~-再打开翻到最里面发现里面的文件是ts-而且可以正常播放注意可以正常播放的哦我还以为腾讯会自定义视频头信息自定义播放器-看到这就放心了直接使用ffmpeg合并为一个视频就行\"><a class=\"markdownIt-Anchor\" href=\"#看文件夹结尾的名字hls-o~-再打开翻到最里面发现里面的文件是ts-而且可以正常播放注意可以正常播放的哦我还以为腾讯会自定义视频头信息自定义播放器-看到这就放心了直接使用ffmpeg合并为一个视频就行\"></a> 看文件夹结尾的名字hls (<sup>o</sup>)/~ ，再打开翻到最里面，发现里面的文件是.ts 而且可以正常播放，注意可以正常播放的哦，😏，（我还以为腾讯会自定义视频头信息，自定义播放器。看到这就放心了）直接使用ffmpeg合并为一个视频就行。</h5>\n<h5 id=\"再然后搬出python大宝剑开始劈柴\"><a class=\"markdownIt-Anchor\" href=\"#再然后搬出python大宝剑开始劈柴\"></a> 再然后搬出Python大宝剑，开始劈柴。</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os,sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> logging</span><br><span class=\"line\"><span class=\"keyword\">from</span> ffmpy <span class=\"keyword\">import</span> FFmpeg</span><br><span class=\"line\"><span class=\"keyword\">from</span> natsort <span class=\"keyword\">import</span> natsorted</span><br><span class=\"line\"></span><br><span class=\"line\">logger = logging.getLogger(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hls_dir_to_mp4</span><span class=\"params\">(in_path_dir, out_path_file)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    将hls文件夹里面分片的视频转化为单个MP4文件</span></span><br><span class=\"line\"><span class=\"string\">    ffmpeg -i \"concat:file001.ts|file002.ts|file003.ts|file004.ts......n.ts\" -acodec copy -vcodec copy -absf aac_adtstoasc out.mp4</span></span><br><span class=\"line\"><span class=\"string\">    :param in_path:</span></span><br><span class=\"line\"><span class=\"string\">    :param out_path:</span></span><br><span class=\"line\"><span class=\"string\">    :return:</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 获取\"concat:file001.ts|file002.ts|file003.ts|file004.ts......n.ts\"列表参数</span></span><br><span class=\"line\">    out_files = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> dir <span class=\"keyword\">in</span> natsorted([val <span class=\"keyword\">for</span> val <span class=\"keyword\">in</span> os.listdir(in_path_dir) <span class=\"keyword\">if</span> val.startswith(in_path_dir.split(<span class=\"string\">\"/\"</span>)[<span class=\"number\">-1</span>])]):</span><br><span class=\"line\">        dirPath = os.path.join(in_path_dir, dir)</span><br><span class=\"line\">        print(dirPath)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> root, dirs, files <span class=\"keyword\">in</span> os.walk(dirPath):</span><br><span class=\"line\">            files = natsorted(files)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> files:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> os.path.splitext(file)[<span class=\"number\">1</span>] == <span class=\"string\">'.ts'</span>:</span><br><span class=\"line\">                    <span class=\"comment\"># 拼接成完整路径</span></span><br><span class=\"line\">                    filePath = os.path.join(root, file)</span><br><span class=\"line\">                    out_files.append(filePath)</span><br><span class=\"line\"></span><br><span class=\"line\">    cmd = <span class=\"string\">'|'</span>.join(out_files)</span><br><span class=\"line\">    print(out_files)</span><br><span class=\"line\">    cmd = <span class=\"string\">'concat:'</span> + <span class=\"string\">\"\\\"\"</span> + cmd + <span class=\"string\">\"\\\"\"</span></span><br><span class=\"line\">    cmd = <span class=\"string\">'ffmpeg -i '</span> + cmd + <span class=\"string\">' -acodec copy -vcodec copy -absf aac_adtstoasc '</span> + out_path_file</span><br><span class=\"line\">    print(execCmd(cmd))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">videoCurv</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    转换视频格式</span></span><br><span class=\"line\"><span class=\"string\">    :return:</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 转换input.mp4 为 output.avi</span></span><br><span class=\"line\">    FFmpeg(inputs=&#123;in_path: <span class=\"literal\">None</span>&#125;, outputs=&#123;out_path: <span class=\"literal\">None</span>&#125;).run()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">execCmd</span><span class=\"params\">(cmd)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    执行计算命令时间</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    r = os.popen(cmd)</span><br><span class=\"line\">    text = r.read().strip()</span><br><span class=\"line\">    r.close()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> text</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    print(sys.argv)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> len(sys.argv) == <span class=\"number\">3</span>:</span><br><span class=\"line\">        hls_dir_to_mp4(sys.argv[<span class=\"number\">1</span>], sys.argv[<span class=\"number\">2</span>])</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> len(sys.argv) &gt; <span class=\"number\">1</span>:</span><br><span class=\"line\">        hls_dir_to_mp4(sys.argv[<span class=\"number\">1</span>], <span class=\"string\">'tmp.mp4'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(<span class=\"string\">'请输入视频所在目录path'</span>)</span><br><span class=\"line\">    <span class=\"comment\"># hls_dir_to_mp4(</span></span><br><span class=\"line\">    <span class=\"comment\">#     in_path_dir='/Users/bunny/Library/Containers/com.tencent.tenvideo/Data/Library/Application Support/Download/video/g00208rhr0m.320092.hls',</span></span><br><span class=\"line\">    <span class=\"comment\">#     out_path_file='1.mp4');</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"打完收工\"><a class=\"markdownIt-Anchor\" href=\"#打完收工\"></a> 打完收工</h3>\n<p>代码已上传<a href=\"https://github.com/yaooort/videoCreate\" target=\"_blank\" rel=\"noopener\">GitHub</a></p>\n<h3 id=\"使用方法\"><a class=\"markdownIt-Anchor\" href=\"#使用方法\"></a> 使用方法</h3>\n<blockquote>\n<p><strong>1.安装ffmpeg</strong></p>\n<ul>\n<li>\n<figure class=\"highlight plain\"><figcaption><span>install ffmpeg```</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&gt; **2.[安装Python3](https://www.python.org/downloads/)**</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; **3.安装pipenv**</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; - ```pip install pipenv</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p><strong>4.创建虚拟环境并安装依赖包</strong></p>\n<ul>\n<li>\n<figure class=\"highlight plain\"><figcaption><span>shell```</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; **5.进入虚拟环境并执行脚本**</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; - ```pipenv shell</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li><code>python tencent_video.py /Users/用户/Library/Containers/com.tencent.tenvideo/Data/Library/Application Support/Download/video/g00208rhr0m.320092.hls out.mp4</code></li>\n</ul>\n</blockquote>\n<p>完结</p>\n","site":{"data":{"links":[{"name":"Yaooort","describe":"大傻子","link":"http://www.yaooort.com","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4172.jpg"},{"name":"GitHub","describe":"直男网","link":"https://github.com/yaooort","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3829.jpg"}]}},"excerpt":"","more":"<blockquote>\n<p>事件起因</p>\n</blockquote>\n<h5 id=\"最近没网前两天去朋友那缓存了几部电影1080p高清视频下载速度刷刷的-拿回来播放的时候就在想我把视频缓存到电脑了那我能找到吗视频是以mp4文件缓存的吗我能不能拿到腾讯vip会员的缓存视频能不能保存高清mp4\"><a class=\"markdownIt-Anchor\" href=\"#最近没网前两天去朋友那缓存了几部电影1080p高清视频下载速度刷刷的-拿回来播放的时候就在想我把视频缓存到电脑了那我能找到吗视频是以mp4文件缓存的吗我能不能拿到腾讯vip会员的缓存视频能不能保存高清mp4\"></a> 最近没网，前两天去朋友那缓存了几部电影，1080p高清视频下载速度刷刷的。拿回来播放的时候就在想，我把视频缓存到电脑了，那我能找到吗？视频是以mp4文件缓存的吗？我能不能拿到腾讯VIP会员的缓存视频？能不能保存高清mp4？</h5>\n<blockquote>\n<p>事件经过</p>\n</blockquote>\n<h5 id=\"拿着这些疑问我就扒拉我电脑macos-腾讯视频mac版182里面的缓存文件发现视频缓存在这个目录\"><a class=\"markdownIt-Anchor\" href=\"#拿着这些疑问我就扒拉我电脑macos-腾讯视频mac版182里面的缓存文件发现视频缓存在这个目录\"></a> 拿着这些疑问，我就扒拉我电脑(macOS 腾讯视频mac版1.8.2)里面的缓存文件，发现视频缓存在👇这个目录</h5>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/Users/用户/Library/Containers/com.tencent.tenvideo/Data/Library/Application Support/Download</span><br></pre></td></tr></table></figure>\n<h5 id=\"打开里面的video文件夹一看我滴个神\"><a class=\"markdownIt-Anchor\" href=\"#打开里面的video文件夹一看我滴个神\"></a> 打开里面的video文件夹一看，我滴个神。</h5>\n<blockquote>\n<p>ad\t\t\tg00208rhr0m.320092.hls\tl0019sl1ggv.321003.hls<br>\nc00226jie90.321003.hls\tj0022vz0heu.321003.hls</p>\n</blockquote>\n<h5 id=\"看文件夹结尾的名字hls-o~-再打开翻到最里面发现里面的文件是ts-而且可以正常播放注意可以正常播放的哦我还以为腾讯会自定义视频头信息自定义播放器-看到这就放心了直接使用ffmpeg合并为一个视频就行\"><a class=\"markdownIt-Anchor\" href=\"#看文件夹结尾的名字hls-o~-再打开翻到最里面发现里面的文件是ts-而且可以正常播放注意可以正常播放的哦我还以为腾讯会自定义视频头信息自定义播放器-看到这就放心了直接使用ffmpeg合并为一个视频就行\"></a> 看文件夹结尾的名字hls (<sup>o</sup>)/~ ，再打开翻到最里面，发现里面的文件是.ts 而且可以正常播放，注意可以正常播放的哦，😏，（我还以为腾讯会自定义视频头信息，自定义播放器。看到这就放心了）直接使用ffmpeg合并为一个视频就行。</h5>\n<h5 id=\"再然后搬出python大宝剑开始劈柴\"><a class=\"markdownIt-Anchor\" href=\"#再然后搬出python大宝剑开始劈柴\"></a> 再然后搬出Python大宝剑，开始劈柴。</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os,sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> logging</span><br><span class=\"line\"><span class=\"keyword\">from</span> ffmpy <span class=\"keyword\">import</span> FFmpeg</span><br><span class=\"line\"><span class=\"keyword\">from</span> natsort <span class=\"keyword\">import</span> natsorted</span><br><span class=\"line\"></span><br><span class=\"line\">logger = logging.getLogger(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hls_dir_to_mp4</span><span class=\"params\">(in_path_dir, out_path_file)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    将hls文件夹里面分片的视频转化为单个MP4文件</span></span><br><span class=\"line\"><span class=\"string\">    ffmpeg -i \"concat:file001.ts|file002.ts|file003.ts|file004.ts......n.ts\" -acodec copy -vcodec copy -absf aac_adtstoasc out.mp4</span></span><br><span class=\"line\"><span class=\"string\">    :param in_path:</span></span><br><span class=\"line\"><span class=\"string\">    :param out_path:</span></span><br><span class=\"line\"><span class=\"string\">    :return:</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 获取\"concat:file001.ts|file002.ts|file003.ts|file004.ts......n.ts\"列表参数</span></span><br><span class=\"line\">    out_files = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> dir <span class=\"keyword\">in</span> natsorted([val <span class=\"keyword\">for</span> val <span class=\"keyword\">in</span> os.listdir(in_path_dir) <span class=\"keyword\">if</span> val.startswith(in_path_dir.split(<span class=\"string\">\"/\"</span>)[<span class=\"number\">-1</span>])]):</span><br><span class=\"line\">        dirPath = os.path.join(in_path_dir, dir)</span><br><span class=\"line\">        print(dirPath)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> root, dirs, files <span class=\"keyword\">in</span> os.walk(dirPath):</span><br><span class=\"line\">            files = natsorted(files)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> files:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> os.path.splitext(file)[<span class=\"number\">1</span>] == <span class=\"string\">'.ts'</span>:</span><br><span class=\"line\">                    <span class=\"comment\"># 拼接成完整路径</span></span><br><span class=\"line\">                    filePath = os.path.join(root, file)</span><br><span class=\"line\">                    out_files.append(filePath)</span><br><span class=\"line\"></span><br><span class=\"line\">    cmd = <span class=\"string\">'|'</span>.join(out_files)</span><br><span class=\"line\">    print(out_files)</span><br><span class=\"line\">    cmd = <span class=\"string\">'concat:'</span> + <span class=\"string\">\"\\\"\"</span> + cmd + <span class=\"string\">\"\\\"\"</span></span><br><span class=\"line\">    cmd = <span class=\"string\">'ffmpeg -i '</span> + cmd + <span class=\"string\">' -acodec copy -vcodec copy -absf aac_adtstoasc '</span> + out_path_file</span><br><span class=\"line\">    print(execCmd(cmd))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">videoCurv</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    转换视频格式</span></span><br><span class=\"line\"><span class=\"string\">    :return:</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 转换input.mp4 为 output.avi</span></span><br><span class=\"line\">    FFmpeg(inputs=&#123;in_path: <span class=\"literal\">None</span>&#125;, outputs=&#123;out_path: <span class=\"literal\">None</span>&#125;).run()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">execCmd</span><span class=\"params\">(cmd)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    执行计算命令时间</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    r = os.popen(cmd)</span><br><span class=\"line\">    text = r.read().strip()</span><br><span class=\"line\">    r.close()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> text</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    print(sys.argv)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> len(sys.argv) == <span class=\"number\">3</span>:</span><br><span class=\"line\">        hls_dir_to_mp4(sys.argv[<span class=\"number\">1</span>], sys.argv[<span class=\"number\">2</span>])</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> len(sys.argv) &gt; <span class=\"number\">1</span>:</span><br><span class=\"line\">        hls_dir_to_mp4(sys.argv[<span class=\"number\">1</span>], <span class=\"string\">'tmp.mp4'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(<span class=\"string\">'请输入视频所在目录path'</span>)</span><br><span class=\"line\">    <span class=\"comment\"># hls_dir_to_mp4(</span></span><br><span class=\"line\">    <span class=\"comment\">#     in_path_dir='/Users/bunny/Library/Containers/com.tencent.tenvideo/Data/Library/Application Support/Download/video/g00208rhr0m.320092.hls',</span></span><br><span class=\"line\">    <span class=\"comment\">#     out_path_file='1.mp4');</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"打完收工\"><a class=\"markdownIt-Anchor\" href=\"#打完收工\"></a> 打完收工</h3>\n<p>代码已上传<a href=\"https://github.com/yaooort/videoCreate\" target=\"_blank\" rel=\"noopener\">GitHub</a></p>\n<h3 id=\"使用方法\"><a class=\"markdownIt-Anchor\" href=\"#使用方法\"></a> 使用方法</h3>\n<blockquote>\n<p><strong>1.安装ffmpeg</strong></p>\n<ul>\n<li>\n<figure class=\"highlight plain\"><figcaption><span>install ffmpeg```</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&gt; **2.[安装Python3](https://www.python.org/downloads/)**</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; **3.安装pipenv**</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; - ```pip install pipenv</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p><strong>4.创建虚拟环境并安装依赖包</strong></p>\n<ul>\n<li>\n<figure class=\"highlight plain\"><figcaption><span>shell```</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; **5.进入虚拟环境并执行脚本**</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; - ```pipenv shell</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li><code>python tencent_video.py /Users/用户/Library/Containers/com.tencent.tenvideo/Data/Library/Application Support/Download/video/g00208rhr0m.320092.hls out.mp4</code></li>\n</ul>\n</blockquote>\n<p>完结</p>\n"},{"title":"iOS自动布局管理UIScrollview,并自适应软键盘弹出","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3820.jpg","date":"2019-05-19T14:58:01.000Z","subtitle":"iOS自动布局处理键盘弹出及UIScrollview","_content":"\n### iOS 自动布局管理scrollview\n\n- 个人整理笔记，包含完美软键盘弹出视图\n\n\n\n\n\n```objective-c\n#define MAS_SHORTHAND\n#define MAS_SHORTHAND_GLOBALS\n#define RGBColor(r, g, b) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:1]\n\n#define RGBAColor(r, g, b ,a) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:a]\n\n#define RandColor RGBColor(arc4random_uniform(255), arc4random_uniform(255), arc4random_uniform(255))\n\n#import \"ViewController.h\"\n#import \"Masonry.h\"\n\n@interface ViewController ()<UITextFieldDelegate,UIScrollViewDelegate>\n\n@property(nonatomic,strong) UIScrollView *mainScroll;\n\n@property(nonatomic,strong) UITextField *textField;\n\n@property(nonatomic,strong) UIView *countView;\n\n//@property(nonatomic,assign) BOOL keyBoardlsVisible;\n\n@property(nonatomic,assign) CGFloat insetBottom;\n@end\n\n@implementation ViewController\n\n\n\n- (void)viewDidLoad {\n    [super viewDidLoad];\n    //  给 _keyBoardlsVisible 赋初值\n    //    _keyBoardlsVisible = NO;\n    self.insetBottom = 0;\n    \n    self.mainScroll = [UIScrollView new];\n    [self.mainScroll setBackgroundColor:[UIColor whiteColor]];\n    self.mainScroll.delegate = self;\n    [self.view addSubview:self.mainScroll];\n    [self.mainScroll makeConstraints:^(MASConstraintMaker *make) {\n        make.edges.equalTo(self.view);\n    }];\n    \n    \n#pragma mark--包含-个View的布局方式\n    //    self.countView = [[UIView alloc] init];\n    //    self.countView.backgroundColor = [UIColor greenColor];\n    //    [self.mainScroll addSubview:self.countView];\n    //\n    //    [self.countView makeConstraints:^(MASConstraintMaker *make) {\n    //这句其实是指定view填充contentSize\n    //        make.edges.equalTo(self.mainScroll);\n    //确定宽度等于滚动条宽度，也是确定contentSize宽度的关键\n    //        make.width.equalTo(self.mainScroll);\n    //    }];\n    //由于上面没有指定contentSize高度，此时无法确定滚动高度\n    //\n    //    UIImageView *imageView1 = [UIImageView new];\n    //    [imageView1 setBackgroundColor:RandColor];\n    //    [self.countView addSubview:imageView1];\n    //    [imageView1 makeConstraints:^(MASConstraintMaker *make) {\n    //        make.top.equalTo(self.countView).offset(20);\n    //        make.left.right.mas_equalTo(self.countView);\n    //        make.height.mas_equalTo(900);\n    //    }];\n    //\n    //    UIImageView *imageView2 = [UIImageView new];\n    //    [imageView2 setBackgroundColor:RandColor];\n    //    [self.countView addSubview:imageView2];\n    //    [imageView2 makeConstraints:^(MASConstraintMaker *make) {\n    //        make.top.equalTo(imageView1.bottom).offset(20);\n    //        make.left.right.mas_equalTo(self.countView);\n    //        make.height.mas_equalTo(900);\n    //    }];\n    //\n    //    //当视图高度大于屏幕的时候scrollView就可以滚动，设置宽度的方法相同\n    //    [self.countView updateConstraints:^(MASConstraintMaker *make) {\n    //        // 设置容器视图的底部与要显示的子控件的底部相同，不然scrollView不能滚动\n    //        make.bottom.equalTo(imageView2);\n    //    }];\n    \n#pragma mark--包含多个View的布局方式\n    for (int i=0; i<40; i++) {\n        UITextField *textF = [UITextField new];\n        textF.delegate = self;//设置代理\n        textF.backgroundColor = RandColor;\n        [self.mainScroll addSubview:textF];\n        [textF makeConstraints:^(MASConstraintMaker *make) {\n            //确定宽度等于滚动条宽度，也是确定contentSize宽度的关键\n            make.width.equalTo(self.mainScroll);\n            //左边对齐\n            make.left.equalTo(self.mainScroll);\n            //y轴计算\n            make.top.equalTo(self.mainScroll).offset(i*45);\n            //高度写死\n            make.height.equalTo(40);\n        }];\n        if(i==39){\n            //到最后一个View时候更新scollerView的contentSize高度也就是底部最多延伸到哪里\n            [self.mainScroll updateConstraints:^(MASConstraintMaker *make) {\n                make.bottom.equalTo(textF.bottom);\n            }];\n        }\n    }\n    \n    \n    \n    // 注册键盘通知\n    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillChangeFrameNotification:) name:UIKeyboardWillChangeFrameNotification object:nil];\n    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHideNotification:) name:UIKeyboardWillHideNotification object:nil];\n}\n\n#pragma mark--代理方法键盘弹出\n-(void)textFieldDidBeginEditing:(UITextField *)textField\n{   //得到当前操作的view\n    self.textField = textField;\n}\n\n#pragma mark--代理方法键盘关闭\n-(void)textFieldDidEndEditing:(UITextField *)textField\n{   //得到当前操作的view\n    self.textField = textField;\n}\n\n#pragma mark--键盘弹出\n- (void)keyboardWillChangeFrameNotification:(NSNotification *)notification {\n    \n    // 获取键盘基本信息（动画时长与键盘高度）\n    NSDictionary *userInfo = [notification userInfo];\n    CGRect rect = [userInfo[UIKeyboardFrameEndUserInfoKey] CGRectValue];\n    CGFloat keyboardHeight   = CGRectGetHeight(rect);\n    CGFloat keyboardDuration = [userInfo[UIKeyboardAnimationDurationUserInfoKey] doubleValue];\n    //获得当前输入框的Y坐标\n    CGFloat inputY = self.textField.frame.origin.y+self.textField.frame.size.height;\n    //滑动距离\n    CGFloat offsetY = self.mainScroll.contentOffset.y;\n    //输入框距离屏幕底部\n    CGFloat inputJd = self.mainScroll.frame.size.height-(inputY-offsetY);\n    \n    NSLog(@\"键盘高度==%f,输入框距离底部距离==%f\",keyboardHeight,inputJd);\n    if(inputJd<keyboardHeight){\n        self.insetBottom = keyboardHeight-inputJd;\n        // 更新滚动条\n        [UIView animateWithDuration:keyboardDuration animations:^{\n            [self.mainScroll setContentOffset:CGPointMake(0, offsetY+self.insetBottom) animated:YES];\n        }];\n    }\n}\n#pragma mark--键盘隐藏\n- (void)keyboardWillHideNotification:(NSNotification *)notification {\n    \n    // 获得键盘动画时长\n    NSDictionary *userInfo   = [notification userInfo];\n    CGFloat keyboardDuration = [userInfo[UIKeyboardAnimationDurationUserInfoKey] doubleValue];\n    //滑动距离\n    CGFloat offsetY = self.mainScroll.contentOffset.y;\n    // 更新滚动条\n    [UIView animateWithDuration:keyboardDuration animations:^{\n        [self.mainScroll setContentOffset:CGPointMake(0, offsetY-self.insetBottom) animated:YES];\n    }];\n    self.insetBottom = 0;\n    \n}\n#pragma mark--触摸事件\n- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event {\n    [super touchesBegan:touches withEvent:event];\n    [self.view endEditing:YES];\n}\n\n- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView{\n    [self.view endEditing:YES];\n}\n#pragma mark--移除通知\n- (void)dealloc {\n    [[NSNotificationCenter defaultCenter] removeObserver:self];\n}\n\n@end\n\n\n```\n","source":"_posts/iOS自动布局管理UIScrollview-并自适应软键盘弹出.md","raw":"---\ntitle: 'iOS自动布局管理UIScrollview,并自适应软键盘弹出'\ncover: 'http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3820.jpg'\ndate: 2019-05-19 22:58:01\nsubtitle: iOS自动布局处理键盘弹出及UIScrollview\ncategories:\n- iOS\ntags:\n- iOS\n- 自动布局\n---\n\n### iOS 自动布局管理scrollview\n\n- 个人整理笔记，包含完美软键盘弹出视图\n\n\n\n\n\n```objective-c\n#define MAS_SHORTHAND\n#define MAS_SHORTHAND_GLOBALS\n#define RGBColor(r, g, b) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:1]\n\n#define RGBAColor(r, g, b ,a) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:a]\n\n#define RandColor RGBColor(arc4random_uniform(255), arc4random_uniform(255), arc4random_uniform(255))\n\n#import \"ViewController.h\"\n#import \"Masonry.h\"\n\n@interface ViewController ()<UITextFieldDelegate,UIScrollViewDelegate>\n\n@property(nonatomic,strong) UIScrollView *mainScroll;\n\n@property(nonatomic,strong) UITextField *textField;\n\n@property(nonatomic,strong) UIView *countView;\n\n//@property(nonatomic,assign) BOOL keyBoardlsVisible;\n\n@property(nonatomic,assign) CGFloat insetBottom;\n@end\n\n@implementation ViewController\n\n\n\n- (void)viewDidLoad {\n    [super viewDidLoad];\n    //  给 _keyBoardlsVisible 赋初值\n    //    _keyBoardlsVisible = NO;\n    self.insetBottom = 0;\n    \n    self.mainScroll = [UIScrollView new];\n    [self.mainScroll setBackgroundColor:[UIColor whiteColor]];\n    self.mainScroll.delegate = self;\n    [self.view addSubview:self.mainScroll];\n    [self.mainScroll makeConstraints:^(MASConstraintMaker *make) {\n        make.edges.equalTo(self.view);\n    }];\n    \n    \n#pragma mark--包含-个View的布局方式\n    //    self.countView = [[UIView alloc] init];\n    //    self.countView.backgroundColor = [UIColor greenColor];\n    //    [self.mainScroll addSubview:self.countView];\n    //\n    //    [self.countView makeConstraints:^(MASConstraintMaker *make) {\n    //这句其实是指定view填充contentSize\n    //        make.edges.equalTo(self.mainScroll);\n    //确定宽度等于滚动条宽度，也是确定contentSize宽度的关键\n    //        make.width.equalTo(self.mainScroll);\n    //    }];\n    //由于上面没有指定contentSize高度，此时无法确定滚动高度\n    //\n    //    UIImageView *imageView1 = [UIImageView new];\n    //    [imageView1 setBackgroundColor:RandColor];\n    //    [self.countView addSubview:imageView1];\n    //    [imageView1 makeConstraints:^(MASConstraintMaker *make) {\n    //        make.top.equalTo(self.countView).offset(20);\n    //        make.left.right.mas_equalTo(self.countView);\n    //        make.height.mas_equalTo(900);\n    //    }];\n    //\n    //    UIImageView *imageView2 = [UIImageView new];\n    //    [imageView2 setBackgroundColor:RandColor];\n    //    [self.countView addSubview:imageView2];\n    //    [imageView2 makeConstraints:^(MASConstraintMaker *make) {\n    //        make.top.equalTo(imageView1.bottom).offset(20);\n    //        make.left.right.mas_equalTo(self.countView);\n    //        make.height.mas_equalTo(900);\n    //    }];\n    //\n    //    //当视图高度大于屏幕的时候scrollView就可以滚动，设置宽度的方法相同\n    //    [self.countView updateConstraints:^(MASConstraintMaker *make) {\n    //        // 设置容器视图的底部与要显示的子控件的底部相同，不然scrollView不能滚动\n    //        make.bottom.equalTo(imageView2);\n    //    }];\n    \n#pragma mark--包含多个View的布局方式\n    for (int i=0; i<40; i++) {\n        UITextField *textF = [UITextField new];\n        textF.delegate = self;//设置代理\n        textF.backgroundColor = RandColor;\n        [self.mainScroll addSubview:textF];\n        [textF makeConstraints:^(MASConstraintMaker *make) {\n            //确定宽度等于滚动条宽度，也是确定contentSize宽度的关键\n            make.width.equalTo(self.mainScroll);\n            //左边对齐\n            make.left.equalTo(self.mainScroll);\n            //y轴计算\n            make.top.equalTo(self.mainScroll).offset(i*45);\n            //高度写死\n            make.height.equalTo(40);\n        }];\n        if(i==39){\n            //到最后一个View时候更新scollerView的contentSize高度也就是底部最多延伸到哪里\n            [self.mainScroll updateConstraints:^(MASConstraintMaker *make) {\n                make.bottom.equalTo(textF.bottom);\n            }];\n        }\n    }\n    \n    \n    \n    // 注册键盘通知\n    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillChangeFrameNotification:) name:UIKeyboardWillChangeFrameNotification object:nil];\n    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHideNotification:) name:UIKeyboardWillHideNotification object:nil];\n}\n\n#pragma mark--代理方法键盘弹出\n-(void)textFieldDidBeginEditing:(UITextField *)textField\n{   //得到当前操作的view\n    self.textField = textField;\n}\n\n#pragma mark--代理方法键盘关闭\n-(void)textFieldDidEndEditing:(UITextField *)textField\n{   //得到当前操作的view\n    self.textField = textField;\n}\n\n#pragma mark--键盘弹出\n- (void)keyboardWillChangeFrameNotification:(NSNotification *)notification {\n    \n    // 获取键盘基本信息（动画时长与键盘高度）\n    NSDictionary *userInfo = [notification userInfo];\n    CGRect rect = [userInfo[UIKeyboardFrameEndUserInfoKey] CGRectValue];\n    CGFloat keyboardHeight   = CGRectGetHeight(rect);\n    CGFloat keyboardDuration = [userInfo[UIKeyboardAnimationDurationUserInfoKey] doubleValue];\n    //获得当前输入框的Y坐标\n    CGFloat inputY = self.textField.frame.origin.y+self.textField.frame.size.height;\n    //滑动距离\n    CGFloat offsetY = self.mainScroll.contentOffset.y;\n    //输入框距离屏幕底部\n    CGFloat inputJd = self.mainScroll.frame.size.height-(inputY-offsetY);\n    \n    NSLog(@\"键盘高度==%f,输入框距离底部距离==%f\",keyboardHeight,inputJd);\n    if(inputJd<keyboardHeight){\n        self.insetBottom = keyboardHeight-inputJd;\n        // 更新滚动条\n        [UIView animateWithDuration:keyboardDuration animations:^{\n            [self.mainScroll setContentOffset:CGPointMake(0, offsetY+self.insetBottom) animated:YES];\n        }];\n    }\n}\n#pragma mark--键盘隐藏\n- (void)keyboardWillHideNotification:(NSNotification *)notification {\n    \n    // 获得键盘动画时长\n    NSDictionary *userInfo   = [notification userInfo];\n    CGFloat keyboardDuration = [userInfo[UIKeyboardAnimationDurationUserInfoKey] doubleValue];\n    //滑动距离\n    CGFloat offsetY = self.mainScroll.contentOffset.y;\n    // 更新滚动条\n    [UIView animateWithDuration:keyboardDuration animations:^{\n        [self.mainScroll setContentOffset:CGPointMake(0, offsetY-self.insetBottom) animated:YES];\n    }];\n    self.insetBottom = 0;\n    \n}\n#pragma mark--触摸事件\n- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event {\n    [super touchesBegan:touches withEvent:event];\n    [self.view endEditing:YES];\n}\n\n- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView{\n    [self.view endEditing:YES];\n}\n#pragma mark--移除通知\n- (void)dealloc {\n    [[NSNotificationCenter defaultCenter] removeObserver:self];\n}\n\n@end\n\n\n```\n","slug":"iOS自动布局管理UIScrollview-并自适应软键盘弹出","published":1,"updated":"2019-05-20T02:02:41.400Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjw65m7gn001i3ivosbn94s01","content":"<h3 id=\"ios-自动布局管理scrollview\"><a class=\"markdownIt-Anchor\" href=\"#ios-自动布局管理scrollview\"></a> iOS 自动布局管理scrollview</h3>\n<ul>\n<li>个人整理笔记，包含完美软键盘弹出视图</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#define MAS_SHORTHAND</span><br><span class=\"line\">#define MAS_SHORTHAND_GLOBALS</span><br><span class=\"line\">#define RGBColor(r, g, b) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:1]</span><br><span class=\"line\"></span><br><span class=\"line\">#define RGBAColor(r, g, b ,a) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:a]</span><br><span class=\"line\"></span><br><span class=\"line\">#define RandColor RGBColor(arc4random_uniform(255), arc4random_uniform(255), arc4random_uniform(255))</span><br><span class=\"line\"></span><br><span class=\"line\">#import &quot;ViewController.h&quot;</span><br><span class=\"line\">#import &quot;Masonry.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">@interface ViewController ()&lt;UITextFieldDelegate,UIScrollViewDelegate&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">@property(nonatomic,strong) UIScrollView *mainScroll;</span><br><span class=\"line\"></span><br><span class=\"line\">@property(nonatomic,strong) UITextField *textField;</span><br><span class=\"line\"></span><br><span class=\"line\">@property(nonatomic,strong) UIView *countView;</span><br><span class=\"line\"></span><br><span class=\"line\">//@property(nonatomic,assign) BOOL keyBoardlsVisible;</span><br><span class=\"line\"></span><br><span class=\"line\">@property(nonatomic,assign) CGFloat insetBottom;</span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\">@implementation ViewController</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">- (void)viewDidLoad &#123;</span><br><span class=\"line\">    [super viewDidLoad];</span><br><span class=\"line\">    //  给 _keyBoardlsVisible 赋初值</span><br><span class=\"line\">    //    _keyBoardlsVisible = NO;</span><br><span class=\"line\">    self.insetBottom = 0;</span><br><span class=\"line\">    </span><br><span class=\"line\">    self.mainScroll = [UIScrollView new];</span><br><span class=\"line\">    [self.mainScroll setBackgroundColor:[UIColor whiteColor]];</span><br><span class=\"line\">    self.mainScroll.delegate = self;</span><br><span class=\"line\">    [self.view addSubview:self.mainScroll];</span><br><span class=\"line\">    [self.mainScroll makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class=\"line\">        make.edges.equalTo(self.view);</span><br><span class=\"line\">    &#125;];</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">#pragma mark--包含-个View的布局方式</span><br><span class=\"line\">    //    self.countView = [[UIView alloc] init];</span><br><span class=\"line\">    //    self.countView.backgroundColor = [UIColor greenColor];</span><br><span class=\"line\">    //    [self.mainScroll addSubview:self.countView];</span><br><span class=\"line\">    //</span><br><span class=\"line\">    //    [self.countView makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class=\"line\">    //这句其实是指定view填充contentSize</span><br><span class=\"line\">    //        make.edges.equalTo(self.mainScroll);</span><br><span class=\"line\">    //确定宽度等于滚动条宽度，也是确定contentSize宽度的关键</span><br><span class=\"line\">    //        make.width.equalTo(self.mainScroll);</span><br><span class=\"line\">    //    &#125;];</span><br><span class=\"line\">    //由于上面没有指定contentSize高度，此时无法确定滚动高度</span><br><span class=\"line\">    //</span><br><span class=\"line\">    //    UIImageView *imageView1 = [UIImageView new];</span><br><span class=\"line\">    //    [imageView1 setBackgroundColor:RandColor];</span><br><span class=\"line\">    //    [self.countView addSubview:imageView1];</span><br><span class=\"line\">    //    [imageView1 makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class=\"line\">    //        make.top.equalTo(self.countView).offset(20);</span><br><span class=\"line\">    //        make.left.right.mas_equalTo(self.countView);</span><br><span class=\"line\">    //        make.height.mas_equalTo(900);</span><br><span class=\"line\">    //    &#125;];</span><br><span class=\"line\">    //</span><br><span class=\"line\">    //    UIImageView *imageView2 = [UIImageView new];</span><br><span class=\"line\">    //    [imageView2 setBackgroundColor:RandColor];</span><br><span class=\"line\">    //    [self.countView addSubview:imageView2];</span><br><span class=\"line\">    //    [imageView2 makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class=\"line\">    //        make.top.equalTo(imageView1.bottom).offset(20);</span><br><span class=\"line\">    //        make.left.right.mas_equalTo(self.countView);</span><br><span class=\"line\">    //        make.height.mas_equalTo(900);</span><br><span class=\"line\">    //    &#125;];</span><br><span class=\"line\">    //</span><br><span class=\"line\">    //    //当视图高度大于屏幕的时候scrollView就可以滚动，设置宽度的方法相同</span><br><span class=\"line\">    //    [self.countView updateConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class=\"line\">    //        // 设置容器视图的底部与要显示的子控件的底部相同，不然scrollView不能滚动</span><br><span class=\"line\">    //        make.bottom.equalTo(imageView2);</span><br><span class=\"line\">    //    &#125;];</span><br><span class=\"line\">    </span><br><span class=\"line\">#pragma mark--包含多个View的布局方式</span><br><span class=\"line\">    for (int i=0; i&lt;40; i++) &#123;</span><br><span class=\"line\">        UITextField *textF = [UITextField new];</span><br><span class=\"line\">        textF.delegate = self;//设置代理</span><br><span class=\"line\">        textF.backgroundColor = RandColor;</span><br><span class=\"line\">        [self.mainScroll addSubview:textF];</span><br><span class=\"line\">        [textF makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class=\"line\">            //确定宽度等于滚动条宽度，也是确定contentSize宽度的关键</span><br><span class=\"line\">            make.width.equalTo(self.mainScroll);</span><br><span class=\"line\">            //左边对齐</span><br><span class=\"line\">            make.left.equalTo(self.mainScroll);</span><br><span class=\"line\">            //y轴计算</span><br><span class=\"line\">            make.top.equalTo(self.mainScroll).offset(i*45);</span><br><span class=\"line\">            //高度写死</span><br><span class=\"line\">            make.height.equalTo(40);</span><br><span class=\"line\">        &#125;];</span><br><span class=\"line\">        if(i==39)&#123;</span><br><span class=\"line\">            //到最后一个View时候更新scollerView的contentSize高度也就是底部最多延伸到哪里</span><br><span class=\"line\">            [self.mainScroll updateConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class=\"line\">                make.bottom.equalTo(textF.bottom);</span><br><span class=\"line\">            &#125;];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    // 注册键盘通知</span><br><span class=\"line\">    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillChangeFrameNotification:) name:UIKeyboardWillChangeFrameNotification object:nil];</span><br><span class=\"line\">    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHideNotification:) name:UIKeyboardWillHideNotification object:nil];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark--代理方法键盘弹出</span><br><span class=\"line\">-(void)textFieldDidBeginEditing:(UITextField *)textField</span><br><span class=\"line\">&#123;   //得到当前操作的view</span><br><span class=\"line\">    self.textField = textField;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark--代理方法键盘关闭</span><br><span class=\"line\">-(void)textFieldDidEndEditing:(UITextField *)textField</span><br><span class=\"line\">&#123;   //得到当前操作的view</span><br><span class=\"line\">    self.textField = textField;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark--键盘弹出</span><br><span class=\"line\">- (void)keyboardWillChangeFrameNotification:(NSNotification *)notification &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    // 获取键盘基本信息（动画时长与键盘高度）</span><br><span class=\"line\">    NSDictionary *userInfo = [notification userInfo];</span><br><span class=\"line\">    CGRect rect = [userInfo[UIKeyboardFrameEndUserInfoKey] CGRectValue];</span><br><span class=\"line\">    CGFloat keyboardHeight   = CGRectGetHeight(rect);</span><br><span class=\"line\">    CGFloat keyboardDuration = [userInfo[UIKeyboardAnimationDurationUserInfoKey] doubleValue];</span><br><span class=\"line\">    //获得当前输入框的Y坐标</span><br><span class=\"line\">    CGFloat inputY = self.textField.frame.origin.y+self.textField.frame.size.height;</span><br><span class=\"line\">    //滑动距离</span><br><span class=\"line\">    CGFloat offsetY = self.mainScroll.contentOffset.y;</span><br><span class=\"line\">    //输入框距离屏幕底部</span><br><span class=\"line\">    CGFloat inputJd = self.mainScroll.frame.size.height-(inputY-offsetY);</span><br><span class=\"line\">    </span><br><span class=\"line\">    NSLog(@&quot;键盘高度==%f,输入框距离底部距离==%f&quot;,keyboardHeight,inputJd);</span><br><span class=\"line\">    if(inputJd&lt;keyboardHeight)&#123;</span><br><span class=\"line\">        self.insetBottom = keyboardHeight-inputJd;</span><br><span class=\"line\">        // 更新滚动条</span><br><span class=\"line\">        [UIView animateWithDuration:keyboardDuration animations:^&#123;</span><br><span class=\"line\">            [self.mainScroll setContentOffset:CGPointMake(0, offsetY+self.insetBottom) animated:YES];</span><br><span class=\"line\">        &#125;];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#pragma mark--键盘隐藏</span><br><span class=\"line\">- (void)keyboardWillHideNotification:(NSNotification *)notification &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    // 获得键盘动画时长</span><br><span class=\"line\">    NSDictionary *userInfo   = [notification userInfo];</span><br><span class=\"line\">    CGFloat keyboardDuration = [userInfo[UIKeyboardAnimationDurationUserInfoKey] doubleValue];</span><br><span class=\"line\">    //滑动距离</span><br><span class=\"line\">    CGFloat offsetY = self.mainScroll.contentOffset.y;</span><br><span class=\"line\">    // 更新滚动条</span><br><span class=\"line\">    [UIView animateWithDuration:keyboardDuration animations:^&#123;</span><br><span class=\"line\">        [self.mainScroll setContentOffset:CGPointMake(0, offsetY-self.insetBottom) animated:YES];</span><br><span class=\"line\">    &#125;];</span><br><span class=\"line\">    self.insetBottom = 0;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#pragma mark--触摸事件</span><br><span class=\"line\">- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event &#123;</span><br><span class=\"line\">    [super touchesBegan:touches withEvent:event];</span><br><span class=\"line\">    [self.view endEditing:YES];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView&#123;</span><br><span class=\"line\">    [self.view endEditing:YES];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#pragma mark--移除通知</span><br><span class=\"line\">- (void)dealloc &#123;</span><br><span class=\"line\">    [[NSNotificationCenter defaultCenter] removeObserver:self];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br></pre></td></tr></table></figure>\n","site":{"data":{"links":[{"name":"Yaooort","describe":"大傻子","link":"http://www.yaooort.com","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_4172.jpg"},{"name":"GitHub","describe":"直男网","link":"https://github.com/yaooort","cover":"http://prr6elh1d.sabkt.gdipper.com/static/images/IMG_3829.jpg"}]}},"excerpt":"","more":"<h3 id=\"ios-自动布局管理scrollview\"><a class=\"markdownIt-Anchor\" href=\"#ios-自动布局管理scrollview\"></a> iOS 自动布局管理scrollview</h3>\n<ul>\n<li>个人整理笔记，包含完美软键盘弹出视图</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#define MAS_SHORTHAND</span><br><span class=\"line\">#define MAS_SHORTHAND_GLOBALS</span><br><span class=\"line\">#define RGBColor(r, g, b) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:1]</span><br><span class=\"line\"></span><br><span class=\"line\">#define RGBAColor(r, g, b ,a) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:a]</span><br><span class=\"line\"></span><br><span class=\"line\">#define RandColor RGBColor(arc4random_uniform(255), arc4random_uniform(255), arc4random_uniform(255))</span><br><span class=\"line\"></span><br><span class=\"line\">#import &quot;ViewController.h&quot;</span><br><span class=\"line\">#import &quot;Masonry.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">@interface ViewController ()&lt;UITextFieldDelegate,UIScrollViewDelegate&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">@property(nonatomic,strong) UIScrollView *mainScroll;</span><br><span class=\"line\"></span><br><span class=\"line\">@property(nonatomic,strong) UITextField *textField;</span><br><span class=\"line\"></span><br><span class=\"line\">@property(nonatomic,strong) UIView *countView;</span><br><span class=\"line\"></span><br><span class=\"line\">//@property(nonatomic,assign) BOOL keyBoardlsVisible;</span><br><span class=\"line\"></span><br><span class=\"line\">@property(nonatomic,assign) CGFloat insetBottom;</span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\">@implementation ViewController</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">- (void)viewDidLoad &#123;</span><br><span class=\"line\">    [super viewDidLoad];</span><br><span class=\"line\">    //  给 _keyBoardlsVisible 赋初值</span><br><span class=\"line\">    //    _keyBoardlsVisible = NO;</span><br><span class=\"line\">    self.insetBottom = 0;</span><br><span class=\"line\">    </span><br><span class=\"line\">    self.mainScroll = [UIScrollView new];</span><br><span class=\"line\">    [self.mainScroll setBackgroundColor:[UIColor whiteColor]];</span><br><span class=\"line\">    self.mainScroll.delegate = self;</span><br><span class=\"line\">    [self.view addSubview:self.mainScroll];</span><br><span class=\"line\">    [self.mainScroll makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class=\"line\">        make.edges.equalTo(self.view);</span><br><span class=\"line\">    &#125;];</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">#pragma mark--包含-个View的布局方式</span><br><span class=\"line\">    //    self.countView = [[UIView alloc] init];</span><br><span class=\"line\">    //    self.countView.backgroundColor = [UIColor greenColor];</span><br><span class=\"line\">    //    [self.mainScroll addSubview:self.countView];</span><br><span class=\"line\">    //</span><br><span class=\"line\">    //    [self.countView makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class=\"line\">    //这句其实是指定view填充contentSize</span><br><span class=\"line\">    //        make.edges.equalTo(self.mainScroll);</span><br><span class=\"line\">    //确定宽度等于滚动条宽度，也是确定contentSize宽度的关键</span><br><span class=\"line\">    //        make.width.equalTo(self.mainScroll);</span><br><span class=\"line\">    //    &#125;];</span><br><span class=\"line\">    //由于上面没有指定contentSize高度，此时无法确定滚动高度</span><br><span class=\"line\">    //</span><br><span class=\"line\">    //    UIImageView *imageView1 = [UIImageView new];</span><br><span class=\"line\">    //    [imageView1 setBackgroundColor:RandColor];</span><br><span class=\"line\">    //    [self.countView addSubview:imageView1];</span><br><span class=\"line\">    //    [imageView1 makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class=\"line\">    //        make.top.equalTo(self.countView).offset(20);</span><br><span class=\"line\">    //        make.left.right.mas_equalTo(self.countView);</span><br><span class=\"line\">    //        make.height.mas_equalTo(900);</span><br><span class=\"line\">    //    &#125;];</span><br><span class=\"line\">    //</span><br><span class=\"line\">    //    UIImageView *imageView2 = [UIImageView new];</span><br><span class=\"line\">    //    [imageView2 setBackgroundColor:RandColor];</span><br><span class=\"line\">    //    [self.countView addSubview:imageView2];</span><br><span class=\"line\">    //    [imageView2 makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class=\"line\">    //        make.top.equalTo(imageView1.bottom).offset(20);</span><br><span class=\"line\">    //        make.left.right.mas_equalTo(self.countView);</span><br><span class=\"line\">    //        make.height.mas_equalTo(900);</span><br><span class=\"line\">    //    &#125;];</span><br><span class=\"line\">    //</span><br><span class=\"line\">    //    //当视图高度大于屏幕的时候scrollView就可以滚动，设置宽度的方法相同</span><br><span class=\"line\">    //    [self.countView updateConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class=\"line\">    //        // 设置容器视图的底部与要显示的子控件的底部相同，不然scrollView不能滚动</span><br><span class=\"line\">    //        make.bottom.equalTo(imageView2);</span><br><span class=\"line\">    //    &#125;];</span><br><span class=\"line\">    </span><br><span class=\"line\">#pragma mark--包含多个View的布局方式</span><br><span class=\"line\">    for (int i=0; i&lt;40; i++) &#123;</span><br><span class=\"line\">        UITextField *textF = [UITextField new];</span><br><span class=\"line\">        textF.delegate = self;//设置代理</span><br><span class=\"line\">        textF.backgroundColor = RandColor;</span><br><span class=\"line\">        [self.mainScroll addSubview:textF];</span><br><span class=\"line\">        [textF makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class=\"line\">            //确定宽度等于滚动条宽度，也是确定contentSize宽度的关键</span><br><span class=\"line\">            make.width.equalTo(self.mainScroll);</span><br><span class=\"line\">            //左边对齐</span><br><span class=\"line\">            make.left.equalTo(self.mainScroll);</span><br><span class=\"line\">            //y轴计算</span><br><span class=\"line\">            make.top.equalTo(self.mainScroll).offset(i*45);</span><br><span class=\"line\">            //高度写死</span><br><span class=\"line\">            make.height.equalTo(40);</span><br><span class=\"line\">        &#125;];</span><br><span class=\"line\">        if(i==39)&#123;</span><br><span class=\"line\">            //到最后一个View时候更新scollerView的contentSize高度也就是底部最多延伸到哪里</span><br><span class=\"line\">            [self.mainScroll updateConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class=\"line\">                make.bottom.equalTo(textF.bottom);</span><br><span class=\"line\">            &#125;];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    // 注册键盘通知</span><br><span class=\"line\">    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillChangeFrameNotification:) name:UIKeyboardWillChangeFrameNotification object:nil];</span><br><span class=\"line\">    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHideNotification:) name:UIKeyboardWillHideNotification object:nil];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark--代理方法键盘弹出</span><br><span class=\"line\">-(void)textFieldDidBeginEditing:(UITextField *)textField</span><br><span class=\"line\">&#123;   //得到当前操作的view</span><br><span class=\"line\">    self.textField = textField;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark--代理方法键盘关闭</span><br><span class=\"line\">-(void)textFieldDidEndEditing:(UITextField *)textField</span><br><span class=\"line\">&#123;   //得到当前操作的view</span><br><span class=\"line\">    self.textField = textField;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark--键盘弹出</span><br><span class=\"line\">- (void)keyboardWillChangeFrameNotification:(NSNotification *)notification &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    // 获取键盘基本信息（动画时长与键盘高度）</span><br><span class=\"line\">    NSDictionary *userInfo = [notification userInfo];</span><br><span class=\"line\">    CGRect rect = [userInfo[UIKeyboardFrameEndUserInfoKey] CGRectValue];</span><br><span class=\"line\">    CGFloat keyboardHeight   = CGRectGetHeight(rect);</span><br><span class=\"line\">    CGFloat keyboardDuration = [userInfo[UIKeyboardAnimationDurationUserInfoKey] doubleValue];</span><br><span class=\"line\">    //获得当前输入框的Y坐标</span><br><span class=\"line\">    CGFloat inputY = self.textField.frame.origin.y+self.textField.frame.size.height;</span><br><span class=\"line\">    //滑动距离</span><br><span class=\"line\">    CGFloat offsetY = self.mainScroll.contentOffset.y;</span><br><span class=\"line\">    //输入框距离屏幕底部</span><br><span class=\"line\">    CGFloat inputJd = self.mainScroll.frame.size.height-(inputY-offsetY);</span><br><span class=\"line\">    </span><br><span class=\"line\">    NSLog(@&quot;键盘高度==%f,输入框距离底部距离==%f&quot;,keyboardHeight,inputJd);</span><br><span class=\"line\">    if(inputJd&lt;keyboardHeight)&#123;</span><br><span class=\"line\">        self.insetBottom = keyboardHeight-inputJd;</span><br><span class=\"line\">        // 更新滚动条</span><br><span class=\"line\">        [UIView animateWithDuration:keyboardDuration animations:^&#123;</span><br><span class=\"line\">            [self.mainScroll setContentOffset:CGPointMake(0, offsetY+self.insetBottom) animated:YES];</span><br><span class=\"line\">        &#125;];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#pragma mark--键盘隐藏</span><br><span class=\"line\">- (void)keyboardWillHideNotification:(NSNotification *)notification &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    // 获得键盘动画时长</span><br><span class=\"line\">    NSDictionary *userInfo   = [notification userInfo];</span><br><span class=\"line\">    CGFloat keyboardDuration = [userInfo[UIKeyboardAnimationDurationUserInfoKey] doubleValue];</span><br><span class=\"line\">    //滑动距离</span><br><span class=\"line\">    CGFloat offsetY = self.mainScroll.contentOffset.y;</span><br><span class=\"line\">    // 更新滚动条</span><br><span class=\"line\">    [UIView animateWithDuration:keyboardDuration animations:^&#123;</span><br><span class=\"line\">        [self.mainScroll setContentOffset:CGPointMake(0, offsetY-self.insetBottom) animated:YES];</span><br><span class=\"line\">    &#125;];</span><br><span class=\"line\">    self.insetBottom = 0;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#pragma mark--触摸事件</span><br><span class=\"line\">- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event &#123;</span><br><span class=\"line\">    [super touchesBegan:touches withEvent:event];</span><br><span class=\"line\">    [self.view endEditing:YES];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView&#123;</span><br><span class=\"line\">    [self.view endEditing:YES];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#pragma mark--移除通知</span><br><span class=\"line\">- (void)dealloc &#123;</span><br><span class=\"line\">    [[NSNotificationCenter defaultCenter] removeObserver:self];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjw65m7fv00013ivonhleydjx","category_id":"cjw65m7g100073ivo9lmwam9z","_id":"cjw65m7g5000d3ivozecz0b11"},{"post_id":"cjw65m7fy00043ivovmvinf9h","category_id":"cjw65m7g4000b3ivoqx1ypihk","_id":"cjw65m7g7000j3ivo7v5mbs1u"},{"post_id":"cjw65m7fz00053ivofhnpw7y2","category_id":"cjw65m7g100073ivo9lmwam9z","_id":"cjw65m7g8000m3ivo5x0l3dns"},{"post_id":"cjw65m7fr00003ivo1uffkwug","category_id":"cjw65m7fw00023ivokiadjwxi","_id":"cjw65m7ga000t3ivozaxpgpfh"},{"post_id":"cjw65m7fr00003ivo1uffkwug","category_id":"cjw65m7g7000i3ivowkl71vpj","_id":"cjw65m7ga000u3ivoqtzvz95q"},{"post_id":"cjw65m7g100063ivofsetvw5q","category_id":"cjw65m7g100073ivo9lmwam9z","_id":"cjw65m7ga000v3ivoy0oo7svi"},{"post_id":"cjw65m7g200093ivo1gpdds7p","category_id":"cjw65m7ga000s3ivolat5kpkj","_id":"cjw65m7gb00113ivooay0246a"},{"post_id":"cjw65m7g3000a3ivo00w81wi6","category_id":"cjw65m7ga000x3ivoiuhsc8yt","_id":"cjw65m7gc00133ivo9i875omb"},{"post_id":"cjw65m7gk001g3ivo13vyi6nh","category_id":"cjw65m7ga000x3ivoiuhsc8yt","_id":"cjw65m7gq001n3ivoh6f9viri"},{"post_id":"cjw65m7gn001i3ivosbn94s01","category_id":"cjw65m7gq001l3ivo32ldhaa9","_id":"cjw65m7gu001t3ivorz2bmdto"}],"PostTag":[{"post_id":"cjw65m7fr00003ivo1uffkwug","tag_id":"cjw65m7fy00033ivo4p5ch5yo","_id":"cjw65m7g6000g3ivourb7tibt"},{"post_id":"cjw65m7fr00003ivo1uffkwug","tag_id":"cjw65m7g100083ivocaz5sl5b","_id":"cjw65m7g7000h3ivouadmvho1"},{"post_id":"cjw65m7fr00003ivo1uffkwug","tag_id":"cjw65m7g4000c3ivo28rtrk9y","_id":"cjw65m7g8000l3ivovzev3rya"},{"post_id":"cjw65m7fv00013ivonhleydjx","tag_id":"cjw65m7g100083ivocaz5sl5b","_id":"cjw65m7g9000p3ivoktj4jhmi"},{"post_id":"cjw65m7fv00013ivonhleydjx","tag_id":"cjw65m7g4000c3ivo28rtrk9y","_id":"cjw65m7g9000q3ivo19ydc3l8"},{"post_id":"cjw65m7fy00043ivovmvinf9h","tag_id":"cjw65m7fy00033ivo4p5ch5yo","_id":"cjw65m7gb000y3ivop0jlmxlk"},{"post_id":"cjw65m7fy00043ivovmvinf9h","tag_id":"cjw65m7g9000r3ivowgiyx5x2","_id":"cjw65m7gb000z3ivondgo9yl9"},{"post_id":"cjw65m7fz00053ivofhnpw7y2","tag_id":"cjw65m7g100083ivocaz5sl5b","_id":"cjw65m7gc00143ivow0sa0rk1"},{"post_id":"cjw65m7fz00053ivofhnpw7y2","tag_id":"cjw65m7g4000c3ivo28rtrk9y","_id":"cjw65m7gc00153ivoernfzzvi"},{"post_id":"cjw65m7g100063ivofsetvw5q","tag_id":"cjw65m7g100083ivocaz5sl5b","_id":"cjw65m7gd00183ivop8iv0lnm"},{"post_id":"cjw65m7g100063ivofsetvw5q","tag_id":"cjw65m7g4000c3ivo28rtrk9y","_id":"cjw65m7gd00193ivok5jzv7e0"},{"post_id":"cjw65m7g200093ivo1gpdds7p","tag_id":"cjw65m7gc00173ivou7frfcxr","_id":"cjw65m7gd001b3ivoz68abirr"},{"post_id":"cjw65m7g3000a3ivo00w81wi6","tag_id":"cjw65m7gd001a3ivoohoox3vq","_id":"cjw65m7gd001d3ivo55f2apnk"},{"post_id":"cjw65m7g3000a3ivo00w81wi6","tag_id":"cjw65m7gd001c3ivopcngsjwu","_id":"cjw65m7ge001e3ivo3y8azzed"},{"post_id":"cjw65m7gk001g3ivo13vyi6nh","tag_id":"cjw65m7fy00033ivo4p5ch5yo","_id":"cjw65m7gs001q3ivo2zhbn5ub"},{"post_id":"cjw65m7gk001g3ivo13vyi6nh","tag_id":"cjw65m7go001j3ivoshpsfchy","_id":"cjw65m7gu001r3ivornpxfvmp"},{"post_id":"cjw65m7gk001g3ivo13vyi6nh","tag_id":"cjw65m7gd001c3ivopcngsjwu","_id":"cjw65m7gu001s3ivoboyku9c7"},{"post_id":"cjw65m7gn001i3ivosbn94s01","tag_id":"cjw65m7g4000c3ivo28rtrk9y","_id":"cjw65m7gv001u3ivofy47yol3"},{"post_id":"cjw65m7gn001i3ivosbn94s01","tag_id":"cjw65m7gs001p3ivo79ho67jw","_id":"cjw65m7gv001v3ivooftlqv7y"}],"Tag":[{"name":"Python","_id":"cjw65m7fy00033ivo4p5ch5yo"},{"name":"Android","_id":"cjw65m7g100083ivocaz5sl5b"},{"name":"iOS","_id":"cjw65m7g4000c3ivo28rtrk9y"},{"name":"BeautifulSoup","_id":"cjw65m7g9000r3ivowgiyx5x2"},{"name":"js","_id":"cjw65m7gc00173ivou7frfcxr"},{"name":"Python2.7","_id":"cjw65m7gd001a3ivoohoox3vq"},{"name":"macOS","_id":"cjw65m7gd001c3ivopcngsjwu"},{"name":"ffmpeg","_id":"cjw65m7go001j3ivoshpsfchy"},{"name":"自动布局","_id":"cjw65m7gs001p3ivo79ho67jw"}]}}